import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,a as p}from"./app.d7a2c09a.js";const t={},e=p(`<h1 id="\u9762\u8BD5\u771F\u9898-2022" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u771F\u9898-2022" aria-hidden="true">#</a> \u9762\u8BD5\u771F\u9898 2022</h1><h2 id="\u5783\u573E\u56DE\u6536" tabindex="-1"><a class="header-anchor" href="#\u5783\u573E\u56DE\u6536" aria-hidden="true">#</a> \u5783\u573E\u56DE\u6536</h2><h3 id="\u80FD\u804A\u4E00\u4E0B-js-\u5783\u573E\u56DE\u6536\u673A\u5236\u5417" tabindex="-1"><a class="header-anchor" href="#\u80FD\u804A\u4E00\u4E0B-js-\u5783\u573E\u56DE\u6536\u673A\u5236\u5417" aria-hidden="true">#</a> \u80FD\u804A\u4E00\u4E0B js \u5783\u573E\u56DE\u6536\u673A\u5236\u5417\uFF1F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u4EE3\u7801\u5728 fn() \u6267\u884C\u540E\uFF0C&#39;aa&#39; \u4EE5\u53CA {x:100} \u8FD9\u4E24\u4E2A\u6570\u636E\u5C06\u5168\u90E8\u56DE\u6536\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span>obj <span class="token operator">=</span> obj<span class="token punctuation">;</span> <span class="token comment">// \u5783\u573E\uFF1F\uFF1F \u7B26\u5408\u7528\u6237\u9884\u671F\u5C31\u4E0D\u80FD\u7B97\u662F\u5783\u573E</span>
<span class="token punctuation">}</span>
<span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u4EE3\u7801 f2() \u6267\u884C\u540E\uFF0C {x:100} \u4E0D\u4F1A\u88AB\u56DE\u6536\uFF0C \u56E0\u4E3A window \u5BF9\u5176\u8FD8\u6709\u5F15\u7528\u3002</p><h2 id="js-\u5783\u573E\u56DE\u6536\u7B97\u6CD5\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#js-\u5783\u573E\u56DE\u6536\u7B97\u6CD5\u662F\u4EC0\u4E48" aria-hidden="true">#</a> JS \u5783\u573E\u56DE\u6536\u7B97\u6CD5\u662F\u4EC0\u4E48\uFF1F</h2><p>JS \u5783\u573E\u56DE\u6536\u5176\u5B9E\u5C31\u662F\u56DE\u6536\u90A3\u4E9B\u51FD\u6570\u5DF2\u7ECF\u6267\u884C\u5B8C\u6210\u518D\u4E5F\u7528\u4E0D\u5230\u7684\u5BF9\u8C61\u548C\u6570\u636E\u3002</p><h3 id="\u5F15\u7528\u8BA1\u6570-\u4E4B\u524D" tabindex="-1"><a class="header-anchor" href="#\u5F15\u7528\u8BA1\u6570-\u4E4B\u524D" aria-hidden="true">#</a> \u5F15\u7528\u8BA1\u6570\uFF08\u4E4B\u524D\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">//{ x: 100 } \u5F15\u7528\u8BA1\u6570+1</span>
<span class="token keyword">let</span> a1 <span class="token operator">=</span> a<span class="token punctuation">;</span> <span class="token comment">//{ x: 100 } \u5F15\u7528\u8BA1\u6570+1</span>
a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//{ x: 100 } \u5F15\u7528\u8BA1\u6570-1</span>
a1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">//{ x: 100 } \u5F15\u7528\u8BA1\u6570-1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ECF\u8FC7\u4E0A\u9762\u4EE3\u7801\u6267\u884C\uFF0C { x: 100 } \u5F15\u7528\u8BA1\u6570\u53D8\u6210\u4E86 0\uFF0C \u6B64\u65F6\u5C31\u4F1A\u88AB\u6E05\u9664\u3002</p><p>\u4F46\u662F\u5F15\u7528\u8BA1\u6570\u4F1A\u6709\u4E00\u4E2A\u7F3A\u9677\uFF0C\u5C31\u662F\u5FAA\u73AF\u5F15\u7528\u7684\u95EE\u9898\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  obj1<span class="token punctuation">.</span>a <span class="token operator">=</span> obj2<span class="token punctuation">;</span>
  obj2<span class="token punctuation">.</span>a <span class="token operator">=</span> obj1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">fn3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6 fn3 \u6267\u884C\u5B8C\uFF0C \u65E0\u6CD5\u6E05\u9664\u6570\u636E\u3002</p><p>\u5728 IE6-7 \u6709\u4E00\u4E2A\u7ECF\u5178\u7684\u5185\u5B58\u6CC4\u6F0F bug\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// IE6-7 \u5185\u5B58\u6CC4\u6F0F\u7684 bug</span>
<span class="token keyword">var</span> div1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
div1<span class="token punctuation">.</span>a <span class="token operator">=</span> div1<span class="token punctuation">;</span>
div1<span class="token punctuation">.</span>someBigData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">//\u5B58\u50A8\u4E86\u4E00\u4E2A\u5F88\u5927\u7684\u6570\u636E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5185\u5B58\u6CC4\u6F0F\u6307\u7684\u662F\u975E\u9884\u671F\u7684\u5185\u5B58\u65E0\u6CD5\u8FDB\u884C\u5783\u573E\u56DE\u6536\uFF0C\u5728\u9884\u671F\u5185\u7684\u5783\u573E\u56DE\u6536\uFF08\u5982\u95ED\u5305\uFF0Cwindow \u6302\u8F7D\uFF09\u4E0D\u7B97\u5185\u5B58\u6CC4\u6F0F\u3002</p><h3 id="\u6807\u8BB0\u6E05\u9664-\u73B0\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u6807\u8BB0\u6E05\u9664-\u73B0\u4EE3" aria-hidden="true">#</a> \u6807\u8BB0\u6E05\u9664\uFF08\u73B0\u4EE3\uFF09</h3><p>\u6807\u8BB0\u6E05\u9664\u4ECE JS \u6839 window \u53BB\u6DF1\u5EA6\u904D\u5386\u5404\u4E2A\u5C5E\u6027\uFF0C\u904D\u5386\u5B8C\u4E4B\u540E\uFF0C\u770B\u770B\u80FD\u4E0D\u80FD\u5F97\u5230\u67D0\u4E2A\u5BF9\u8C61\u3002\u5982\u679C\u5F97\u5230\u90A3\u5C31\u4FDD\u7559\uFF0C\u5982\u679C\u5F97\u4E0D\u5230\uFF0C\u90A3\u5C31\u5220\u9664\u3002</p><h2 id="\u5185\u5B58\u6CC4\u6F0F\u7684\u573A\u666F\u6709\u54EA\u4E9B-vue-\u4E3A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5185\u5B58\u6CC4\u6F0F\u7684\u573A\u666F\u6709\u54EA\u4E9B-vue-\u4E3A\u4F8B" aria-hidden="true">#</a> \u5185\u5B58\u6CC4\u6F0F\u7684\u573A\u666F\u6709\u54EA\u4E9B\uFF1F\uFF08Vue \u4E3A\u4F8B\uFF09</h2><ul><li>\u5168\u5C40\u53D8\u91CF\uFF08\u6302\u8F7D\u5230 window\uFF09\uFF0C\u51FD\u6570\u5F15\u7528</li><li>\u5168\u5C40\u4E8B\u4EF6\uFF0C\u5B9A\u65F6\u5668</li><li>\u81EA\u5B9A\u4E49\u4E8B\u4EF6</li></ul><h2 id="\u6570\u636E\u7ED3\u6784-\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784-\u7B97\u6CD5" aria-hidden="true">#</a> \u6570\u636E\u7ED3\u6784/\u7B97\u6CD5</h2><h3 id="\u4E8C\u5206\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u67E5\u627E" aria-hidden="true">#</a> \u4E8C\u5206\u67E5\u627E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u4E8C\u5206\u67E5\u627E\uFF08\u5FAA\u73AF\uFF09
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span> arr
 * <span class="token keyword">@param</span> <span class="token parameter">target</span> target
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">binarySearch1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">arr</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">target</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> number <span class="token punctuation">{</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> startIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u5F00\u59CB\u4F4D\u7F6E</span>
  <span class="token keyword">let</span> endIndex <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u7ED3\u675F\u4F4D\u7F6E</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>startIndex <span class="token operator">&lt;=</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> midIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>startIndex <span class="token operator">+</span> endIndex<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> midValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>midIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&lt;</span> midValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u76EE\u6807\u503C\u8F83\u5C0F\uFF0C\u5219\u7EE7\u7EED\u5728\u5DE6\u4FA7\u67E5\u627E</span>
      endIndex <span class="token operator">=</span> midIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&gt;</span> midValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u76EE\u6807\u503C\u8F83\u5927\uFF0C\u5219\u7EE7\u7EED\u5728\u53F3\u4FA7\u67E5\u627E</span>
      startIndex <span class="token operator">=</span> midIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u76F8\u7B49\uFF0C\u8FD4\u56DE</span>
      <span class="token keyword">return</span> midIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u4E8C\u5206\u67E5\u627E\uFF08\u9012\u5F52\uFF09
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span> arr
 * <span class="token keyword">@param</span> <span class="token parameter">target</span> target
 * <span class="token keyword">@param</span> <span class="token parameter">startIndex</span> start index
 * <span class="token keyword">@param</span> <span class="token parameter">endIndex</span> end index
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">binarySearch2</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">arr</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> number<span class="token punctuation">,</span>
  startIndex<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">,</span>
  endIndex<span class="token operator">?</span><span class="token operator">:</span> number</span>
<span class="token punctuation">)</span><span class="token operator">:</span> number <span class="token punctuation">{</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5F00\u59CB\u548C\u7ED3\u675F\u7684\u8303\u56F4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>startIndex <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> startIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>endIndex <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> endIndex <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5982\u679C start \u548C end \u76F8\u9047\uFF0C\u5219\u7ED3\u675F</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>startIndex <span class="token operator">&gt;</span> endIndex<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token comment">// \u4E2D\u95F4\u4F4D\u7F6E</span>
  <span class="token keyword">const</span> midIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>startIndex <span class="token operator">+</span> endIndex<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> midValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>midIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&lt;</span> midValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u76EE\u6807\u503C\u8F83\u5C0F\uFF0C\u5219\u7EE7\u7EED\u5728\u5DE6\u4FA7\u67E5\u627E</span>
    <span class="token keyword">return</span> <span class="token function">binarySearch2</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> target<span class="token punctuation">,</span> startIndex<span class="token punctuation">,</span> midIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&gt;</span> midValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u76EE\u6807\u503C\u8F83\u5927\uFF0C\u5219\u7EE7\u7EED\u5728\u53F3\u4FA7\u67E5\u627E</span>
    <span class="token keyword">return</span> <span class="token function">binarySearch2</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> target<span class="token punctuation">,</span> midIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u76F8\u7B49\uFF0C\u8FD4\u56DE</span>
    <span class="token keyword">return</span> midIndex<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// // // \u529F\u80FD\u6D4B\u8BD5</span>
<span class="token comment">// const arr = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]</span>
<span class="token comment">// const target = 40</span>
<span class="token comment">// // console.info(binarySearch2(arr, target))</span>

<span class="token comment">// // \u6027\u80FD\u6D4B\u8BD5</span>
<span class="token comment">// console.time(&#39;binarySearch1&#39;)</span>
<span class="token comment">// for (let i = 0; i &lt; 100 * 10000; i++) {</span>
<span class="token comment">//     binarySearch1(arr, target)</span>
<span class="token comment">// }</span>
<span class="token comment">// console.timeEnd(&#39;binarySearch1&#39;) // 17ms</span>
<span class="token comment">// console.time(&#39;binarySearch2&#39;)</span>
<span class="token comment">// for (let i = 0; i &lt; 100 * 10000; i++) {</span>
<span class="token comment">//     binarySearch2(arr, target)</span>
<span class="token comment">// }</span>
<span class="token comment">// console.timeEnd(&#39;binarySearch2&#39;) // 34ms</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED\u6700\u591A\u7684\u5B57\u7B26\u4EE5\u53CA\u6B21\u6570" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED\u6700\u591A\u7684\u5B57\u7B26\u4EE5\u53CA\u6B21\u6570" aria-hidden="true">#</a> \u83B7\u53D6\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED\u6700\u591A\u7684\u5B57\u7B26\u4EE5\u53CA\u6B21\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">IRes</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">char</span><span class="token operator">:</span> string
    <span class="token literal-property property">length</span><span class="token operator">:</span> number
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u6C42\u8FDE\u7EED\u6700\u591A\u7684\u5B57\u7B26\u548C\u6B21\u6570\uFF08\u5D4C\u5957\u5FAA\u73AF\uFF09
 * <span class="token keyword">@param</span> <span class="token parameter">str</span> str
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">findContinuousChar1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">str</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> IRes <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">res</span><span class="token operator">:</span> IRes <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">char</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> length <span class="token operator">=</span> str<span class="token punctuation">.</span>length
    <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res

    <span class="token keyword">let</span> tempLength <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u4E34\u65F6\u8BB0\u5F55\u5F53\u524D\u8FDE\u7EED\u5B57\u7B26\u7684\u957F\u5EA6</span>

    <span class="token comment">// O(n)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        tempLength <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u91CD\u7F6E</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> str<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                tempLength<span class="token operator">++</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> str<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">||</span> j <span class="token operator">===</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4E0D\u76F8\u7B49\uFF0C\u6216\u8005\u5DF2\u7ECF\u5230\u4E86\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u3002\u8981\u53BB\u5224\u65AD\u6700\u5927\u503C</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>tempLength <span class="token operator">&gt;</span> res<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    res<span class="token punctuation">.</span>char <span class="token operator">=</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
                    res<span class="token punctuation">.</span>length <span class="token operator">=</span> tempLength
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    i <span class="token operator">=</span> j <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// \u8DF3\u6B65</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">break</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u6C42\u8FDE\u7EED\u6700\u591A\u7684\u5B57\u7B26\u548C\u6B21\u6570\uFF08\u53CC\u6307\u9488\uFF09
 * <span class="token keyword">@param</span> <span class="token parameter">str</span> str
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">findContinuousChar2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">str</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> IRes <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">res</span><span class="token operator">:</span> IRes <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">char</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> length <span class="token operator">=</span> str<span class="token punctuation">.</span>length
    <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res

    <span class="token keyword">let</span> tempLength <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u4E34\u65F6\u8BB0\u5F55\u5F53\u524D\u8FDE\u7EED\u5B57\u7B26\u7684\u957F\u5EA6</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token comment">// O(n)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> str<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            tempLength<span class="token operator">++</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> str<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">||</span> i <span class="token operator">===</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E0D\u76F8\u7B49\uFF0C\u6216\u8005 i \u5230\u4E86\u5B57\u7B26\u4E32\u7684\u672B\u5C3E</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tempLength <span class="token operator">&gt;</span> res<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span>char <span class="token operator">=</span> str<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
                res<span class="token punctuation">.</span>length <span class="token operator">=</span> tempLength
            <span class="token punctuation">}</span>
            tempLength <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// reset</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                j <span class="token operator">=</span> i <span class="token comment">// \u8BA9 j \u201C\u8FFD\u4E0A\u201D i</span>
                i<span class="token operator">--</span> <span class="token comment">// \u7EC6\u8282</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> res
 <span class="token punctuation">}</span>

<span class="token comment">// // \u529F\u80FD\u6D4B\u8BD5</span>
<span class="token comment">// const str = &#39;aabbcccddeeee11223&#39;</span>
<span class="token comment">// console.info(findContinuousChar2(str))</span>

<span class="token comment">// let str = &#39;&#39;</span>
<span class="token comment">// for (let i = 0; i &lt; 100 * 10000; i++) {</span>
<span class="token comment">//     str += i.toString()</span>
<span class="token comment">// }</span>

<span class="token comment">// console.time(&#39;findContinuousChar1&#39;)</span>
<span class="token comment">// findContinuousChar1(str)</span>
<span class="token comment">// console.timeEnd(&#39;findContinuousChar1&#39;) // 219ms</span>

<span class="token comment">// console.time(&#39;findContinuousChar2&#39;)</span>
<span class="token comment">// findContinuousChar2(str)</span>
<span class="token comment">// console.timeEnd(&#39;findContinuousChar2&#39;) // 228ms</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u5FEB\u901F\u6392\u5E8F\uFF08\u4F7F\u7528 splice\uFF09
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span> number arr
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">quickSort1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">arr</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">;</span>

  <span class="token keyword">const</span> midIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> midValue <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>midIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token literal-property property">left</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">right</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// \u6CE8\u610F\uFF1A\u8FD9\u91CC\u4E0D\u7528\u76F4\u63A5\u7528 length \uFF0C\u800C\u662F\u7528 arr.length \u3002\u56E0\u4E3A arr \u5DF2\u7ECF\u88AB splice \u7ED9\u4FEE\u6539\u4E86</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> midValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5C0F\u4E8E midValue \uFF0C\u5219\u653E\u5728 left</span>
      left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5927\u4E8E midValue \uFF0C\u5219\u653E\u5728 right</span>
      right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">quickSort1</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>midValue<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">quickSort1</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u5FEB\u901F\u6392\u5E8F\uFF08\u4F7F\u7528 slice\uFF09
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span> number arr
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">quickSort2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">arr</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">;</span>

  <span class="token keyword">const</span> midIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> midValue <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>midIndex<span class="token punctuation">,</span> midIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token literal-property property">left</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">right</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!==</span> midIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> n <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> midValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u4E8E midValue \uFF0C\u5219\u653E\u5728 left</span>
        left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5927\u4E8E midValue \uFF0C\u5219\u653E\u5728 right</span>
        right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">quickSort2</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>midValue<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">quickSort2</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// // \u529F\u80FD\u6D4B\u8BD5</span>
<span class="token comment">// const arr1 = [1, 6, 2, 7, 3, 8, 4, 9, 5]</span>
<span class="token comment">// console.info(quickSort2(arr1))</span>

<span class="token comment">// // \u6027\u80FD\u6D4B\u8BD5</span>
<span class="token comment">// const arr1 = []</span>
<span class="token comment">// for (let i = 0; i &lt; 10 * 10000; i++) {</span>
<span class="token comment">//     arr1.push(Math.floor(Math.random() * 1000))</span>
<span class="token comment">// }</span>
<span class="token comment">// console.time(&#39;quickSort1&#39;)</span>
<span class="token comment">// quickSort1(arr1)</span>
<span class="token comment">// console.timeEnd(&#39;quickSort1&#39;) // 74ms</span>

<span class="token comment">// const arr2 = []</span>
<span class="token comment">// for (let i = 0; i &lt; 10 * 10000; i++) {</span>
<span class="token comment">//     arr2.push(Math.floor(Math.random() * 1000))</span>
<span class="token comment">// }</span>
<span class="token comment">// console.time(&#39;quickSort2&#39;)</span>
<span class="token comment">// quickSort2(arr2)</span>
<span class="token comment">// console.timeEnd(&#39;quickSort2&#39;) // 82ms</span>

<span class="token comment">// // \u5355\u72EC\u6BD4\u8F83 splice \u548C slice</span>
<span class="token comment">// const arr1 = []</span>
<span class="token comment">// for (let i = 0; i &lt; 10 * 10000; i++) {</span>
<span class="token comment">//     arr1.push(Math.floor(Math.random() * 1000))</span>
<span class="token comment">// }</span>
<span class="token comment">// console.time(&#39;splice&#39;)</span>
<span class="token comment">// arr1.splice(5 * 10000, 1)</span>
<span class="token comment">// console.timeEnd(&#39;splice&#39;)</span>
<span class="token comment">// const arr2 = []</span>
<span class="token comment">// for (let i = 0; i &lt; 10 * 10000; i++) {</span>
<span class="token comment">//     arr2.push(Math.floor(Math.random() * 1000))</span>
<span class="token comment">// }</span>
<span class="token comment">// console.time(&#39;slice&#39;)</span>
<span class="token comment">// arr2.slice(5 * 10000, 5 * 10000 + 1)</span>
<span class="token comment">// console.timeEnd(&#39;slice&#39;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5343\u5206\u4F4D\u683C\u5F0F\u5316" tabindex="-1"><a class="header-anchor" href="#\u5343\u5206\u4F4D\u683C\u5F0F\u5316" aria-hidden="true">#</a> \u5343\u5206\u4F4D\u683C\u5F0F\u5316</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u5343\u5206\u4F4D\u683C\u5F0F\u5316\uFF08\u4F7F\u7528\u6570\u7EC4\uFF09
 * <span class="token keyword">@param</span> <span class="token parameter">n</span> number
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">format1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">n</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  n <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u8003\u8651\u6574\u6570</span>

  <span class="token keyword">const</span> s <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> val<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>prev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> val <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> prev<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> val<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> val <span class="token operator">+</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u6570\u5B57\u5343\u5206\u4F4D\u683C\u5F0F\u5316\uFF08\u5B57\u7B26\u4E32\u5206\u6790\uFF09
 * <span class="token keyword">@param</span> <span class="token parameter">n</span> number
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">format2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">n</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  n <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u8003\u8651\u6574\u6570</span>

  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> s <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> j <span class="token operator">=</span> length <span class="token operator">-</span> i<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> res<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        res <span class="token operator">=</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> res<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      res <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// // \u529F\u80FD\u6D4B\u8BD5</span>
<span class="token comment">// const n = 10201004050</span>
<span class="token comment">// console.info(&#39;format1&#39;, format1(n))</span>
<span class="token comment">// console.info(&#39;format2&#39;, format2(n))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue" tabindex="-1"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h2><h3 id="\u4F60\u5728\u4F7F\u7528-vue-\u8FC7\u7A0B\u4E2D\u9047\u5230\u8FC7\u54EA\u4E9B\u5751" tabindex="-1"><a class="header-anchor" href="#\u4F60\u5728\u4F7F\u7528-vue-\u8FC7\u7A0B\u4E2D\u9047\u5230\u8FC7\u54EA\u4E9B\u5751" aria-hidden="true">#</a> \u4F60\u5728\u4F7F\u7528 Vue \u8FC7\u7A0B\u4E2D\u9047\u5230\u8FC7\u54EA\u4E9B\u5751\uFF1F</h3><p>\u4E3E\u4F8B\u946B\u8BDA\u70ED\u80FD \u4F1A\u5458\u79EF\u5206\u8FDB\u5EA6\u6761\uFF0C \u76F4\u63A5\u6E32\u67D3\u5C31\u662F\u6700\u7EC8\u7684\u8FDB\u5EA6\uFF0C\u65E0\u6CD5\u51FA\u73B0\u8FDB\u5EA6\u6761\u589E\u52A0\u7684\u8FC7\u6E21\u52A8\u753B\u3002 \u4F7F\u7528\u5230\u4E86 nexttick/setTimeout , \u5728 DOM \u6E32\u67D3\u5B8C\u6210\u540E\u518D\u8BBE\u7F6E\u6700\u7EC8\u7684\u8FDB\u5EA6\uFF0C\u6B64\u65F6\u5C31\u4F1A\u51FA\u73B0\u8FC7\u6E21\u52A8\u753B\u3002 \u53EF\u4EE5\u8BB2\u4E00\u4E9B\u6E90\u7801\u76F8\u5173\u7684\u5185\u5BB9\uFF0C\u6BD4\u5982 vue \u8BBE\u7F6E\u5C5E\u6027\u5E76\u4E0D\u662F\u6BCF\u6B21\u90FD\u89E6\u53D1\u66F4\u65B0\uFF0C \u800C\u662F\u5C06\u8FD9\u4E00\u6B21\u6240\u6709\u4FEE\u6539\u7684 watcher \u6536\u96C6\uFF0C \u5E76\u5728\u4E0B\u6B21\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u4F7F\u7528 Promise.then() \u8FDB\u884C\u66F4\u65B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
	<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
		<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token punctuation">{</span>
				<span class="token literal-property property">processRate</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
				<span class="token literal-property property">processLine</span><span class="token operator">:</span> <span class="token punctuation">{</span>
					<span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;0%&#39;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> processRate <span class="token operator">=</span> <span class="token number">66</span>
				<span class="token keyword">this</span><span class="token punctuation">.</span>processRate <span class="token operator">=</span> processRate
				<span class="token keyword">this</span><span class="token punctuation">.</span>processLine<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>processRate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vue2-\u548C-vue3-\u548C-react-\u4E09\u8005\u7684-diff-\u7B97\u6CD5\u6709\u4EC0\u4E48\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#vue2-\u548C-vue3-\u548C-react-\u4E09\u8005\u7684-diff-\u7B97\u6CD5\u6709\u4EC0\u4E48\u533A\u522B" aria-hidden="true">#</a> Vue2 \u548C Vue3 \u548C React \u4E09\u8005\u7684 diff \u7B97\u6CD5\u6709\u4EC0\u4E48\u533A\u522B\uFF1F</h3><ul><li>React diff \uFF08\u4EC5\u53F3\u79FB\uFF09</li><li>Vue2 \u53CC\u7AEF\u6BD4\u8F83</li><li>Vue3 \u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217</li></ul><h3 id="\u5982\u4F55\u7EDF\u4E00\u76D1\u542C-vue-\u7EC4\u4EF6\u62A5\u9519" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u7EDF\u4E00\u76D1\u542C-vue-\u7EC4\u4EF6\u62A5\u9519" aria-hidden="true">#</a> \u5982\u4F55\u7EDF\u4E00\u76D1\u542C Vue \u7EC4\u4EF6\u62A5\u9519\uFF1F</h3><h4 id="window-onerror" tabindex="-1"><a class="header-anchor" href="#window-onerror" aria-hidden="true">#</a> window.onerror</h4><ul><li>\u5168\u5C40\u76D1\u542C\u6240\u6709 JS \u9519\u8BEF</li><li>\u662F JS \u7EA7\u522B\u7684\uFF0C \u8BC6\u522B\u4E0D\u4E86 Vue \u7EC4\u4EF6\u4FE1\u606F</li><li>\u6355\u6349\u4E00\u4E9B Vue \u76D1\u542C\u4E0D\u5230\u7684\u9519\u8BEF</li></ul><h4 id="errorcaptured" tabindex="-1"><a class="header-anchor" href="#errorcaptured" aria-hidden="true">#</a> errorCaptured</h4><ul><li>\u76D1\u542C\u6240\u6709 <strong>\u4E0B\u7EA7</strong> \u7EC4\u4EF6\u9519\u8BEF</li><li>\u8FD4\u56DE false \u4F1A\u963B\u6B62\u5411\u4E0A\u4F20\u64AD</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;nav&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token operator">&gt;</span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span> <span class="token operator">|</span>
    <span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;/about&quot;</span><span class="token operator">&gt;</span>About<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>router<span class="token operator">-</span>view<span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> source<span class="token punctuation">,</span> line<span class="token punctuation">,</span> column<span class="token punctuation">,</span> error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;window.onerror----&#39;</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> source<span class="token punctuation">,</span> line<span class="token punctuation">,</span> column<span class="token punctuation">,</span> error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// window.addEventListener(&#39;error&#39;, event =&gt; {</span>
    <span class="token comment">//   console.info(&#39;window error&#39;, event)</span>
    <span class="token comment">// })</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">errorCaptured</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> info</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;errorCaptured----&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> info<span class="token punctuation">)</span>
    <span class="token comment">// return false</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="errorhandler" tabindex="-1"><a class="header-anchor" href="#errorhandler" aria-hidden="true">#</a> errorHandler</h4><ul><li>Vue \u5168\u5C40\u9519\u8BEF\u76D1\u542C\uFF0C\u6240\u6709\u7EC4\u4EF6\u9519\u8BEF\u90FD\u4F1A\u6C47\u603B\u5230\u8FD9\u91CC</li><li>\u4F46 errorCaptured \u8FD4\u56DE false\uFF0C \u4E0D\u4F1A\u4F20\u64AD\u5230\u8FD9\u91CC</li><li>\u5982\u679C errorHandler \u76D1\u542C\u5230\u9519\u8BEF\uFF0C \u5219\u4E0D\u4F1A\u518D\u5411 window.error \u4F20\u9012\uFF0C \u4E24\u8005\u4E92\u65A5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&quot;./App.vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&quot;./router&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function-variable function">errorHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> info</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;errorHandler----&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5F02\u6B65\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u9519\u8BEF" aria-hidden="true">#</a> \u5F02\u6B65\u9519\u8BEF</h4><ul><li>\u5F02\u6B65\u9519\u8BEF\u91CC\u7684\u56DE\u8C03\uFF0CerrorHandler \u76D1\u542C\u4E0D\u5230</li><li>\u9700\u8981\u4F7F\u7528 window.onerror</li></ul><h4 id="\u7B54\u6848" tabindex="-1"><a class="header-anchor" href="#\u7B54\u6848" aria-hidden="true">#</a> \u7B54\u6848</h4><ul><li>errorCaptured \u76D1\u542C\u4E0B\u7EA7\u7EC4\u4EF6\u9519\u8BEF\uFF0C\u8FD4\u56DE false \u963B\u6B62\u5411\u4E0A\u4F20\u64AD\uFF0C\u76D1\u542C\u4E00\u4E9B\u91CD\u8981\u3001\u6709\u98CE\u9669\u7EC4\u4EF6\u7684\u9519\u8BEF</li><li>errorHandler \u76D1\u542C\u5168\u5C40 Vue \u7EC4\u4EF6\u7684\u9519\u8BEF\uFF0C\u4E0E window.onerror \u4E92\u65A5\uFF08\u5019\u8865\u76D1\u542C\uFF09</li><li>window.onerror \u76D1\u542C\u5176\u5B83 JS \u9519\u8BEF\uFF0C \u5982 \u5F02\u6B65\uFF08\u5019\u8865\u76D1\u542C\uFF09</li></ul><h2 id="prefetch-\u548C-dns-prefetch-\u5206\u522B\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#prefetch-\u548C-dns-prefetch-\u5206\u522B\u662F\u4EC0\u4E48" aria-hidden="true">#</a> prefetch \u548C dns-prefetch \u5206\u522B\u662F\u4EC0\u4E48</h2><h3 id="prefetch" tabindex="-1"><a class="header-anchor" href="#prefetch" aria-hidden="true">#</a> prefetch</h3><p>preload \u8D44\u6E90\u5728\u5F53\u524D\u9875\u9762\u4F7F\u7528\uFF0C \u4F1A<strong>\u4F18\u5148</strong>\u52A0\u8F7D prefetch \u8D44\u6E90\u5728\u672A\u6765\u9875\u9762\u4F7F\u7528\uFF0C<strong>\u7A7A\u95F2\u65F6</strong>\u52A0\u8F7D</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/prefetch.png" alt="\u8F93\u5165\u56FE\u7247\u8BF4\u660E"></p><h3 id="dns-prefetch-\u548C-preconnect" tabindex="-1"><a class="header-anchor" href="#dns-prefetch-\u548C-preconnect" aria-hidden="true">#</a> dns-prefetch \u548C preconnect</h3><p>dns-prefetch \u5373 DNS \u9884\u67E5\u8BE2 preconnect \u5373 DNS \u9884\u8FDE\u63A5</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/preload.png" alt="\u8F93\u5165\u56FE\u7247\u8BF4\u660E"></p><h3 id="\u7B54\u6848-1" tabindex="-1"><a class="header-anchor" href="#\u7B54\u6848-1" aria-hidden="true">#</a> \u7B54\u6848</h3><ul><li>prefetch \u662F\u8D44\u6E90\u9884\u83B7\u53D6\uFF08\u548C preload \u76F8\u5173)</li><li>dns-prefetch \u662F DNS \u9884\u67E5\u8BE2(\u548C preconnect \u76F8\u5173)</li></ul><h2 id="\u624B\u5199-js-\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199-js-\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> \u624B\u5199 JS \u6DF1\u62F7\u8D1D</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u6DF1\u62F7\u8D1D
 * <span class="token keyword">@param</span> <span class="token parameter">obj</span> obj
 * <span class="token keyword">@param</span> <span class="token parameter">map</span> weakmap \u4E3A\u4E86\u907F\u514D\u5FAA\u73AF\u5F15\u7528
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> any<span class="token punctuation">,</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">||</span> obj <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj<span class="token punctuation">;</span>

  <span class="token comment">// \u907F\u514D\u5FAA\u73AF\u5F15\u7528</span>
  <span class="token keyword">const</span> objFromMap <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>objFromMap<span class="token punctuation">)</span> <span class="token keyword">return</span> objFromMap<span class="token punctuation">;</span>

  <span class="token keyword">let</span> <span class="token literal-property property">target</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Map</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    obj<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> v1 <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> k1 <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
      target<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>k1<span class="token punctuation">,</span> v1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Set</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Set</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    obj<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> v1 <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
      target<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Array</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    target <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Object</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> val <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> val1 <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
    target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val1<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// // \u529F\u80FD\u6D4B\u8BD5</span>
<span class="token comment">// const a: any = {</span>
<span class="token comment">//     set: new Set([10, 20, 30]),</span>
<span class="token comment">//     map: new Map([[&#39;x&#39;, 10], [&#39;y&#39;, 20]]),</span>
<span class="token comment">//     info: {</span>
<span class="token comment">//         city: &#39;\u5317\u4EAC&#39;</span>
<span class="token comment">//     },</span>
<span class="token comment">//     fn: () =&gt; { console.info(100) }</span>
<span class="token comment">// }</span>
<span class="token comment">// a.self = a</span>
<span class="token comment">// console.log( cloneDeep(a) )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,61),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","\u9762\u8BD5\u771F\u98982022.html.vue"]]);export{k as default};
