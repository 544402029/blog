import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,a as t}from"./app.d7a2c09a.js";const e={},p=t(`<h1 id="\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u6B63\u5219\u8868\u8FBE\u5F0F</h1><h2 id="\u521B\u5EFA\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u65B9\u5F0F" aria-hidden="true">#</a> \u521B\u5EFA\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u65B9\u5F0F</h2><p>\u521B\u5EFA\u6B63\u5219\u8868\u8FBE\u5F0F\u4E00\u822C\u6709\u4E24\u79CD\u65B9\u5F0F</p><ol><li>\u5B57\u9762\u91CF <code>/js/</code></li><li>\u6784\u9020\u51FD\u6570 <code>new RegExp()</code></li></ol><h2 id="\u5339\u914D\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5339\u914D\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5339\u914D\u5B57\u7B26\u4E32</h2><h3 id="test" tabindex="-1"><a class="header-anchor" href="#test" aria-hidden="true">#</a> test</h3><p>\u4F7F\u7528test()\u53EF\u4EE5\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;I love js&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">js</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
    <span class="token comment">//test</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exec" tabindex="-1"><a class="header-anchor" href="#exec" aria-hidden="true">#</a> exec</h3><p>\u4F7F\u7528exec()\u8FD4\u56DE\u5339\u914D\u5230\u7684\u6570\u636E</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;I love js&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">js</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
    <span class="token comment">//exec</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//[&quot;js&quot;, index: 7, input: &quot;I love js&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6A21\u5F0F\u4FEE\u9970\u7B26" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F\u4FEE\u9970\u7B26" aria-hidden="true">#</a> \u6A21\u5F0F\u4FEE\u9970\u7B26</h3><p>i \u4E0D\u533A\u5206\u5927\u5C0F\u5199 g \u5168\u5C40\u641C\u7D22 m \u591A\u884C\u641C\u7D22</p><h2 id="\u8F6C\u4E49\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u4E49\u5B57\u7B26" aria-hidden="true">#</a> \u8F6C\u4E49\u5B57\u7B26</h2><p>\u5982\u679C\u6211\u4EEC\u9700\u8981\u5339\u914D\u7279\u6B8A\u5B57\u7B26\uFF0C \u5C31\u9700\u8981\u8F6C\u4E49 \u3002 \u7528<code>\\</code>\u8FDB\u884C\u8F6C\u4E49</p><p>\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;//\u6211\u662F\u6CE8\u91CA&#39;</span>
    <span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/</span><span class="token regex-delimiter">/</span></span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//[&quot;/&quot;, index: 0, input: &quot;//\u6211\u662F\u6CE8\u91CA&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u6709\u5176\u5B83\u51E0\u79CD\u7279\u6B8A\u5B57\u7B26\uFF1A</p><p>\u5982<code>\\n</code>, \u5339\u914D\u6362\u884C\u7B26 \u4E5F\u53EF\u4EE5\u4F7F\u7528<code>\\xOA</code><code>\\t</code>\uFF0C \u5339\u914D\u5236\u8868\u7B26 \u4E5F\u53EF\u4EE5\u7528<code>\\u0009</code></p><h2 id="\u5B57\u7B26\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u7C7B" aria-hidden="true">#</a> \u5B57\u7B26\u7C7B</h2><p>\u6211\u4EEC\u901A\u8FC7<code>[]</code>\u6765\u5199\u5B57\u7B26\u7C7B</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;javascript&#39;</span>
    <span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[sjwelsls]</span><span class="token regex-delimiter">/</span></span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//[&quot;j&quot;, index: 0, input: &quot;javascript&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u5B57\u7B26\u7C7B\u6211\u4EEC\u53EA\u9700\u8981\u5339\u914D\u5230\u5176\u4E2D\u4E00\u4E2A\u5B57\u7B26\u3002\u8FD4\u56DE\u7684\u662F\u5339\u914D\u5230\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u3002</p><h3 id="\u53D6\u53CD" tabindex="-1"><a class="header-anchor" href="#\u53D6\u53CD" aria-hidden="true">#</a> \u53D6\u53CD</h3><p>\u6211\u4EEC\u4F7F\u7528<code>^</code>\u6765\u8FDB\u884C\u53D6\u53CD</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;javascript&#39;</span>
    <span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^sj]</span><span class="token regex-delimiter">/</span></span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//[&quot;a&quot;, index: 1, input: &quot;javascript&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\uFF0C \u5339\u914D\u5230\u4E86a\uFF0C \u4E0D\u4F1A\u53BB\u5339\u914Ds\u548Cj</p><h3 id="\u8303\u56F4\u8F93\u5165" tabindex="-1"><a class="header-anchor" href="#\u8303\u56F4\u8F93\u5165" aria-hidden="true">#</a> \u8303\u56F4\u8F93\u5165</h3><p>\u6211\u4EEC\u4F7F\u7528<code>-</code>\u6765\u8FDE\u63A5\u8F93\u5165\u7684\u8303\u56F4</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;javascript&#39;</span>
    <span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-z]</span><span class="token regex-delimiter">/</span></span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//[&quot;j&quot;, index: 0, input: &quot;javascript&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\uFF0C a\u5230z\u4E4B\u95F4\u7684\u5B57\u7B26\u5168\u90FD\u80FD\u5339\u914D\u5230\u3002\u5982\u679C\u4E5F\u60F3\u5339\u914D\u5927\u5199A-Z, \u53EA\u9700\u8981\u8FD9\u6837\u5199<code>/[a-zA-Z]/</code>\u3002</p><p>\u5339\u914D\u4E2D\u6587\uFF1A <code>/[\\u4e00-\\u9fa5]/</code></p><h3 id="\u5E38\u7528\u5B57\u7B26\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u5B57\u7B26\u7C7B" aria-hidden="true">#</a> \u5E38\u7528\u5B57\u7B26\u7C7B</h3><p>\u4E00\u822C\u5927\u5199\u5B57\u7B26\u90FD\u662F\u5C0F\u5199\u5B57\u7B26\u7684\u53D6\u53CD\u3002\u5982<code>w</code>\u548C<code>W</code>\u3002</p><p><code>/./</code> \u7B26\u53F7.\u53EF\u4EE5\u5339\u914D\u5230\u6362\u884C\u7B26\u4EE5\u5916\u6240\u6709\u5B57\u7B26\u3002 <code>/[^/n]/</code>\u7684\u7B80\u5199\u3002 <code>w/</code> \u5B57\u7B26w\u53EF\u4EE5\u5339\u914Da-zA-Z0-9_\u4E4B\u95F4\u7684\u5B57\u7B26\u3002 <code>/[a-zA-Z0-9_]/</code>\u7684\u7B80\u5199\u3002 <code>/W/</code> \u5927\u5199\u5B57\u7B26W\u53EF\u4EE5\u5339\u914Da-zA-Z0-9_\u8303\u56F4\u4E4B\u5916\u7684\u5B57\u7B26\u3002 <code>/[^a-zA-Z0-9_]/</code>\u7684\u7B80\u5199\u3002 <code>/d/</code> \u5B57\u7B26d\u53EF\u4EE5\u5339\u914D0-9\u4E4B\u95F4\u7684\u5B57\u7B26\u3002<code>/[0-9]/</code>\u7684\u7B80\u5199\u3002 <code>/\\s/</code> \\s\u7528\u6765\u5339\u914D\u5236\u8868\u7B26\u548C\u7A7A\u683C\u3002</p><h3 id="\u91CD\u590D" tabindex="-1"><a class="header-anchor" href="#\u91CD\u590D" aria-hidden="true">#</a> \u91CD\u590D</h3><p>\u6211\u4EEC\u5982\u679C\u60F3\u5339\u914D\u91CD\u590D\u7684\u5B57\u7B26\u53EF\u4EE5\u8FD9\u6837\u5199\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    var str = &#39;110&#39;
    var pattern = /\\d{2}/
    console.log(pattern.exec(str));
    //[&quot;11&quot;, index: 0, input: &quot;110&quot;, groups: undefined]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5339\u914D\u7684\u5B57\u7B26\u540E\u9762\u6DFB\u52A0{2}\u5C31\u53EF\u4EE5\u5339\u914D\u52302\u4F4D\u7B26\u5408\u6761\u4EF6\u7684\u5B57\u7B26\u3002</p><p>\u6211\u4EEC\u4E0D\u4EC5\u53EF\u4EE5\u5199\u5165\u8981\u5339\u914D\u5B57\u7B26\u7684\u957F\u5EA6\uFF0C \u4E5F\u53EF\u4EE5\u5199\u4E00\u4E2A\u8303\u56F4 \u5982<code>{1,3}</code>\u3002(\u4E00\u5B9A\u4E0D\u8981\u5728{1,3}\u4E4B\u95F4\u6DFB\u52A0\u7A7A\u683C) \u5339\u914D\u5927\u4E8E\u7B49\u4E8E1\u7684\u957F\u5EA6 <code>{1,}</code></p><h4 id="\u7B80\u5199\u5F62\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5199\u5F62\u5F0F" aria-hidden="true">#</a> \u7B80\u5199\u5F62\u5F0F\uFF1A</h4><p><code>?</code> \u8868\u793A0\u4E2A\u81F31\u4E2A\u3002 <code>/\\d{0,1}/</code><code>+</code> \u8868\u793A\u5927\u4E8E\u7B49\u4E8E1\u3002 <code>/\\d{1,}/</code><code>*</code> \u8868\u793A0\u6B21\u81F3\u591A\u6B21 \`\`/\\d{0,}/\`</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;\u80AF\u5FB7\u57FA\u8C6A\u534E\u5348\u9910 \uFFE515.5\uFF01&#39;</span>
    <span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+\\.?\\d*</span><span class="token regex-delimiter">/</span></span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//[&quot;15.5&quot;, index: 9, input: &quot;\u80AF\u5FB7\u57FA\u8C6A\u534E\u5348\u9910 \uFFE515.5\uFF01&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8D2A\u5A6A\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5A6A\u5339\u914D" aria-hidden="true">#</a> \u8D2A\u5A6A\u5339\u914D</h3><p>\u5982\u679C\u6309\u7167\u4E0A\u9762\u7684\u91CD\u590D\u5339\u914D\uFF0C \u6B63\u5219\u8868\u8FBE\u5F0F\u5C31\u4F1A\u5C3D\u53EF\u80FD\u591A\u7684\u53BB\u5339\u914D\u5B57\u7B26\uFF0C\u8FD9\u4E2A\u53EB\u505A\u8D2A\u5A6A\u5339\u914D\u3002</p><p>\u5982\u679C\u6211\u4EEC\u4E0D\u60F3\u8FD9\u6837\uFF0C \u53EA\u60F3\u5C3D\u53EF\u80FD\u5C11\u7684\u5339\u914D(\u8981\u7B26\u5408\u6761\u4EF6)\u3002\u8FD9\u65F6\u6211\u4EEC\u4E00\u822C\u4F7F\u7528<code>?</code>\u6765\u5199\uFF0C\u8868\u8FBE\u975E\u8D2A\u5A6A\u5339\u914D\u3002</p><p>\u5982<code>\\a??\\</code>\u6216<code>/a{0,1}?/</code>\u3002</p><p>\u4EE5\u4E0B\u4E3A\u7B80\u5355\u5730\u51E0\u4E2A\u4F8B\u5B50\uFF1A</p><p>\u8D2A\u5A6A\u5339\u914D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;aaab&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a+?b</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//[&quot;aaab&quot;, index: 0, input: &quot;aaab&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u867D\u7136\u8FD9\u662F\u4E00\u4E2A\u975E\u8D2A\u5A6A\u5339\u914D\uFF0C \u4F46\u662F\u5B83\u8981\u7B26\u5408\u6761\u4EF6\u7684\u624D\u53EF\u4EE5\uFF0C \u53EA\u662F\u5C3D\u53EF\u80FD\u7684\u53BB\u5C11\u5339\u914D\u3002\u4EE5\u4E0A\u4F1A\u5339\u914D\u5230aaab\u3002</p><p>\u8D2A\u5A6A\u5339\u914D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;td&gt;&lt;p&gt;a&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;b&lt;/p&gt;&lt;/td&gt;&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;td&gt;.*&lt;\\/td&gt;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//[&quot;&lt;td&gt;&lt;p&gt;a&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;b&lt;/p&gt;&lt;/td&gt;&quot;, index: 0, input: &quot;&lt;td&gt;&lt;p&gt;a&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;b&lt;/p&gt;&lt;/td&gt;&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u975E\u8D2A\u5A6A\u5339\u914D\uFF1A \u5339\u914D\u7B2C\u4E00\u4E2Atd\u6807\u7B7E\u4E4B\u95F4\u5B57\u7B26</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>	var str = &#39;&lt;td&gt;&lt;p&gt;a&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;b&lt;/p&gt;&lt;/td&gt;&#39;;
	var pattern = /&lt;td&gt;.*?&lt;\\/td&gt;/;
	console.log(pattern.exec(str));
	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\uFF1A</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220805091856678.png" alt="image-20220805091856678"></p><h2 id="\u9009\u62E9\u3001\u5206\u7EC4\u548C\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u3001\u5206\u7EC4\u548C\u5F15\u7528" aria-hidden="true">#</a> \u9009\u62E9\u3001\u5206\u7EC4\u548C\u5F15\u7528</h2><h3 id="\u9009\u62E9" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9" aria-hidden="true">#</a> \u9009\u62E9</h3><p>\u4E00\u822C\u6211\u4EEC\u901A\u8FC7|\u6765\u8868\u793A\u6216\uFF0C \u53EA\u8981\u5339\u914D\u5230\u4E00\u4E2A\u5C31\u8FD4\u56DE\uFF0C\u540E\u9762\u7684\u8FDB\u884C\u5FFD\u7565\u3002 \u5982<code>/html|css|js/</code>\u3002</p><h3 id="\u5206\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5206\u7EC4" aria-hidden="true">#</a> \u5206\u7EC4</h3><p>\u4E00\u822C\u6211\u4EEC\u901A\u8FC7<code>()</code>\u6765\u8FDB\u884C\u5206\u7EC4</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;abab&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">ab+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//[&quot;ab&quot;, index: 0, input: &quot;abab&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u53EA\u80FD\u5339\u914D\u4E00\u4E2Aab\uFF0C\u56E0\u4E3A<code>+</code>\u53EA\u5BF9b\u8D77\u4F5C\u7528</p><p>\u5982\u679C\u60F3\u5339\u914Dab\u591A\u4E2A\u53EF\u4EE5\u52A0\u4E0A\u62EC\u53F7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;abab&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(ab)+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220805091949273.png" alt=""></p><p>\u5B83\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u91CC\u9762\u7B2C\u4E00\u9879\u662Fabab\uFF0C \u800C\u7B2C\u4E8C\u9879\u5C31\u662F\u62EC\u53F7\u62EC\u8D77\u6765\u7684\u5B57\u7B26\u5339\u914D\uFF08\u6355\u83B7\u6027\u5206\u7EC4\uFF09</p><p>\u5982\u679C\u4E0D\u60F3\u6355\u83B7\uFF0C \u53EF\u4EE5\u52A0\u4E0A?:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;abcd&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?:ab)c</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u591A\u4E2A\u62EC\u53F7\u5339\u914D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;abcd&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(a(b(c)))</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u62EC\u53F7\u4ECE\u5DE6\u5230\u53F3\u8FDB\u884C\u5339\u914D</p><p>\u5339\u914D\u5F00\u59CB\u4E0E\u7ED3\u5C3E\u4E00\u81F4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;p&gt;&lt;a&gt;\u8FD9\u662F\u4E00\u6BB5\u6587\u5B57&lt;/a&gt;&lt;/p&gt;&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;([a-zA-Z]+)&gt;(.*?)&lt;\\/\\1&gt;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><p>\\1\u6807\u8BC6\u7B2C\u4E00\u4E2A\u62EC\u53F7\u5305\u62EC\u7684\u5185\u5BB9\uFF0C \u4F7F\u7528\\1\u53EF\u4EE5\u4FDD\u8BC1\u4E0E\u7B2C\u4E00\u4E2A\u62EC\u53F7\u91CC\u7684\u5185\u5BB9\u5B8C\u5168\u4E00\u81F4\u3002</p><h2 id="\u4F4D\u7F6E\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u4F4D\u7F6E\u5339\u914D" aria-hidden="true">#</a> \u4F4D\u7F6E\u5339\u914D</h2><h3 id="\u9996\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u9996\u5339\u914D" aria-hidden="true">#</a> \u9996\u5339\u914D</h3><p>\u4F7F\u7528^\u53EF\u4EE5\u505A\u5230\u9996\u5339\u914D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;html js&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> str1<span class="token operator">=</span> <span class="token string">&#39;js&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^js</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//null</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[&quot;js&quot;, index: 0, input: &quot;js&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C3E\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u5C3E\u5339\u914D" aria-hidden="true">#</a> \u5C3E\u5339\u914D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;html js css&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&#39;html js&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//null</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[&quot;js&quot;, index: 5, input: &quot;html js&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4F55\u4FDD\u8BC1\u8F93\u5165\u5B57\u7B26\u5168\u662F\u6570\u5B57\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;110119120&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5168\u662F\u6570\u5B57\uFF01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0D\u5168\u662F\u6570\u5B57\uFF01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u53EF\u4EE5\u8FD9\u4E48\u5199\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;11011a9120&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\D</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0D\u5168\u662F\u6570\u5B57\uFF01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5168\u662F\u6570\u5B57\uFF01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5355\u8BCD\u8FB9\u754C\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u5355\u8BCD\u8FB9\u754C\u5339\u914D" aria-hidden="true">#</a> \u5355\u8BCD\u8FB9\u754C\u5339\u914D</h3><p>\\b\u5339\u914D\u5355\u8BCD\u8FB9\u754C\uFF0C\u8868\u793A\u7684\u5C31\u662F\\w\u548C\\W\u4E4B\u95F4\u7684\u4F4D\u7F6E\u3002 \u5E94\u7528\u573A\u666F\uFF1A\u5F53\u5143\u7D20\u6709\u591A\u4E2A\u7C7B\u540D\u65F6\uFF0C\u5339\u914D\u5176\u4E2D\u7684\u4E00\u4E2A\u7C7B\u540D\uFF08\u6709\u4E09\u79CD\u4F4D\u7F6E\uFF1A\u884C\u9996\u3001\u884C\u5C3E\u3001\u4E2D\u95F4)\u3002 \u5728\u6784\u9020\u51FD\u6570\u53C2\u6570\u4E2D\u7684\u8F6C\u4E49\u5B57\u7B26\u90FD\u8981\u8FDB\u884C\u53CC\u91CD\u8F6C\u4E49\u3002 \u5982\u679C\u6B63\u5219\u91CC\u9762\u4E3A\u7A7A\u53EF\u4EE5\u5339\u914D\u4EFB\u4F55\u5B57\u7B26\u4E32\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;js html&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> str1 <span class="token operator">=</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">js\\b</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[&quot;js&quot;, index: 0, input: &quot;js html&quot;, groups: undefined]</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[&quot;js&quot;, index: 0, input: &quot;js&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;@@@js@@@&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\bjs\\b</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//[&quot;js&quot;, index: 3, input: &quot;@@@js@@@&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5339\u914D\u5230\u4E86\u4E24\u4E2A@\u4E4B\u95F4js\u7684\u4F4D\u7F6E</p><p>\u5339\u914D\u4E00\u4E2Aclass\u7C7B\u540D</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>odd2      odd    <span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>even<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>odd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>even<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> oddP <span class="token operator">=</span> <span class="token function">getByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;odd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> evenP <span class="token operator">=</span> <span class="token function">getByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;even&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> oddP<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		oddP<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> evenP<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		evenP<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">function</span> <span class="token function">getByClassName</span><span class="token punctuation">(</span><span class="token parameter">className<span class="token punctuation">,</span> parentNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>getElementsByClassName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			parentNode <span class="token operator">=</span> parentNode <span class="token operator">||</span> document<span class="token punctuation">;</span>
			<span class="token keyword">var</span> nodeList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">var</span> allNodes <span class="token operator">=</span> parentNode<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;\\\\b&#39;</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">&#39;\\\\b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> allNodes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>allNodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					nodeList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>allNodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">return</span> nodeList<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u4E86<code>new RegExp(&#39;\\\\b&#39; + className + &#39;\\\\b&#39;)</code>\uFF0C \u6784\u9020\u51FD\u6570\u7684s\u9700\u8981\u53CC\u91CD\u8F6C\u4E49\uFF0C \u9700\u8981\u52A0\u4E24\u4E2A\\\u659C\u6760\u3002</p><p>\u6B64\u6B21\u5339\u914D\u4E0D\u4EC5\u80FD\u5339\u914D\u5230\u4EE5odd\u5F00\u59CB\uFF0C \u4E5F\u53EF\u4EE5\u5339\u914D\u5230odd\u5728\u4E2D\u95F4\uFF0C \u6216\u8005\u5728\u672B\u5C3E\u3002\u53EA\u8981odd\u662F\u4E00\u4E2A\u5355\u72EC\u7684\u5355\u8BCD\u5373\u53EF\u3002</p><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220805092321719.png" alt="image-20220805092321719"></p><h3 id="\u524D\u77BB\u6027\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u524D\u77BB\u6027\u5339\u914D" aria-hidden="true">#</a> \u524D\u77BB\u6027\u5339\u914D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;java&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&#39;javascript&#39;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">java(?=script)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u6709java\u540E\u9762\u8DDF\u7684\u662Fscript\u624D\u53EF\u4EE5\u5339\u914D\u5230\uFF0C\u7528?=\u6765\u8FDB\u884C\u5339\u914D</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220805092338872.png" alt="image-20220805092338872"></p><h3 id="\u8D1F\u5411\u524D\u77BB\u6027\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u8D1F\u5411\u524D\u77BB\u6027\u5339\u914D" aria-hidden="true">#</a> \u8D1F\u5411\u524D\u77BB\u6027\u5339\u914D</h3><p>\u4E0E\u524D\u77BB\u6027\u5339\u914D\u76F8\u53CD\u7684\u662F\u8D1F\u5411\u524D\u77BB\u6027\u5339\u914D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;java&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&#39;javascript&#39;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">java(?!script)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u7528?!\u6765\u8FDB\u884C\u5339\u914D\uFF0C\u8868\u793A\u540E\u9762\u8DDF\u7684\u4E0D\u662Fscript\u624D\u53EF\u4EE5\u5339\u914D\u5230\u3002</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220805092354679.png" alt="image-20220805092354679"></p><h2 id="regexp\u5BF9\u8C61\u7684\u5B9E\u4F8B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#regexp\u5BF9\u8C61\u7684\u5B9E\u4F8B\u65B9\u6CD5" aria-hidden="true">#</a> RegExp\u5BF9\u8C61\u7684\u5B9E\u4F8B\u65B9\u6CD5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;\\\\b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\\\</span><span class="token regex-delimiter">/</span></span>
	<span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;\\\\\\\\&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u8C28\u8BB0\uFF0C \u6784\u9020\u51FD\u6570\u7684\u6B63\u5219\u9700\u8981\u53CC\u91CD\u8F6C\u4E49\uFF0C \u5982\u679C\u6784\u9020\u51FD\u6570\u60F3\u8981\u5339\u914D\u4E00\u4E2A<code>\\</code>\uFF0C \u9700\u8981\u4F7F\u75284\u4E2A<code>\\</code>\u6765\u8FDB\u884C\u5339\u914D\u3002</p><h3 id="\u5B9E\u4F8B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u4F8B\u65B9\u6CD5</h3><p>test(),exec()\u90FD\u662F\u6B63\u5219\u7684\u5B9E\u4F8B\u65B9\u6CD5\u3002</p><p>\u4E00\u822C\u6765\u8BF4exec\u53EA\u5339\u914D\u5230\u7B2C\u4E00\u4E2A\u5339\u914D\u7684\u5B57\u7B26\u3002 \u5982\u679C\u60F3\u7EE7\u7EED\u5411\u4E0B\u5339\u914D\u53EF\u4EE5\u589E\u52A0<code>g</code>\u4FEE\u9970\u7B26\u3002</p><p>\u5982\u679C\u5339\u914D\u5230\u672B\u5C3E\u7EE7\u7EED\u8FDB\u884C\u5339\u914D\uFF0C \u4F1A\u91CD\u65B0\u5339\u914D\u4F1A\u7B2C\u4E00\u4E2A\u3002</p><h3 id="\u6B63\u5219\u76F8\u5173\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u76F8\u5173\u65B9\u6CD5" aria-hidden="true">#</a> \u6B63\u5219\u76F8\u5173\u65B9\u6CD5</h3><h4 id="search-\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#search-\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> search(\u6B63\u5219\u8868\u8FBE\u5F0F);</h4><p>//\u5224\u65AD\u662F\u5426\u5B58\u5728\u8BE5\u6B63\u5219\u5339\u914D\u7684\u5B57\u7B26\u4E32\uFF0C\u6709\u4E00\u4E2A\u5219\u8FD4\u56DE\u5339\u914D\u5230\u7684\u4F4D\u7F6E\u7684\u7D22\u5F15\u3002 \u627E\u4E0D\u5230\u8FD4\u56DE-1\uFF1B\u6709\u591A\u4E2A\uFF0C\u4F9D\u7136\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u7D22\u5F15\uFF0C\u4E0Eg\u5168\u5C40\u5339\u914D\u65E0\u5173\u7D27\u8981\u3002\u53C2\u6570\u53EF\u4EE5\u4E3A\u5B57\u7B26\u4E32\uFF0C\u4F46\u8BE5\u5B57\u7B26\u4E32\u6700\u7EC8\u8FD8\u662F\u4F1A\u8F6C\u5316\u4E3A\u6B63\u5219\u6765\u5224\u65AD\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;html js js&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">js</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//5</span>

	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;html js js&#39;</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="match-\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#match-\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> match(\u6B63\u5219\u8868\u8FBE\u5F0F);</h4><p>//\u8FD4\u56DE\u4E00\u4E2A\u5339\u914D\u7684\u6570\u7EC4\uFF0C\u548Cexec()\u65B9\u6CD5\u7C7B\u4F3C\uFF1B\u4E0D\u540C\u7684\u5730\u65B9\u4EC5\u5728\u4E8E\uFF1A\u5168\u5C40\u5339\u914D\u65F6\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u4E00\u6B21\u6027\u8FD4\u56DE\u6240\u6709\u5339\u914D\u7684\u5B57\u7B26\u4E32\u5728\u4E00\u4E2A\u6570\u7EC4\u4E2D\uFF0C\u5E76\u4E14\u4E0D\u4F1A\u8FD4\u56DE\u5206\u7EC4\u5339\u914D\u5230\u7684\u5B57\u7B26\u4E32\u3002</p><p>match\uFF1A\u975E\u5168\u5C40\u7684\u60C5\u51B5\u4E0B\u624D\u4F1A\u8FD4\u56DE\u5206\u7EC4\u4E2D\u5339\u914D\u5230\u7684\u5185\u5BB9\uFF0C\u5168\u5C40\u5339\u914D\u53EA\u80FD\u5339\u914D\u5230\u6240\u6709\u5339\u914D\u5230\u7684\u5B57\u7B26\uFF08\u4E0D\u8FD4\u56DE\u5206\u7EC4\u5339\u914D\u5230\u7684\u5B57\u7B26\uFF09\u3002</p><p>exec\uFF1A\u65E0\u8BBA\u662F\u5426\u5168\u5C40\u5339\u914D\u90FD\u4F1A\u8FD4\u56DE\u5206\u7EC4\u4E2D\u5339\u914D\u5230\u7684\u5185\u5BB9\uFF0C\u5E76\u4E14\u90FD\u53EA\u4F1A\u8FD4\u56DE\u5F53\u524D\u5339\u914D\u5230\u7684\u4E00\u4E2A\u5185\u5BB9\uFF0C\u800C\u4E0D\u662F\u5168\u90E8\u8FD4\u56DE\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;js js js&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(j)s</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220805092412429.png" alt="image-20220805092412429"></p><p>\u6709\u6362\u884C\u7684\u5730\u65B9\u624D\u4F1A\u7528\u5230m\u591A\u884C\u5339\u914D\u3002\u4E00\u822C\u4F1A\u548Cg\u8FDE\u7528\u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u662F\u90FD\u6709\u591A\u884C\u5339\u914D\u7684\u3002\u4E00\u822C\u4E0E $\u6216^ \u5B58\u5728\u7684\u65F6\u5019\u624D\u4F1A\u53D1\u6325\u4F5C\u7528\u3002</p><h4 id="split" tabindex="-1"><a class="header-anchor" href="#split" aria-hidden="true">#</a> split();</h4><p>//\u8BE5\u5B57\u7B26\u4E32\u65B9\u6CD5\u662F\u5C06\u53C2\u6570\u6240\u8868\u793A\u7684\u5B57\u7B26\u4F5C\u4E3A\u5206\u5272\u6210\u591A\u4E2A\u6570\u7EC4\u5143\u7D20\u7684\u6807\u5FD7\uFF0C\u8BE5\u5B57\u7B26\u4E32\u65B9\u6CD5\u4F20\u5165\u6B63\u5219\u8868\u8FBE\u5F0F\u4E5F\u53EF\u4F7F\u7528\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;html ,   css  ,   js&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s*,\\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220805092428542.png" alt="image-20220805092428542"></p><h4 id="replace\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#replace\u65B9\u6CD5" aria-hidden="true">#</a> replace\u65B9\u6CD5</h4><p>\u5B57\u7B26\u4E32\u7684replace()\u65B9\u6CD5\uFF1A\u8FD4\u56DE\u7684\u662F\u65B0\u7684\u5B57\u7B26\u4E32\u3002</p><ul><li>\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u5B57\u7B26\u4E32\u91CC\u8981\u88AB\u66FF\u6362\u7684\u5B57\u7B26\u3002</li><li>\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u66FF\u6362\u7684\u5B57\u7B26\u3002</li></ul><p>\u53EA\u80FD\u66FF\u6362\u4E00\u4E2A\u3002\u4F20\u5165\u6B63\u5219\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5229\u7528\u6B63\u5219\u7684\u5168\u5C40\u5339\u914D\u53EF\u4EE5\u66FF\u6362\u591A\u4E2A\u3002</p><p>string\u7684replace\u65B9\u6CD5\u4E5F\u80FD\u5F15\u7528\u6B63\u5219\u7684\u5206\u7EC4\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F20\u5165\u2018$1\u2019\uFF0C\u8868\u793A\u4E3A\u6B63\u5219\u7684\u7B2C\u4E00\u4E2A\u5206\u7EC4\u3002replace\u65B9\u6CD5\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\u3002</p><h5 id="\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> \u5E94\u7528\u573A\u666F\uFF1A</h5><p>\u53EF\u4EE5\u7528\u6765\u8FC7\u6EE4\u654F\u611F\u8BCD\uFF0C\u5C06\u654F\u611F\u8BCD\u7528*\u4EE3\u66FF\u3002 string\u7684replace\u65B9\u6CD5\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u53EF\u4EE5\u662F\u51FD\u6570function\uFF0C\u4F20\u5165$0\uFF0C$0\u8868\u793A\u6BCD\u5339\u914D(\u6B63\u5219\u6700\u5927\u7684\u5339 \u914D)\uFF0C$1\u8868\u793A\u5206\u7EC4\u4E2D\u7684\u5B50\u5339\u914D\u3002\u7136\u540E\u7528\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u53BB\u66FF\u6362\u6B63\u5219($0)\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;\u4E00\u8D77\u529E\u8BC1&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\u8349|\u64CD|\u529E\u8BC1</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$0<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> $0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result <span class="token operator">+=</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> result<span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220805092450795.png" alt="image-20220805092450795"></p><h2 id="\u5E38\u7528\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u5E38\u7528\u6B63\u5219\u8868\u8FBE\u5F0F</h2><h3 id="qq\u53F7" tabindex="-1"><a class="header-anchor" href="#qq\u53F7" aria-hidden="true">#</a> QQ\u53F7</h3><p>\u6761\u4EF6\uFF1A</p><ul><li>\u5168\u662F\u6570\u5B57</li><li>\u9996\u4F4D\u4E0D\u80FD\u4E3A0</li><li>\u6700\u5C115\u4F4D(10000)</li><li>\u76EE\u524D\u6700\u591A11\u4F4D\uFF1F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9]\\d{4,10}$</span><span class="token regex-delimiter">/</span></span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\\d<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">}</span>$<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6635\u79F0" tabindex="-1"><a class="header-anchor" href="#\u6635\u79F0" aria-hidden="true">#</a> \u6635\u79F0</h3><p>\u6761\u4EF6\uFF1A</p><ul><li>\u4E2D\u3001\u82F1\u6587\u3001\u6570\u5B57\u4EE5\u53CA\u4E0B\u5212\u7EBF</li><li>2-18\u4F4D</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\u4e00-\\u9fa5a-zA-Z0-9_]{2,18}$</span><span class="token regex-delimiter">/</span></span>
	<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>\\u4e00<span class="token operator">-</span>\\u9fa5\\w<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">}</span>$<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5BC6\u7801" tabindex="-1"><a class="header-anchor" href="#\u5BC6\u7801" aria-hidden="true">#</a> \u5BC6\u7801</h3><p>\u6761\u4EF6\uFF1A</p><ul><li>6-16\u4F4D</li><li>\u4E0D\u80FD\u7528\u7A7A\u767D\u5B57\u7B26\\s</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\S{6,16}$</span><span class="token regex-delimiter">/</span></span>
	<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>\\w<span class="token operator">~</span><span class="token operator">!</span>@#$<span class="token operator">%</span><span class="token operator">^</span>\\<span class="token punctuation">[</span>\\<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">}</span>$<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53BB\u9664\u5B57\u7B26\u4E32\u9996\u5C3E\u7684\u7A7A\u767D\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#\u53BB\u9664\u5B57\u7B26\u4E32\u9996\u5C3E\u7684\u7A7A\u767D\u5B57\u7B26" aria-hidden="true">#</a> \u53BB\u9664\u5B57\u7B26\u4E32\u9996\u5C3E\u7684\u7A7A\u767D\u5B57\u7B26</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;        Alex         &#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;|&#39;</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;|&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;        Alex         &#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;|&#39;</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;|&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;        Alex         &#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s+|\\s+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;|&#39;</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;|&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;        Alex         &#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern1 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern2 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;|&#39;</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>pattern1<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>pattern2<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;|&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">function</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// trimLeft trimRight</span>
	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;        Alex         &#39;</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;|&#39;</span> <span class="token operator">+</span> <span class="token function">trim</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;|&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8F6C\u9A7C\u5CF0" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u9A7C\u5CF0" aria-hidden="true">#</a> \u8F6C\u9A7C\u5CF0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token comment">// css: background-color: red;</span>
	<span class="token comment">// js: elem.style.backgroundColor = &#39;red&#39;;</span>
	<span class="token comment">// jquery: $(elem).css(&#39;background-color&#39;, &#39;red&#39;);</span>

	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;background-color&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-([a-z])</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">all<span class="token punctuation">,</span> letter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> letter<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">function</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">all<span class="token punctuation">,</span> letter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> letter<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5339\u914Dhtml\u6807\u7B7E" tabindex="-1"><a class="header-anchor" href="#\u5339\u914Dhtml\u6807\u7B7E" aria-hidden="true">#</a> \u5339\u914DHTML\u6807\u7B7E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;p class=&quot;odd&quot; id=&quot;odd&quot;&gt;123&lt;/p&gt;&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;\\/?[a-zA-Z]+(\\s+[a-zA-Z]+=&quot;.*&quot;)*&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;p class=&quot;odd&quot; id=&quot;odd&quot;&gt;123&lt;/p&gt;&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;[^&gt;]+&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;input type=&quot;text&quot; value=&quot;&gt;&quot; name=&quot;username&quot; /&gt;&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;(?:[^&quot;&#39;&gt;]|&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;)*&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&lt;input type=&quot;text&quot; value=&quot;&gt;&quot; name=&quot;username&quot; /&gt;&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;(?:[^&quot;&#39;&gt;]|([&quot;&#39;])[^&quot;&#39;]*\\1)*&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5339\u914D\u90AE\u7BB1" tabindex="-1"><a class="header-anchor" href="#\u5339\u914D\u90AE\u7BB1" aria-hidden="true">#</a> \u5339\u914D\u90AE\u7BB1</h3><p>\u6761\u4EF6\uFF1A</p><ul><li>alex@yahoo.com.cn</li><li>alex_1@yahoo.com.cn</li><li>alex_1.a-sdasd.asdasdas.com@yah-o_o.com.adasdsd.cn</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?:\\w+\\.)*\\w+@(?:\\w+\\.)+[a-z]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">.</span>_<span class="token operator">-</span><span class="token punctuation">]</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">*</span>@<span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">.</span>_<span class="token operator">-</span><span class="token punctuation">]</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">*</span>\\<span class="token punctuation">.</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">}</span>$<span class="token operator">/</span>i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="url" tabindex="-1"><a class="header-anchor" href="#url" aria-hidden="true">#</a> URL</h3><p>\u6761\u4EF6\uFF1A</p><ul><li>(\u534F\u8BAE://)\u4E3B\u673A\u540D(:\u7AEF\u53E3\u53F7)(/\u8DEF\u5F84)</li><li>ftp|http|https|mailto|file:///</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(https?:\\/\\/)?([^:\\/]+)(:\\d+)?(\\/.*)?$</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u5339\u914D\u4E3B\u673A\u540D" tabindex="-1"><a class="header-anchor" href="#\u5339\u914D\u4E3B\u673A\u540D" aria-hidden="true">#</a> \u5339\u914D\u4E3B\u673A\u540D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^:\\/]+</span><span class="token regex-delimiter">/</span></span>
	<span class="token comment">//-www.-imos-oc.casfasf.sadasd.co-m</span>
	<span class="token comment">//ai</span>
	<span class="token operator">/</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">/</span>i
	<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\\<span class="token punctuation">.</span><span class="token operator">|</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\\<span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>com<span class="token operator">|</span>edu<span class="token operator">|</span>gov<span class="token operator">|</span>net<span class="token operator">|</span>org<span class="token operator">|</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span>$<span class="token operator">/</span>i
	<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\\<span class="token punctuation">.</span><span class="token operator">|</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\\<span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span>$<span class="token operator">/</span>i

	<span class="token keyword">var</span> regexp <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&#39;chinese&#39;</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\u4e00-\\u9fa5]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// </span>
		<span class="token string-property property">&#39;qq&#39;</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9]\\d{4,}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
		<span class="token operator">...</span><span class="token punctuation">.</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
	regexp<span class="token punctuation">.</span>qq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,183),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","\u6B63\u5219\u8868\u8FBE\u5F0F.html.vue"]]);export{k as default};
