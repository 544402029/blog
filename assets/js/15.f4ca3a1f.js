(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{435:function(a,t,e){"use strict";e.r(t);var s=e(65),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[a._v("#")]),a._v(" Git")]),a._v(" "),e("blockquote",[e("p",[a._v("本文为阅读  "),e("a",{attrs:{href:"https://juejin.cn/book/6844733697996881928",target:"_blank",rel:"noopener noreferrer"}},[a._v("《Git 原理详解及实用指南》"),e("OutboundLink")],1),a._v(" 和 "),e("a",{attrs:{href:"https://www.imooc.com/read/51#catalog",target:"_blank",rel:"noopener noreferrer"}},[a._v("《Git原理详解与实操指南》"),e("OutboundLink")],1),a._v(" 时所记录笔记，如有兴趣可阅读正版。")])]),a._v(" "),e("h2",{attrs:{id:"git常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令"}},[a._v("#")]),a._v(" Git常用命令")]),a._v(" "),e("h3",{attrs:{id:"常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[a._v("#")]),a._v(" 常用命令")]),a._v(" "),e("h4",{attrs:{id:"初始化仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化仓库"}},[a._v("#")]),a._v(" 初始化仓库")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git init\n")])])]),e("h4",{attrs:{id:"把远程仓库取到本地"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把远程仓库取到本地"}},[a._v("#")]),a._v(" 把远程仓库取到本地")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git clone 你刚复制的地址\n")])])]),e("h4",{attrs:{id:"查看仓库提交历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看仓库提交历史"}},[a._v("#")]),a._v(" 查看仓库提交历史")]),a._v(" "),e("h5",{attrs:{id:"查看历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看历史"}},[a._v("#")]),a._v(" 查看历史")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git log\n")])])]),e("h5",{attrs:{id:"查看详细改动历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看详细改动历史"}},[a._v("#")]),a._v(" 查看详细改动历史")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git log -p\n")])])]),e("h5",{attrs:{id:"查看大致改动历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看大致改动历史"}},[a._v("#")]),a._v(" 查看大致改动历史")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git log --stat\n")])])]),e("h5",{attrs:{id:"查看当前-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看当前-commit"}},[a._v("#")]),a._v(" 查看当前 "),e("code",[a._v("commit")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git show\n")])])]),e("h5",{attrs:{id:"查看任意-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看任意-commit"}},[a._v("#")]),a._v(" 查看任意 "),e("code",[a._v("commit")])]),a._v(" "),e("p",[a._v("在 "),e("code",[a._v("show")]),a._v(" 后面加上这个 "),e("code",[a._v("commit")]),a._v(" 的引用（"),e("code",[a._v("branch")]),a._v(" 或 "),e("code",[a._v("HEAD")]),a._v(" 标记）或它的 "),e("code",[a._v("SHA-1")]),a._v(" 码：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git show 5e68b0d8\n")])])]),e("h5",{attrs:{id:"查看指定-commit-中的指定文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看指定-commit-中的指定文件"}},[a._v("#")]),a._v(" 查看指定 commit 中的指定文件")]),a._v(" "),e("p",[a._v("在 "),e("code",[a._v("commit")]),a._v(" 的引用或 "),e("code",[a._v("SHA-1")]),a._v(" 后输入文件名：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git show 5e68b0d8 shopping\\ list.txt\n")])])]),e("h5",{attrs:{id:"查看未提交的内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看未提交的内容"}},[a._v("#")]),a._v(" 查看未提交的内容")]),a._v(" "),e("h6",{attrs:{id:"比对暂存区和上一条提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#比对暂存区和上一条提交"}},[a._v("#")]),a._v(" 比对暂存区和上一条提交")]),a._v(" "),e("p",[a._v("使用 "),e("code",[a._v("git diff --staged")]),a._v(" 可以显示暂存区和上一条提交之间的不同。换句话说，这条指令可以让你看到「如果你立即输入 "),e("code",[a._v("git commit")]),a._v("，你将会提交什么」：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git diff --staged\n")])])]),e("h6",{attrs:{id:"比对工作目录和暂存区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#比对工作目录和暂存区"}},[a._v("#")]),a._v(" 比对工作目录和暂存区")]),a._v(" "),e("p",[a._v("使用 "),e("code",[a._v("git diff")]),a._v(" （不加选项参数）可以显示工作目录和暂存区之间的不同。换句话说，这条指令可以让你看到「如果你现在把所有文件都 "),e("code",[a._v("add")]),a._v("，你会向暂存区中增加哪些内容」：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git diff\n")])])]),e("h6",{attrs:{id:"比对工作目录和上一条提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#比对工作目录和上一条提交"}},[a._v("#")]),a._v(" 比对工作目录和上一条提交")]),a._v(" "),e("p",[a._v("使用 "),e("code",[a._v("git diff HEAD")]),a._v(" 可以显示工作目录和上一条提交之间的不同，它是上面这二者的内容相加。换句话说，这条指令可以让你看到「如果你现在把所有文件都 "),e("code",[a._v("add")]),a._v(" 然后 "),e("code",[a._v("git commit")]),a._v("，你将会提交什么」（不过需要注意，没有被 Git 记录在案的文件（即从来没有被 add 过 的文件，untracked files 并不会显示出来。为什么？因为对 Git 来说它并不存在啊）。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git diff HEAD\n")])])]),e("p",[a._v("实质上，如果你把 "),e("code",[a._v("HEAD")]),a._v(" 换成别的 "),e("code",[a._v("commit")]),a._v("，也可以显示当前工作目录和这条 "),e("code",[a._v("commit")]),a._v(" 的区别。")]),a._v(" "),e("h4",{attrs:{id:"查看工作目录当前状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看工作目录当前状态"}},[a._v("#")]),a._v(" 查看工作目录当前状态")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git status\n")])])]),e("h4",{attrs:{id:"添加到暂存区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加到暂存区"}},[a._v("#")]),a._v(" 添加到暂存区")]),a._v(" "),e("h5",{attrs:{id:"添加某个文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加某个文件"}},[a._v("#")]),a._v(" 添加某个文件")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git add shopping\\ list.txt\n")])])]),e("h5",{attrs:{id:"添加全部文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加全部文件"}},[a._v("#")]),a._v(" 添加全部文件")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git add .\n")])])]),e("h4",{attrs:{id:"提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交"}},[a._v("#")]),a._v(" 提交")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git commit\n")])])]),e("h4",{attrs:{id:"推送到远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送到远程仓库"}},[a._v("#")]),a._v(" 推送到远程仓库")]),a._v(" "),e("p",[a._v("只能推送 "),e("code",[a._v("clone")]),a._v(" 或者 "),e("code",[a._v("pull")]),a._v(" 下来的分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git push\n")])])]),e("h5",{attrs:{id:"本地创建分支推送到远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地创建分支推送到远程仓库"}},[a._v("#")]),a._v(" 本地创建分支推送到远程仓库")]),a._v(" "),e("p",[a._v("如果是本地创建分支推送到远程仓库，那么需要指定远程仓库的名称(别名) "),e("code",[a._v("origin")]),a._v(" 以及远程仓库中目标 "),e("code",[a._v("branch")]),a._v(" 的名字（目标分支需要与本地分支名称相同）。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git push origin feature1\n")])])]),e("blockquote",[e("p",[a._v("你可以通过 "),e("code",[a._v("git config")]),a._v(" 指令来设置 "),e("code",[a._v("push.default")]),a._v(" 的值来改变 "),e("code",[a._v("push")]),a._v(" 的行为逻辑，例如可以设置为「所有分支都可以用 "),e("code",[a._v("git push")]),a._v(" 来直接 push，目标自动指向 "),e("code",[a._v("origin")]),a._v(" 仓库的同名分支」（对应的 "),e("code",[a._v("push.default")]),a._v(" 值："),e("code",[a._v("current")]),a._v("），或者别的什么行为逻辑，你甚至可以设置为每次执行 "),e("code",[a._v("git push")]),a._v(" 时就自动把所有本地分支全部同步到远程仓库（虽然这可能有点耗时和危险）。如果希望详细了解，你可以到"),e("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgit-scm.com%2Fdocs%2Fgit-config%23git-config-pushdefault",target:"_blank",rel:"noopener noreferrer"}},[a._v("这里"),e("OutboundLink")],1),a._v("看看。")])]),a._v(" "),e("h5",{attrs:{id:"强制推送"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制推送"}},[a._v("#")]),a._v(" 强制推送")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git push origin feature1 -f\n")])])]),e("h4",{attrs:{id:"拉取远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉取远程仓库"}},[a._v("#")]),a._v(" 拉取远程仓库")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git pull\n")])])]),e("h4",{attrs:{id:"创建分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[a._v("#")]),a._v(" 创建分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git branch feature1\n")])])]),e("h4",{attrs:{id:"切换-分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换-分支"}},[a._v("#")]),a._v(" 切换 分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout feature1\n")])])]),e("h4",{attrs:{id:"创建并切换-分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换-分支"}},[a._v("#")]),a._v(" 创建并切换 分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout -b feature1\n")])])]),e("h4",{attrs:{id:"删除分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[a._v("#")]),a._v(" 删除分支")]),a._v(" "),e("h5",{attrs:{id:"删除本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除本地分支"}},[a._v("#")]),a._v(" 删除本地分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git branch -d feature1\n")])])]),e("ol",[e("li",[e("code",[a._v("HEAD")]),a._v(" 指向的 "),e("code",[a._v("branch")]),a._v(" 不能删除。如果要删除 "),e("code",[a._v("HEAD")]),a._v(" 指向的 "),e("code",[a._v("branch")]),a._v("，需要先用 "),e("code",[a._v("checkout")]),a._v(" 把 "),e("code",[a._v("HEAD")]),a._v(" 指向其他地方。")]),a._v(" "),e("li",[a._v("由于 Git 中的 "),e("code",[a._v("branch")]),a._v(" 只是一个引用，所以删除 "),e("code",[a._v("branch")]),a._v(" 的操作也只会删掉这个引用，并不会删除任何的 "),e("code",[a._v("commit")]),a._v("。（不过如果一个 "),e("code",[a._v("commit")]),a._v(" 不在任何一个 "),e("code",[a._v("branch")]),a._v(" 的「路径」上，或者换句话说，如果没有任何一个 "),e("code",[a._v("branch")]),a._v(" 可以回溯到这条 "),e("code",[a._v("commit")]),a._v("（也许可以称为野生 "),e("code",[a._v("commit")]),a._v("？），那么在一定时间后，它会被 Git 的回收机制删除掉。）")]),a._v(" "),e("li",[a._v("出于安全考虑，没有被合并到 "),e("code",[a._v("master")]),a._v(" 过的 "),e("code",[a._v("branch")]),a._v(" 在删除时会失败（因为怕你误删掉「未完成」的 "),e("code",[a._v("branch")]),a._v(" 啊）：")])]),a._v(" "),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220819090528371.png",alt:"image-20220819090528371"}})]),a._v(" "),e("p",[a._v("这种情况如果你确认是要删除这个 "),e("code",[a._v("branch")]),a._v(" （例如某个未完成的功能被团队确认永久毙掉了，不再做了），可以把 "),e("code",[a._v("-d")]),a._v(" 改成 "),e("code",[a._v("-D")]),a._v("，小写换成大写，就能删除了。")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220819090558290.png",alt:"image-20220819090558290"}})]),a._v(" "),e("h5",{attrs:{id:"删除远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[a._v("#")]),a._v(" 删除远程分支")]),a._v(" "),e("p",[a._v("用 -d 参数把远程仓库的 branch 也删了")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git push origin -d feature1\n")])])]),e("h4",{attrs:{id:"合并分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[a._v("#")]),a._v(" 合并分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git merge branch1\n")])])]),e("h4",{attrs:{id:"取消合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#取消合并"}},[a._v("#")]),a._v(" 取消合并")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git merge --abort\n")])])]),e("h4",{attrs:{id:"储藏工作目录的改动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#储藏工作目录的改动"}},[a._v("#")]),a._v(" 储藏工作目录的改动")]),a._v(" "),e("h5",{attrs:{id:"储藏"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#储藏"}},[a._v("#")]),a._v(" 储藏")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git stash\n")])])]),e("h5",{attrs:{id:"取出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#取出"}},[a._v("#")]),a._v(" 取出")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git stash pop\n")])])]),e("blockquote",[e("p",[a._v("注意：没有被 track 的文件（即从来没有被 add 过的文件不会被 stash 起来，因为 Git 会忽略它们。如果想把这些文件也一起 stash，可以加上 "),e("code",[a._v("-u")]),a._v(" 参数，它是 "),e("code",[a._v("--include-untracked")]),a._v(" 的简写。就像这样：")])]),a._v(" "),e("h4",{attrs:{id:"查看移动历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看移动历史"}},[a._v("#")]),a._v(" 查看移动历史")]),a._v(" "),e("p",[e("code",[a._v("reflog")]),a._v(" 默认查看 "),e("code",[a._v("HEAD")]),a._v(" 的移动历史，除此之外，也可以手动加上名称来查看其他引用的移动历史，例如某个 "),e("code",[a._v("branch")]),a._v("：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git reflog master\n")])])]),e("h3",{attrs:{id:"配置信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置信息"}},[a._v("#")]),a._v(" 配置信息")]),a._v(" "),e("h4",{attrs:{id:"git账号密码保存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git账号密码保存"}},[a._v("#")]),a._v(" Git账号密码保存")]),a._v(" "),e("p",[a._v("如果觉得一遍遍地输入密码很烦，可以输入执行这行代码把密码保存起来。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git config credential.helper store\n")])])]),e("p",[a._v("在这之后你只需要再输入一次密码， Git 就会把你的密码保存下来，这之后就再也不用输入了。但是「安全性低」，因为这条指令会让 Git 把你的密码以明文形式保存在你的电脑上。")]),a._v(" "),e("h4",{attrs:{id:"查看昵称"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看昵称"}},[a._v("#")]),a._v(" 查看昵称")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git config user.name\n")])])]),e("h4",{attrs:{id:"查看邮箱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看邮箱"}},[a._v("#")]),a._v(" 查看邮箱")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git config user.email\n")])])]),e("h4",{attrs:{id:"配置昵称"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置昵称"}},[a._v("#")]),a._v(" 配置昵称")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('git config --global user.name "你的昵称"\n')])])]),e("h2",{attrs:{id:"rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[a._v("#")]),a._v(" rebase")]),a._v(" "),e("p",[a._v("不喜欢使用 "),e("code",[a._v("merge")]),a._v(" 可以考虑使用此种方式进行提交")]),a._v(" "),e("h3",{attrs:{id:"rebase-在新位置重新提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase-在新位置重新提交"}},[a._v("#")]),a._v(" rebase——在新位置重新提交")]),a._v(" "),e("p",[e("code",[a._v("rebase")]),a._v(" 的意思是，给你的 "),e("code",[a._v("commit")]),a._v(" 序列重新设置基础点（也就是父 "),e("code",[a._v("commit")]),a._v("）。展开来说就是，把你指定的 "),e("code",[a._v("commit")]),a._v(" 以及它所在的 "),e("code",[a._v("commit")]),a._v(" 串，以指定的目标 "),e("code",[a._v("commit")]),a._v(" 为基础，依次重新提交一次。例如下面这个 "),e("code",[a._v("merge")]),a._v("：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git merge branch1\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fdea7b6646a1f3_tplv-t2oaga2asx-zoom-in-crop-mark_3024_0_0_0.webp",alt:"15fdea7b6646a1f3_tplv-t2oaga2asx-zoom-in-crop-mark_3024_0_0_0"}})]),a._v(" "),e("p",[a._v("如果把 "),e("code",[a._v("merge")]),a._v(" 换成 "),e("code",[a._v("rebase")]),a._v("，可以这样操作：")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout branch1\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase master\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1600abd620a8e28c_tplv-t2oaga2asx-zoom-in-crop-mark_3024_0_0_0.webp",alt:"1600abd620a8e28c_tplv-t2oaga2asx-zoom-in-crop-mark_3024_0_0_0"}})]),a._v(" "),e("p",[a._v("另外，在 "),e("code",[a._v("rebase")]),a._v(" 之后，记得切回 "),e("code",[a._v("master")]),a._v(" 再 "),e("code",[a._v("merge")]),a._v(" 一下，把 "),e("code",[a._v("master")]),a._v(" 移到最新的 "),e("code",[a._v("commit")]),a._v("：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout master\ngit merge branch1\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/160149e054fe485c_tplv-t2oaga2asx-zoom-in-crop-mark_3024_0_0_0.webp",alt:"160149e054fe485c_tplv-t2oaga2asx-zoom-in-crop-mark_3024_0_0_0"}})]),a._v(" "),e("blockquote",[e("p",[a._v("为什么要从 "),e("code",[a._v("branch1")]),a._v(" 来 "),e("code",[a._v("rebase")]),a._v("，然后再切回 "),e("code",[a._v("master")]),a._v(" 再 "),e("code",[a._v("merge")]),a._v(" 一下这么麻烦，而不是直接在 "),e("code",[a._v("master")]),a._v(" 上执行 "),e("code",[a._v("rebase")]),a._v("？")]),a._v(" "),e("p",[a._v("从图中可以看出，"),e("code",[a._v("rebase")]),a._v(" 后的 "),e("code",[a._v("commit")]),a._v(" 虽然内容和 "),e("code",[a._v("rebase")]),a._v(" 之前相同，但它们已经是不同的 "),e("code",[a._v("commits")]),a._v(" 了。如果直接从 "),e("code",[a._v("master")]),a._v(" 执行 "),e("code",[a._v("rebase")]),a._v(" 的话，就会是下面这样：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/16014b5a6919c0b7_tplv-t2oaga2asx-zoom-in-crop-mark_3024_0_0_0.webp",alt:"16014b5a6919c0b7_tplv-t2oaga2asx-zoom-in-crop-mark_3024_0_0_0"}})]),a._v(" "),e("p",[a._v("这就导致 "),e("code",[a._v("master")]),a._v(" 上之前的两个最新 "),e("code",[a._v("commit")]),a._v(" 被剔除了。如果这两个 "),e("code",[a._v("commit")]),a._v(" 之前已经在中央仓库存在，这就会导致没法 "),e("code",[a._v("push")]),a._v(" 了：")]),a._v(" "),e("p",[a._v("所以，为了避免和远端仓库发生冲突，一般不要从 "),e("code",[a._v("master")]),a._v(" 向其他 "),e("code",[a._v("branch")]),a._v(" 执行 "),e("code",[a._v("rebase")]),a._v(" 操作。而如果是 "),e("code",[a._v("master")]),a._v(" 以外的 "),e("code",[a._v("branch")]),a._v(" 之间的 "),e("code",[a._v("rebase")]),a._v("（比如 "),e("code",[a._v("branch1")]),a._v(" 和 "),e("code",[a._v("branch2")]),a._v(" 之间），就不必这么多费一步，直接 "),e("code",[a._v("rebase")]),a._v(" 就好。")])]),a._v(" "),e("p",[a._v("需要说明的是，"),e("code",[a._v("rebase")]),a._v(" 是站在需要被 "),e("code",[a._v("rebase")]),a._v(" 的 "),e("code",[a._v("commit")]),a._v(" 上进行操作，这点和 "),e("code",[a._v("merge")]),a._v(" 是不同的。")]),a._v(" "),e("h2",{attrs:{id:"刚刚提交的代码-发现写错了怎么办"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#刚刚提交的代码-发现写错了怎么办"}},[a._v("#")]),a._v(" 刚刚提交的代码，发现写错了怎么办？")]),a._v(" "),e("p",[a._v("刚提交了一个代码，发现有几个字写错了：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fdf01882286d88~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[a._v("怎么修复？")]),a._v(" "),e("p",[a._v("当场再写一个修复这几个错别字的 "),e("code",[a._v("commit")]),a._v("？可以是可以，不过还有一个更加优雅和简单的解决方法："),e("code",[a._v("commit -—amend")]),a._v("。")]),a._v(" "),e("p",[a._v('"amend" 是「修正」的意思。在提交时，如果加上 '),e("code",[a._v("--amend")]),a._v(" 参数，Git 不会在当前 "),e("code",[a._v("commit")]),a._v(" 上增加 "),e("code",[a._v("commit")]),a._v("，而是会把当前 "),e("code",[a._v("commit")]),a._v(" 里的内容和暂存区（stageing area）里的内容合并起来后创建一个新的 "),e("code",[a._v("commit")]),a._v("，"),e("strong",[a._v("用这个新的 "),e("code",[a._v("commit")]),a._v(" 把当前 "),e("code",[a._v("commit")]),a._v(" 替换掉")]),a._v("。所以 "),e("code",[a._v("commit --amend")]),a._v(" 做的事就是它的字面意思：对最新一条 "),e("code",[a._v("commit")]),a._v(" 进行修正。")]),a._v(" "),e("p",[a._v("具体地，对于上面这个错误，你就可以把文件中的错别字修改好之后，输入：")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" 笑声.txt\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --amend\n")])])]),e("p",[a._v("Git 会把你带到提交信息编辑界面。可以看到，提交信息默认是当前提交的提交信息。你可以修改或者保留它，然后保存退出。然后，你的最新 "),e("code",[a._v("commit")]),a._v(" 就被更新了。")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fdf0187f2f4b2d_tplv-t2oaga2asx-zoom-in-crop-mark_3024_0_0_0.webp",alt:"15fdf0187f2f4b2d_tplv-t2oaga2asx-zoom-in-crop-mark_3024_0_0_0"}})]),a._v(" "),e("p",[a._v("需要注意的：")]),a._v(" "),e("ol",[e("li",[e("p",[e("code",[a._v("commit --amend")]),a._v(" 并不是直接修改原 "),e("code",[a._v("commit")]),a._v(" 的内容，而是生成一条新的 "),e("code",[a._v("commit")]),a._v(", 替换掉原 "),e("code",[a._v("commit")]),a._v(" 。")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("git commit --amend")]),a._v(" 只针对提交到本地仓库的有效,  需要git push -f才能推送至远程仓库。")])]),a._v(" "),e("li",[e("p",[a._v("慎用此功能，一般情况下在当前 "),e("code",[a._v("commit")]),a._v(" 修改提交即可。")])])]),a._v(" "),e("h2",{attrs:{id:"比错还错-想直接丢弃刚写的提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#比错还错-想直接丢弃刚写的提交"}},[a._v("#")]),a._v(" 比错还错，想直接丢弃刚写的提交？")]),a._v(" "),e("p",[a._v("有的时候，刚写完的 "),e("code",[a._v("commit")]),a._v(" 写得实在太烂，连自己的都看不下去，与其修改它还不如丢掉重写。这种情况，就可以用 "),e("code",[a._v("reset")]),a._v(" 来丢弃最新的提交。")]),a._v(" "),e("h3",{attrs:{id:"reset-hard-丢弃最新的提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-hard-丢弃最新的提交"}},[a._v("#")]),a._v(" reset --hard 丢弃最新的提交")]),a._v(" "),e("p",[a._v("比如你刚写了一个 "),e("code",[a._v("commit")]),a._v("：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe19c8a6101d7f~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe19c8a2f08fa1~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[a._v("写完回头看了看，你觉得「不行这得重新写」。那么你可以用 "),e("code",[a._v("reset --hard")]),a._v(" 来撤销这条 "),e("code",[a._v("commit")]),a._v("。")]),a._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[a._v("git reset --hard HEAD^\n")])])]),e("blockquote",[e("p",[a._v("HEAD 表示 HEAD^ 往回数一个位置的 "),e("code",[a._v("commit")]),a._v(" ，上节刚说过，记得吧？")])]),a._v(" "),e("p",[e("code",[a._v("HEAD^")]),a._v(" 表示你要恢复到哪个 "),e("code",[a._v("commit")]),a._v("。因为你要撤销最新的一个 "),e("code",[a._v("commit")]),a._v("，所以你需要恢复到它的父 "),e("code",[a._v("commit")]),a._v(" ，也就是 "),e("code",[a._v("HEAD^")]),a._v("。那么在这行之后，你的最新一条就被撤销了：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe19c8a3235853~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[a._v("不过，就像图上显示的，你被撤销的那条提交并没有消失，只是你不再用到它了。如果你在撤销它之前记下了它的 "),e("code",[a._v("SHA-1")]),a._v(" 码，那么你还可以通过 "),e("code",[a._v("SHA-1")]),a._v(" 来找到他它。")]),a._v(" "),e("h2",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[a._v("#")]),a._v(" 小结")]),a._v(" "),e("p",[a._v("这一节的内容是撤销最新的提交，方式是通过 "),e("code",[a._v("reset --hard")]),a._v("：")]),a._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[a._v("git reset --hard 目标commit\n")])])]),e("h2",{attrs:{id:"reset-的本质-不止可以撤销提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-的本质-不止可以撤销提交"}},[a._v("#")]),a._v(" reset 的本质——不止可以撤销提交")]),a._v(" "),e("p",[a._v("前面讲到，在最新的 "),e("code",[a._v("commit")]),a._v(" 写错时，可以用 "),e("code",[a._v("reset --hard")]),a._v(" 来把 "),e("code",[a._v("commit")]),a._v(" 撤销：")]),a._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[a._v("git reset --hard HEAD^\n")])])]),e("blockquote",[e("p",[a._v("用这行代码可以撤销掉当前 "),e("code",[a._v("commit")])])]),a._v(" "),e("p",[a._v("在这节里，就对 "),e("code",[a._v("reset")]),a._v(" 多说点，说说它的本质，说说它在撤销提交之外的用途。")]),a._v(" "),e("h3",{attrs:{id:"reset-的本质-移动-head-以及它所指向的-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-的本质-移动-head-以及它所指向的-branch"}},[a._v("#")]),a._v(" reset 的本质：移动 HEAD 以及它所指向的 branch")]),a._v(" "),e("p",[a._v("实质上，"),e("code",[a._v("reset")]),a._v(" 这个指令虽然可以用来撤销 "),e("code",[a._v("commit")]),a._v(" ，但它的实质行为并不是撤销，而是移动 "),e("code",[a._v("HEAD")]),a._v(" ，并且「捎带」上 "),e("code",[a._v("HEAD")]),a._v(" 所指向的 "),e("code",[a._v("branch")]),a._v("（如果有的话）。也就是说，"),e("code",[a._v("reset")]),a._v(' 这个指令的行为其实和它的字面意思 "reset"（重置）十分相符：它是用来重置 '),e("code",[a._v("HEAD")]),a._v(" 以及它所指向的 "),e("code",[a._v("branch")]),a._v(" 的位置的。")]),a._v(" "),e("p",[a._v("而 "),e("code",[a._v("reset --hard HEAD^")]),a._v(" 之所以起到了撤销 "),e("code",[a._v("commit")]),a._v(" 的效果，是因为它把 "),e("code",[a._v("HEAD")]),a._v(" 和它所指向的 "),e("code",[a._v("branch")]),a._v(" 一起移动到了当前 "),e("code",[a._v("commit")]),a._v(" 的父 "),e("code",[a._v("commit")]),a._v(" 上，从而起到了「撤销」的效果：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe19c8a3235853~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("blockquote",[e("p",[a._v("Git 的历史只能往回看，不能向未来看，所以把 "),e("code",[a._v("HEAD")]),a._v(" 和 "),e("code",[a._v("branch")]),a._v(" 往回移动，就能起到撤回 "),e("code",[a._v("commit")]),a._v(" 的效果。")])]),a._v(" "),e("p",[a._v("所以同理，"),e("code",[a._v("reset --hard")]),a._v(" 不仅可以撤销提交，还可以用来把 "),e("code",[a._v("HEAD")]),a._v(" 和 "),e("code",[a._v("branch")]),a._v(" 移动到其他的任何地方。")]),a._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[a._v("git reset --hard branch2\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe333cb605b0de~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[a._v("不过……"),e("code",[a._v("reset")]),a._v(" 后面总是跟着的那个 "),e("code",[a._v("--hard")]),a._v(" 是什么意思呢？")]),a._v(" "),e("p",[e("code",[a._v("reset")]),a._v(" 指令可以重置 "),e("code",[a._v("HEAD")]),a._v(" 和 "),e("code",[a._v("branch")]),a._v(" 的位置，不过在重置它们的同时，对工作目录可以选择不同的操作，而对工作目录的操作的不同，就是通过 "),e("code",[a._v("reset")]),a._v(" 后面跟的参数来确定的。")]),a._v(" "),e("h3",{attrs:{id:"reset-hard-重置工作目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-hard-重置工作目录"}},[a._v("#")]),a._v(" reset --hard：重置工作目录")]),a._v(" "),e("p",[e("code",[a._v("reset --hard")]),a._v(" 会在重置 "),e("code",[a._v("HEAD")]),a._v(" 和 "),e("code",[a._v("branch")]),a._v(" 的同时，重置工作目录里的内容。当你在 "),e("code",[a._v("reset")]),a._v(" 后面加了 "),e("code",[a._v("--hard")]),a._v(" 参数时，你的工作目录里的内容会被完全重置为和 "),e("code",[a._v("HEAD")]),a._v(" 的新位置相同的内容。换句话说，就是你的未提交的修改会被全部擦掉。")]),a._v(" "),e("p",[a._v("例如你在上次 "),e("code",[a._v("commit")]),a._v(" 之后又对文件做了一些改动：")]),a._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[a._v("git status\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe333cb5a0e894~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[a._v("然后，你执行了 "),e("code",[a._v("reset")]),a._v(" 并附上了 "),e("code",[a._v("--hard")]),a._v(" 参数：")]),a._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[a._v("git reset --hard HEAD^\n")])])]),e("p",[a._v("你的 "),e("code",[a._v("HEAD")]),a._v(" 和当前 "),e("code",[a._v("branch")]),a._v(" 切到上一条 "),e("code",[a._v("commit")]),a._v(" 的同时，你工作目录里的新改动也一起全都消失了，不管它们是否被放进暂存区：")]),a._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[a._v("git status\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe333cb5dbef68~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[a._v("可以看到，在 "),e("code",[a._v("reset --hard")]),a._v(" 后，所有的改动都被擦掉了。")]),a._v(" "),e("h3",{attrs:{id:"reset-soft-保留工作目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-soft-保留工作目录"}},[a._v("#")]),a._v(" reset --soft：保留工作目录")]),a._v(" "),e("p",[e("code",[a._v("reset --soft")]),a._v(" 会在重置 "),e("code",[a._v("HEAD")]),a._v(" 和 "),e("code",[a._v("branch")]),a._v(" 时，保留工作目录和暂存区中的内容，并把重置 "),e("code",[a._v("HEAD")]),a._v(" 所带来的新的差异放进暂存区。")]),a._v(" "),e("p",[a._v("什么是「重置 "),e("code",[a._v("HEAD")]),a._v(" 所带来的新的差异」？就是这里：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe333cb5c6a249~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[a._v("由于 "),e("code",[a._v("HEAD")]),a._v(" 从 "),e("code",[a._v("4")]),a._v(" 移动到了 "),e("code",[a._v("3")]),a._v("，而且在 "),e("code",[a._v("reset")]),a._v(" 的过程中工作目录的内容没有被清理掉，所以 "),e("code",[a._v("4")]),a._v(" 中的改动在 "),e("code",[a._v("reset")]),a._v(" 后就也成了工作目录新增的「工作目录和 "),e("code",[a._v("HEAD")]),a._v(" 的差异」。这就是上面一段中所说的「重置 "),e("code",[a._v("HEAD")]),a._v(" 所带来的差异」。")]),a._v(" "),e("p",[a._v("所以在同样的情况下：")]),a._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[a._v("git status\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe333cb5a0e894~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[a._v("假设此时当前 "),e("code",[a._v("commit")]),a._v(" 的改动内容是新增了 "),e("code",[a._v("laughters.txt")]),a._v(" 文件：")]),a._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[a._v("git "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("show")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("--stat")]),a._v("\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe333cb7cdd727~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[a._v("如果这时你执行：")]),a._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[a._v("git reset --soft HEAD^\n")])])]),e("p",[a._v("那么除了 "),e("code",[a._v("HEAD")]),a._v(" 和它所指向的 "),e("code",[a._v("branch1")]),a._v(" 被移动到 "),e("code",[a._v("HEAD^")]),a._v(" 之外，原先 "),e("code",[a._v("HEAD")]),a._v(" 处 "),e("code",[a._v("commit")]),a._v(" 的改动（也就是那个 "),e("code",[a._v("laughters.txt")]),a._v(" 文件）也会被放进暂存区：")]),a._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[a._v("git status\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe333cb7e6e40b~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("p",[a._v("这就是 "),e("code",[a._v("--soft")]),a._v(" 和 "),e("code",[a._v("--hard")]),a._v(" 的区别："),e("code",[a._v("--hard")]),a._v(" 会清空工作目录的改动，而 "),e("code",[a._v("--soft")]),a._v(" 则会保留工作目录的内容，并把因为保留工作目录内容所带来的新的文件差异放进暂存区。")]),a._v(" "),e("h3",{attrs:{id:"reset-不加参数-保留工作目录-并清空暂存区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-不加参数-保留工作目录-并清空暂存区"}},[a._v("#")]),a._v(" reset 不加参数：保留工作目录，并清空暂存区")]),a._v(" "),e("p",[e("code",[a._v("reset")]),a._v(" 如果不加参数，那么默认使用 "),e("code",[a._v("--mixed")]),a._v(" 参数。它的行为是：保留工作目录，并且清空暂存区。也就是说，工作目录的修改、暂存区的内容以及由 "),e("code",[a._v("reset")]),a._v(" 所导致的新的文件差异，都会被放进工作目录。简而言之，就是「把所有差异都混合（mixed）放在工作目录中」。")]),a._v(" "),e("p",[a._v("还以同样的情况为例：")]),a._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[a._v("git status\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe333cb5a0e894~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("blockquote",[e("p",[a._v("修改了 "),e("code",[a._v("games.txt")]),a._v(" 和 "),e("code",[a._v("shopping list.txt")]),a._v("，并把 "),e("code",[a._v("games.txt")]),a._v(" 放进了暂存区。")])]),a._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[a._v("git "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("show")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("--stat")]),a._v("\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe333cb7cdd727~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("blockquote",[e("p",[a._v("最新的 "),e("code",[a._v("commit")]),a._v(" 中新增了 "),e("code",[a._v("laughters.txt")]),a._v(" 文件。")])]),a._v(" "),e("p",[a._v("这时如果你执行无参数的 "),e("code",[a._v("reset")]),a._v("：")]),a._v(" "),e("div",{staticClass:"language-perl extra-class"},[e("pre",{pre:!0,attrs:{class:"language-perl"}},[e("code",[a._v("git reset HEAD"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v("\n")])])]),e("p",[a._v("工作目录的内容和 "),e("code",[a._v("--soft")]),a._v(" 一样会被保留，但和 "),e("code",[a._v("--soft")]),a._v(" 的区别在于，它会把暂存区清空：")]),a._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[a._v("git status\n")])])]),e("p",[e("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/15fe333d086f9754~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.webp",alt:"img"}})]),a._v(" "),e("h2",{attrs:{id:"小结-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[a._v("#")]),a._v(" 小结")]),a._v(" "),e("p",[a._v("本节内容讲了 "),e("code",[a._v("reset")]),a._v(" 指令的本质：重置 "),e("code",[a._v("HEAD")]),a._v(" 以及它所指向的 "),e("code",[a._v("branch")]),a._v(" 的位置。同时，介绍了 "),e("code",[a._v("reset")]),a._v(" 的三种参数：")]),a._v(" "),e("ol",[e("li",[e("code",[a._v("--hard")]),a._v("：重置位置的同时，清空工作目录的所有改动；")]),a._v(" "),e("li",[e("code",[a._v("--soft")]),a._v("：重置位置的同时，保留工作目录和暂存区的内容，并把重置 "),e("code",[a._v("HEAD")]),a._v(" 的位置所导致的新的文件差异放进暂存区。")]),a._v(" "),e("li",[e("code",[a._v("--mixed")]),a._v("（默认）：重置位置的同时，保留工作目录的内容，并清空暂存区。")])]),a._v(" "),e("p",[a._v("除了上面这三种参数，还有一些没有列出的较为不常用的参数；另外除了我讲的功能外，"),e("code",[a._v("reset")]),a._v(" 其实也还有一些别的功能和用法。不过 "),e("code",[a._v("reset")]),a._v(" 最关键的功能、用法和本质原理就是上面这些了，想了解更多的话，可以去官网了解一下。")])])}),[],!1,null,null,null);t.default=v.exports}}]);