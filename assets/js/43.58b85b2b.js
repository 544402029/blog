(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{464:function(t,s,a){"use strict";a.r(s);var n=a(65),v=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"通信类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通信类"}},[t._v("#")]),t._v(" 通信类")]),t._v(" "),a("h3",{attrs:{id:"http-协议类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-协议类"}},[t._v("#")]),t._v(" HTTP 协议类")]),t._v(" "),a("h4",{attrs:{id:"http-协议的主要特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-协议的主要特点"}},[t._v("#")]),t._v(" HTTP 协议的主要特点?")]),t._v(" "),a("ol",[a("li",[t._v("简单快速 (每个资源都是固定的 URI)")]),t._v(" "),a("li",[t._v("灵活 (通过一个 HTTP 协议可以完成不同数据类型的传输)")]),t._v(" "),a("li",[a("strong",[t._v("无连接 (连接一次断掉 , 不会一直连接)")])]),t._v(" "),a("li",[a("strong",[t._v("无状态 (客户端和服务端是两种身份，一次连接后就断开，下次再连接，服务端无法区分两次是否由同一客户端发起的请求)")])])]),t._v(" "),a("h4",{attrs:{id:"http-报文的组成部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-报文的组成部分"}},[t._v("#")]),t._v(" HTTP 报文的组成部分?")]),t._v(" "),a("p",[a("strong",[t._v("由请求报文和响应报文组成:")])]),t._v(" "),a("ol",[a("li",[t._v("请求报文：请求行、请求头、空行、请求体")])]),t._v(" "),a("ul",[a("li",[t._v("请求行包含：地址、http 方法、协议以及版本 ("),a("code",[t._v("GET")]),t._v(" / "),a("code",[t._v("HTTP1.1")]),t._v(")")]),t._v(" "),a("li",[t._v("请求头：就是一些 key\\value 值 , "),a("strong",[t._v("告诉服务端我要什么内容")]),t._v(" , 和要注意什么类型")]),t._v(" "),a("li",[t._v("空行：遇到空行就能知道 下面不是请求头的部分了")]),t._v(" "),a("li",[t._v("请求体：数据")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("响应报文：状态行，响应头、空行、响应体")])]),t._v(" "),a("ul",[a("li",[t._v("状态行: HTTP 协议、状态码 ("),a("code",[t._v("HTTP1.1")]),t._v("/ "),a("code",[t._v("200")]),t._v(" ok)")]),t._v(" "),a("li",[t._v("其它都是与请求报文大同小异的")])]),t._v(" "),a("h4",{attrs:{id:"http-方法有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-方法有哪些"}},[t._v("#")]),t._v(" HTTP 方法有哪些?")]),t._v(" "),a("ul",[a("li",[t._v("GET---------获取资源")]),t._v(" "),a("li",[t._v("POST-------传输资源")]),t._v(" "),a("li",[t._v("PUT---------更新资源")]),t._v(" "),a("li",[t._v("DELETE------删除资源")]),t._v(" "),a("li",[t._v("HEAD--------获取报文首部")])]),t._v(" "),a("h4",{attrs:{id:"get-请求和-post-请求的区别是什么-主要作用在哪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-请求和-post-请求的区别是什么-主要作用在哪"}},[t._v("#")]),t._v(" Get 请求和 Post 请求的区别是什么?主要作用在哪?")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("get")]),t._v("点击浏览器回退按钮"),a("strong",[t._v("不会再次提交")]),t._v(" , "),a("code",[t._v("post")]),a("strong",[t._v("会再次提交请求")])]),t._v(" "),a("li",[a("code",[t._v("get")]),t._v("请求会被浏览器主动"),a("strong",[t._v("缓存")]),t._v(" , "),a("code",[t._v("post")]),t._v("不会 (除非手动设置)")]),t._v(" "),a("li",[a("code",[t._v("get")]),t._v("的参数可以保留在浏览器"),a("strong",[t._v("历史记录")]),t._v(" , "),a("code",[t._v("post")]),t._v("不会")]),t._v(" "),a("li",[a("code",[t._v("get")]),t._v("产生的 URL 地址可以被"),a("strong",[t._v("收藏")]),t._v("，"),a("code",[t._v("post")]),t._v("不可以")]),t._v(" "),a("li",[a("code",[t._v("get")]),t._v("参数通过 url 传递 ，是"),a("strong",[t._v("明文显示")]),t._v("的, "),a("code",[t._v("post")]),t._v("通过"),a("code",[t._v("Request body")]),t._v(", "),a("code",[t._v("post")]),t._v("传递敏感信息相对更安全")]),t._v(" "),a("li",[a("code",[t._v("get")]),t._v("传送参数"),a("strong",[t._v("长度")]),t._v("是有限制的(2kb) , "),a("code",[t._v("post")]),t._v("无限制（浏览器规定的长度）")]),t._v(" "),a("li",[a("code",[t._v("post")]),t._v(" 支持更多的"),a("strong",[t._v("编码类型")]),t._v(", 且不对数据类型限制")])]),t._v(" "),a("h4",{attrs:{id:"http-首部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-首部"}},[t._v("#")]),t._v(" http 首部")]),t._v(" "),a("p",[t._v("首部分为请求首部和响应首部，并且部分首部两种通用。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/tongyongshoubu.png",alt:"输入图片说明"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/qingqiushoubu.png",alt:"输入图片说明"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/xiangyingshoubu.png",alt:"输入图片说明"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/shitishoubu.png",alt:"输入图片说明"}})]),t._v(" "),a("h4",{attrs:{id:"什么是持久链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是持久链接"}},[t._v("#")]),t._v(" 什么是持久链接?")]),t._v(" "),a("p",[t._v("持久连接 "),a("code",[t._v("Keep-alive")])]),t._v(" "),a("p",[t._v("非"),a("code",[t._v("Keep-ailve")]),t._v("模式时，每个请求/应答客户端和服务器都要新建一个连接，完成后就断开")]),t._v(" "),a("p",[t._v("当"),a("code",[t._v("Keep-ailve")]),t._v("模式（又称持久连接、连接重用）时，客户端到服务器端的"),a("strong",[t._v("连接持续有效")]),t._v("，避免后续请求时，重新建立连接。")]),t._v(" "),a("p",[t._v("并且必须是"),a("strong",[t._v("http1.1")]),t._v("版本才支持持久连接。")]),t._v(" "),a("h4",{attrs:{id:"什么是管线化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是管线化"}},[t._v("#")]),t._v(" 什么是管线化?")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("GET")]),t._v(" 和 "),a("strong",[t._v("HEAD")]),t._v(" 可以管线化 ， "),a("strong",[t._v("POST 是有所限制")])]),t._v(" "),a("li",[t._v("初次创建连接时不应该启动管线机制， 因为对方（服务器）不一定支持 HTTP/1.1 版本的协议")])]),t._v(" "),a("p",[t._v("持久连接：请求 1 -》响应 1-》请求 2-》响应 2-》请求 3 -》响应 3")]),t._v(" "),a("p",[t._v("管线化：请求 1-》请求 2-》请求 3-》响应 1-》响应 2-》响应 3 把现在的请求一次打包传输过去，响应也是一次性返回过来，并且是在持久连接的情况下完成的， 管线化是通过持久连接完成，仅 HTTP/1.1 支持此技术。")]),t._v(" "),a("h4",{attrs:{id:"http-与-https-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-与-https-的区别"}},[t._v("#")]),t._v(" HTTP 与 HTTPS 的区别？")]),t._v(" "),a("ul",[a("li",[t._v("HTTP 协议通常"),a("strong",[t._v("承载于 TCP 协议")]),t._v("之上，在 HTTP 和 TCP 之间添加一个"),a("strong",[t._v("安全协议层")]),t._v("（SSL 或 TLS），就成了我们常说的 HTTPS。")]),t._v(" "),a("li",[t._v("默认 HTTP 的端口号为"),a("code",[t._v("80")]),t._v("，HTTPS 的端口号为"),a("code",[t._v("443")]),t._v("。")])]),t._v(" "),a("h4",{attrs:{id:"为什么-https-安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么-https-安全"}},[t._v("#")]),t._v(" 为什么 HTTPS 安全？")]),t._v(" "),a("p",[t._v("因为网络请求需要中间有很多的"),a("strong",[t._v("服务器路由器的转发")]),t._v("。中间的节点很有可能篡改信息，而如果使用 HTTPS，密钥在你和终点站才有。"),a("br"),t._v("https 之所以比 http 安全，是因为他利用了 "),a("code",[t._v("ssl/tls")]),t._v(" 协议传输。它包含证书，卸载，流量转发，负载均衡，页面适配，浏览器适配，"),a("code",[t._v("refer")]),t._v(" 传递等，保障了传输过程的安全性。")]),t._v(" "),a("h4",{attrs:{id:"contenttype-有哪几种类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contenttype-有哪几种类型"}},[t._v("#")]),t._v(" contentType 有哪几种类型?")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("application/json")])]),t._v(" "),a("li",[a("code",[t._v("text/xml")])]),t._v(" "),a("li",[a("code",[t._v("multipart/form-data")])]),t._v(" "),a("li",[a("code",[t._v("application/x-www-form-urlencoded")])])]),t._v(" "),a("h4",{attrs:{id:"如何保持登录状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何保持登录状态"}},[t._v("#")]),t._v(" 如何保持登录状态？")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("cookie")]),t._v("+"),a("code",[t._v("session")])])]),t._v(" "),a("p",[a("code",[t._v("cookie")]),t._v("的特点："),a("code",[t._v("cookie")]),t._v("会伴随每次请求，在浏览器和服务器之间来回传递；")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/cookietoken.png",alt:"输入图片说明"}})]),t._v(" "),a("ul",[a("li",[a("code",[t._v("token")]),t._v(" 令牌机制")])]),t._v(" "),a("p",[t._v("非 web 端，没有 "),a("code",[t._v("cookie")]),t._v(" ，因此不能用 "),a("code",[t._v("cookie")]),t._v(" + "),a("code",[t._v("sessionid")]),t._v(" 这种机制实现状态保持。")]),t._v(" "),a("p",[t._v("但是我们可以借鉴这个实现思路，自己模拟 "),a("code",[t._v("cookie")]),t._v(" 和 "),a("code",[t._v("session")]),t._v(" 的机制，"),a("code",[t._v("token")]),t._v("机制（令牌机制）。")]),t._v(" "),a("h4",{attrs:{id:"status-状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#status-状态码"}},[t._v("#")]),t._v(" status 状态码")]),t._v(" "),a("ul",[a("li",[t._v("1xx 指示信息\n"),a("ul",[a("li",[t._v("表示请求一接收，继续处理")])])]),t._v(" "),a("li",[t._v("2xx 表示成功处理请求\n"),a("ul",[a("li",[a("code",[t._v("200")]),t._v("表示客户端请求成功")]),t._v(" "),a("li",[a("code",[t._v("206")]),t._v("表示范围请求（视频，音频文件很大的时候，基本返回的都是 206）")])])]),t._v(" "),a("li",[t._v("3xx 重定向\n"),a("ul",[a("li",[a("code",[t._v("301")]),t._v("永久重定向，被分配新的 url")]),t._v(" "),a("li",[a("code",[t._v("302")]),t._v("临时重定向，临时分配新 url")]),t._v(" "),a("li",[a("code",[t._v("304")]),t._v("表示使用缓存")])])]),t._v(" "),a("li",[t._v("4xx 客户端请求错误\n"),a("ul",[a("li",[a("code",[t._v("400")]),t._v("语法错误，不能被服务器所理解")]),t._v(" "),a("li",[a("code",[t._v("401")]),t._v("请求未经授权")]),t._v(" "),a("li",[a("code",[t._v("403")]),t._v("请求页面的访问被禁止")]),t._v(" "),a("li",[a("code",[t._v("404")]),t._v("请求资源不存在")])])]),t._v(" "),a("li",[t._v("5xx 服务器端错误\n"),a("ul",[a("li",[a("code",[t._v("500")]),t._v("服务器执行请求发生错误")]),t._v(" "),a("li",[a("code",[t._v("501")]),t._v("服务器不支持当前请求所需的某个功能")]),t._v(" "),a("li",[a("code",[t._v("503")]),t._v("服务器过载或宕机")])])])]),t._v(" "),a("h4",{attrs:{id:"简述三次握手是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简述三次握手是什么"}},[t._v("#")]),t._v(" 简述三次握手是什么？")]),t._v(" "),a("p",[t._v("HTTP 协议是使用 TCP 协议作为其传输层协议的，在拿到服务器的 IP 地址后，浏览器客户端会与服务器建立 TCP 连接。该过程包括三次握手：")]),t._v(" "),a("ol",[a("li",[t._v("建立连接时，客户端向服务器"),a("strong",[t._v("发送请求报文")])]),t._v(" "),a("li",[t._v("服务器收到请求报文后，"),a("strong",[t._v("如同意连接")]),t._v("，则向客户端"),a("strong",[t._v("发送确认报文")])]),t._v(" "),a("li",[t._v("客户端收到服务器的确认后，"),a("strong",[t._v("再次向服务器发出确认报文")]),t._v("，完成连接。")])]),t._v(" "),a("p",[t._v("三次握手主要是为了防止已经失效的请求报文字段发送给服务器，浪费资源。")]),t._v(" "),a("h4",{attrs:{id:"简述四次挥手是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简述四次挥手是什么"}},[t._v("#")]),t._v(" 简述四次挥手是什么？")]),t._v(" "),a("ol",[a("li",[t._v("客户端"),a("strong",[t._v("想断开连接")]),t._v("，发送消息给服务器")]),t._v(" "),a("li",[t._v("服务器通知客户端已经接收到断开连接请求，但"),a("strong",[t._v("还没做好断开连接准备（服务器可能还在向客户端发送数据）")])]),t._v(" "),a("li",[t._v("服务器已经"),a("strong",[t._v("做好断开连接准备")]),t._v("，通知客户端")]),t._v(" "),a("li",[t._v("客户端"),a("strong",[t._v("发送消息")]),t._v("给服务器，"),a("strong",[t._v("确定断开连接")]),t._v("，服务器关闭连接")])]),t._v(" "),a("h4",{attrs:{id:"udp-与-tcp-的区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#udp-与-tcp-的区别是什么"}},[t._v("#")]),t._v(" UDP 与 TCP 的区别是什么？")]),t._v(" "),a("p",[t._v("首先 UDP 协议是面向无连接的，也就是说不需要在正式传递数据之前先连接起双方。然后 UDP 协议只是数据报文的搬运工，不保证有序且不丢失的传递到对端，并且 UDP 协议也没有任何控制流量的算法，总的来说 UDP 相较于 TCP 更加的轻便。")]),t._v(" "),a("p",[a("strong",[t._v("面向无连接")])]),t._v(" "),a("p",[t._v("首先 UDP 是不需要和 TCP 一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。")]),t._v(" "),a("p",[t._v("并且也只是数据报文的搬运工，不会对数据报文进行任何拆分和拼接操作。")]),t._v(" "),a("p",[t._v("具体来说就是：")]),t._v(" "),a("ul",[a("li",[t._v("在发送端，应用层将数据传递给传输层的 UDP 协议，UDP 只会给数据增加一个 UDP 头标识下是 UDP 协议，然后就传递给网络层了")]),t._v(" "),a("li",[t._v("在接收端，网络层将数据传递给传输层，UDP 只去除 IP 报文头就传递给应用层，不会任何拼接操作")])]),t._v(" "),a("p",[a("strong",[t._v("不可靠性")])]),t._v(" "),a("p",[t._v("首先不可靠性体现在无连接上，通信都不需要建立连接，想发就发，这样的情况肯定不可靠。")]),t._v(" "),a("p",[t._v("并且收到什么数据就传递什么数据，并且也不会备份数据，发送数据也不会关心对方是否已经正确接收到数据了。")]),t._v(" "),a("p",[t._v("再者网络环境时好时坏，但是 UDP 因为没有拥塞控制，一直会以恒定的速度发送数据。即使网络条件不好，也不会对发送速率进行调整。这样实现的弊端就是在网络条件不好的情况下可能会导致丢包，但是优点也很明显，在某些实时性要求高的场景（比如电话会议）就需要使用 UDP 而不是 TCP。")]),t._v(" "),a("p",[a("strong",[t._v("高效")])]),t._v(" "),a("p",[t._v("虽然 UDP 协议不是那么的可靠，但是正是因为它不是那么的可靠，所以也就没有 TCP 那么复杂了，需要保证数据不丢失且有序到达。")]),t._v(" "),a("p",[a("strong",[t._v("传输方式")])]),t._v(" "),a("p",[t._v("UDP 不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说 UDP 提供了单播，多播，广播的功能。")]),t._v(" "),a("p",[a("strong",[t._v("适合使用的场景")])]),t._v(" "),a("p",[t._v("UDP 虽然对比 TCP 有很多缺点，但是正是因为这些缺点造就了它高效的特性，在很多实时性要求高的地方都可以看到 UDP 的身影。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("直播")]),t._v(" "),a("p",[t._v("想必大家都看过直播吧，大家可以考虑下如果直播使用了基于 TCP 的协议会发生什么事情？")])])]),t._v(" "),a("p",[t._v("TCP 会严格控制传输的正确性，一旦有某一个数据对端没有收到，就会停止下来直到对端收到这个数据。这种问题在网络条件不错的情况下可能并不会发生什么事情，但是在网络情况差的时候就会变成画面卡住，然后再继续播放下一帧的情况。")]),t._v(" "),a("p",[t._v("但是对于直播来说，用户肯定关注的是最新的画面，而不是因为网络条件差而丢失的老旧画面，所以 TCP 在这种情况下无用武之地，只会降低用户体验。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("王者荣耀")]),t._v(" "),a("p",[t._v("虽然不知道王者荣耀底层使用了什么协议，但是对于这类实时性要求很高的游戏来说，UDP 是跑不了的。")])])]),t._v(" "),a("p",[t._v("为什么这样说呢？首先对于王者荣耀来说，用户体量是相当大的，如果使用 TCP 连接的话，就可能会出现服务器不够用的情况，因为每台服务器可供支撑的 TCP 连接数量是有限制的。")]),t._v(" "),a("p",[t._v("再者，因为 TCP 会严格控制传输的正确性，如果因为用户网络条件不好就造成页面卡顿然后再传输旧的游戏画面是肯定不能接受的，毕竟对于这类实时性要求很高的游戏来说，最新的游戏画面才是最需要的，而不是老旧的画面，否则角色都不知道死多少次了。")]),t._v(" "),a("p",[a("strong",[t._v("小结：")])]),t._v(" "),a("ul",[a("li",[t._v("UDP 相比 TCP 更加简单，不需要"),a("strong",[t._v("建立连接")]),t._v("，不需要"),a("strong",[t._v("验证数据报文")]),t._v("，不需要"),a("strong",[t._v("流量控制")]),t._v("，只会把想发的数据报文一股脑的丢给对端")]),t._v(" "),a("li",[t._v("UDP 并没有 TCP 传输来的"),a("strong",[t._v("准确")]),t._v("，但是能在很多实时性要求高的地方有所作为（直播，王者荣耀）")])]),t._v(" "),a("h4",{attrs:{id:"为什么-tcp-建立连接需要三次握手-明明两次就可以建立起连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么-tcp-建立连接需要三次握手-明明两次就可以建立起连接"}},[t._v("#")]),t._v(" 为什么 TCP 建立连接需要三次握手，明明两次就可以建立起连接？")]),t._v(" "),a("p",[t._v("解释：")]),t._v(" "),a("p",[t._v("弄清这个问题，我们需要先弄明白三次握手的目的是什么，能不能只用两次握手来达到同样的目的。")]),t._v(" "),a("ul",[a("li",[t._v("第一次握手：客户端发送网络包，服务端收到了。 这样服务端就能得出结论：客户端的发送能力、服务端的接收能力是正常的。")]),t._v(" "),a("li",[t._v("第二次握手：服务端发包，客户端收到了。 这样客户端就能得出结论：服务端的接收、发送能力，客户端的接收、发送能力是正常的。不过此时服务器并不能确认客户端的接收能力是否正常。")]),t._v(" "),a("li",[t._v("第三次握手：客户端发包，服务端收到了。 这样服务端就能得出结论：客户端的接收、发送能力正常，服务器自己的发送、接收能力也正常。")])]),t._v(" "),a("p",[t._v("因此，需要三次握手才能确认双方的接收与发送能力是否正常。")]),t._v(" "),a("p",[t._v("试想如果是用两次握手，则会出现下面这种情况：")]),t._v(" "),a("blockquote",[a("p",[t._v("如客户端发出连接请求，但因连接请求报文丢失而未收到确认，于是客户端再重传一次连接请求。后来收到了确认，建立了连接。数据传输完毕后，就释放了连接，客户端共发出了两个连接请求报文段，其中第一个丢失，第二个到达了服务端，但是第一个丢失的报文段只是在"),a("strong",[t._v("某些网络结点长时间滞留了，延误到连接释放以后的某个时间才到达服务端")]),t._v("，此时服务端误认为客户端又发出一次新的连接请求，于是就向客户端发出确认报文段，同意建立连接，不采用三次握手，只要服务端发出确认，就建立新的连接了，此时客户端忽略服务端发来的确认，也不发送数据，则服务端一直等待客户端发送数据，浪费资源。")])]),t._v(" "),a("h3",{attrs:{id:"通信类-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通信类-2"}},[t._v("#")]),t._v(" 通信类")]),t._v(" "),a("h4",{attrs:{id:"什么是同源策略及限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是同源策略及限制"}},[t._v("#")]),t._v(" 什么是同源策略及限制？")]),t._v(" "),a("ul",[a("li",[t._v("同源："),a("strong",[t._v("协议")]),t._v("，"),a("strong",[t._v("域名")]),t._v("，"),a("strong",[t._v("端口")]),t._v("三者必须一致！")])]),t._v(" "),a("p",[t._v("同源策略限制两个不同源加载的文档和脚本进行交互，它是一个隔离潜在恶意文件的安全机制。")]),t._v(" "),a("ul",[a("li",[t._v("限制：\n"),a("ul",[a("li",[t._v("cookie LocalStorage IndexDB 无法获取")]),t._v(" "),a("li",[t._v("DOM 无法取得")]),t._v(" "),a("li",[t._v("Ajax 不能发送")])])])]),t._v(" "),a("p",[t._v("前端： "),a("code",[t._v("http://a.com:8080/")])]),t._v(" "),a("p",[t._v("server： "),a("code",[t._v("https://b.com/api/xxx")])]),t._v(" "),a("p",[a("code",[t._v("http")]),t._v(" "),a("code",[t._v("https")]),t._v("是协议 ， "),a("code",[t._v("a.com")]),t._v("是域名 ， 默认端口是"),a("code",[t._v("80")]),t._v("。")]),t._v(" "),a("p",[t._v("如上， 协议， 域名， 端口都不相同， 无法发送请求。")]),t._v(" "),a("h4",{attrs:{id:"为什么浏览器要使用同源策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么浏览器要使用同源策略"}},[t._v("#")]),t._v(" 为什么浏览器要使用同源策略？")]),t._v(" "),a("p",[t._v("那么是出于什么安全考虑才会引入这种机制呢？ 其实主要是用来防止 CSRF 攻击的。简单点说，CSRF 攻击是利用用户的登录态发起恶意请求。")]),t._v(" "),a("p",[t._v("也就是说，没有同源策略的情况下，A 网站可以被任意其他来源的 Ajax 访问到内容。如果你当前 A 网站还存在登录态，那么对方就可以通过 Ajax 获得你的任何信息。当然跨域并不能完全阻止 CSRF。")]),t._v(" "),a("p",[t._v("然后我们来考虑一个问题，请求跨域了，那么请求到底发出去没有？ 请求必然是发出去了，但是浏览器"),a("strong",[t._v("拦截了响应")]),t._v("。你可能会疑问明明通过表单的方式可以发起跨域请求，为什么 Ajax 就不会。因为归根结底，跨域是为了阻止用户读取到另一个域名下的内容，Ajax 可以获取响应，浏览器认为这不安全，所以拦截了响应。但是表单并不会获取新的内容，所以可以发起跨域请求。同时也说明了跨域并不能完全阻止 CSRF，因为请求毕竟是发出去了。")]),t._v(" "),a("p",[a("strong",[t._v("加载图片，js，css 可无视同源策略")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("<img/>")]),t._v("可用于统计打点，可使用第三方统计服务")]),t._v(" "),a("li",[a("code",[t._v("<link/>")]),t._v("、"),a("code",[t._v("<script/>")]),t._v("可使用 CDN， CDN 一般都是外域")]),t._v(" "),a("li",[a("code",[t._v("<script/>")]),t._v("可实现 JSONP")])]),t._v(" "),a("h4",{attrs:{id:"你有几种方式可以解决跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#你有几种方式可以解决跨域问题"}},[t._v("#")]),t._v(" 你有几种方式可以解决跨域问题？")]),t._v(" "),a("ul",[a("li",[t._v("JSONP")])]),t._v(" "),a("p",[t._v("利用 "),a("code",[t._v("<script>")]),t._v(" 标签没有跨域限制。通过 "),a("code",[t._v("<script>")]),t._v(" 标签指向一个需要访问的地址并提供一个回调函数来接收数据。")]),t._v(" "),a("p",[t._v("JSONP 使用简单且兼容性不错，但是只限于 "),a("code",[t._v("get")]),t._v(" 请求。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://domain/api?param1=a&param2=b&callback=jsonp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("服务器返回的东西类似于以下代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("jsonp({})\n")])])]),a("h5",{attrs:{id:"手动封装-sonp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手动封装-sonp"}},[t._v("#")]),t._v(" 手动封装 SONP")]),t._v(" "),a("p",[t._v("在开发中可能会遇到多个 JSONP 请求的回调函数名是相同的，这时候就需要自己封装一个 JSONP，以下是简单实现:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jsonpCallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" success")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" script "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("async "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/javascript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("jsonpCallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    success "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("success")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://webapi.amap.com/maps?v=1.4.10&key=76&callback=onmaploaded"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onmaploaded"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("原理：")])]),t._v(" "),a("ol",[a("li",[t._v("jsonp 发送的不是 ajax 请求。")]),t._v(" "),a("li",[t._v("jsonp 动态创建一个"),a("code",[t._v("script")]),t._v("标签， 因为"),a("code",[t._v("script")]),t._v("标签是没有同源策略限制的，是可以跨域的。")]),t._v(" "),a("li",[t._v("把这个"),a("code",[t._v("script")]),t._v("标签的 src 指向我们请求的服务端地址， 这个地址会携带一个参数：callback。 一个回调函数 ， 服务端会把数据通过这个回调函数返回给客户端，但是客户端没有这个函数怎么接受呢？ 所以在发送请求之前，要在全局（window）注册这样一个方法， 利用这个方法， 来获得数据。")]),t._v(" "),a("li",[t._v("这个回调函数名需要跟服务器约定好， 是一致的。")])]),t._v(" "),a("ul",[a("li",[t._v("CORS")])]),t._v(" "),a("p",[t._v("CORS 需要浏览器和后端同时支持。IE 8 和 9 需要通过 XDomainRequest 来实现。")]),t._v(" "),a("p",[t._v("浏览器会自动进行 CORS 通信，实现 CORS 通信的关键是后端。只要后端实现了 CORS，就实现了跨域。")]),t._v(" "),a("p",[t._v("服务端设置 Access-Control-Allow-Origin 就可以开启 CORS。 该属性表示哪些域名可以访问资源，如果设置通配符则表示所有网站都可以访问资源。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/cors.png",alt:"输入图片说明"}})]),t._v(" "),a("p",[t._v("虽然设置 CORS 和前端没什么关系，但是通过这种方式解决跨域问题的话，会在发送请求时出现两种情况，分别为简单请求和复杂请求。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("简单请求")]),t._v(" "),a("p",[t._v("以 Ajax 为例，当满足以下条件时，会触发简单请求")])])]),t._v(" "),a("ol",[a("li",[t._v("使用下列方法之一：")])]),t._v(" "),a("ul",[a("li",[t._v("GET")]),t._v(" "),a("li",[t._v("HEAD")]),t._v(" "),a("li",[t._v("POST")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("Content-Type")]),t._v(" 的值仅限于下列三者之一：")])]),t._v(" "),a("ul",[a("li",[t._v("text/plain")]),t._v(" "),a("li",[t._v("multipart/form-data")]),t._v(" "),a("li",[t._v("application/x-www-form-urlencoded")])]),t._v(" "),a("p",[t._v("请求中的任意 "),a("code",[t._v("XMLHttpRequestUpload")]),t._v(" 对象均没有注册任何事件监听器； "),a("code",[t._v("XMLHttpRequestUpload")]),t._v(" 对象可以使用 "),a("code",[t._v("XMLHttpRequest.upload")]),t._v(" 属性访问。")]),t._v(" "),a("ul",[a("li",[t._v("复杂请求")])]),t._v(" "),a("p",[t._v("那么很显然，不符合以上条件的请求就肯定是复杂请求了。")]),t._v(" "),a("p",[t._v("对于复杂请求来说，首先会发起一个预检请求，该请求是 "),a("code",[t._v("option")]),t._v(" 方法的，通过该请求来知道服务端是否允许跨域请求。")]),t._v(" "),a("p",[t._v("对于预检请求来说，如果你使用过 Node 来设置 CORS 的话，可能会遇到过这么一个坑")]),t._v(" "),a("p",[t._v("以下以 express 框架举例：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("header")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Origin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("header")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Methods"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PUT, GET, POST, DELETE, OPTIONS"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("header")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Headers"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Control-Allow-Credentials"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("该请求会验证你的 Authorization 字段，没有的话就会报错。")]),t._v(" "),a("p",[t._v("当前端发起了复杂请求后，你会发现就算你代码是正确的，返回结果也永远是报错的。因为预检请求也会进入回调中，也会触发 next 方法，因为预检请求并不包含 Authorization 字段，所以服务端会报错。")]),t._v(" "),a("p",[t._v("想解决这个问题很简单，只需要在回调中过滤 option 方法即可")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("204")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("postmessage")])]),t._v(" "),a("p",[t._v("获取嵌入页面中的第三方页面数据。一个页面发送消息，另一个页面判断来源并接收消息")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送消息端")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://test.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收消息端")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originalEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("origin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://test.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"验证通过"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("document.domain")])]),t._v(" "),a("p",[t._v("该方式只能用于二级域名相同的情况下，比如 "),a("code",[t._v("a.test.com")]),t._v(" 和 "),a("code",[t._v("b.test.com")]),t._v(" 适用于该方式。")]),t._v(" "),a("p",[t._v("只需要给页面添加 "),a("code",[t._v("document.domain = 'test.com'")]),t._v(" 表示二级域名都相同就可以实现跨域")]),t._v(" "),a("h4",{attrs:{id:"ajax-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax-原理"}},[t._v("#")]),t._v(" Ajax 原理")]),t._v(" "),a("p",[a("code",[t._v("Ajax")]),t._v("的原理简单来说是在用户和服务器之间"),a("strong",[t._v("加了—个中间层(")]),a("code",[t._v("**AJAX**")]),a("strong",[t._v("引擎)")]),t._v("，通过"),a("code",[t._v("XmlHttpRequest")]),t._v("对象来"),a("strong",[t._v("向服务器发异步请求")]),t._v("，从服务器"),a("strong",[t._v("获得数据")]),t._v("，然后用"),a("code",[t._v("JS")]),t._v("来"),a("strong",[t._v("操作")]),a("code",[t._v("**DOM**")]),a("strong",[t._v("而更新页面")]),t._v("。使用户操作与服务器响应"),a("strong",[t._v("异步化")]),t._v("。"),a("code",[t._v("XMLHttpRequest")]),t._v("是"),a("code",[t._v("ajax")]),t._v("的核心机制。")]),t._v(" "),a("h4",{attrs:{id:"ajax-具体怎么实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax-具体怎么实现"}},[t._v("#")]),t._v(" Ajax 具体怎么实现?")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Request was unsuccessful: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设由ontimeout处理")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"timeout.php"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置1秒超时")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ontimeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Request did not return in a second."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"readystate-状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readystate-状态码"}},[t._v("#")]),t._v(" readyState 状态码")]),t._v(" "),a("ul",[a("li",[t._v("0 - 未初始化 , 还"),a("strong",[t._v("没有")]),t._v("调用"),a("code",[t._v("send")]),t._v("方法")]),t._v(" "),a("li",[t._v("1 - 载入 "),a("strong",[t._v("已调用")]),a("code",[t._v("send")]),t._v("方法,"),a("strong",[t._v("正在发送请求")])]),t._v(" "),a("li",[t._v("2 - 载入完成 "),a("code",[t._v("send")]),t._v("方法"),a("strong",[t._v("执行完成")]),t._v(" , 已"),a("strong",[t._v("接收到全部")]),t._v("响应内容")]),t._v(" "),a("li",[t._v("3 - 交互 正在"),a("strong",[t._v("解析")]),t._v("响应内容")]),t._v(" "),a("li",[t._v("4 - 完成 "),a("strong",[t._v("响应内容解析完成")]),t._v(" , 可以在客户端"),a("strong",[t._v("调用")])])]),t._v(" "),a("h3",{attrs:{id:"安全防范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全防范"}},[t._v("#")]),t._v(" 安全防范")]),t._v(" "),a("h4",{attrs:{id:"什么是-xss-攻击-如何防范-xss-攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-xss-攻击-如何防范-xss-攻击"}},[t._v("#")]),t._v(" 什么是 XSS 攻击？如何防范 XSS 攻击？")]),t._v(" "),a("p",[t._v("基本概念: "),a("strong",[t._v("跨域脚本攻击")])]),t._v(" "),a("p",[t._v("XSS 简单点来说，就是攻击者将可以执行的代码注入到网页中。")]),t._v(" "),a("p",[a("strong",[t._v("举例：")])]),t._v(" "),a("ul",[a("li",[t._v("一个博客网站, 我发表一篇博客， 其中嵌入"),a("code",[t._v("<script>")]),t._v("脚本")]),t._v(" "),a("li",[t._v("脚本内容： 获取 cookie ， 发送到我的服务器（服务器配合跨域）")]),t._v(" "),a("li",[t._v("发布这篇博客， 有人查看它， 我轻松收割访问者的 cookie")])]),t._v(" "),a("h5",{attrs:{id:"防范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防范"}},[t._v("#")]),t._v(" 防范:")]),t._v(" "),a("p",[t._v("转义输入输出的内容，对于引号、尖括号、斜杠进行转义")]),t._v(" "),a("h4",{attrs:{id:"什么是-csrf-攻击-如何防范-csrf-攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-csrf-攻击-如何防范-csrf-攻击"}},[t._v("#")]),t._v(" 什么是 CSRF 攻击？如何防范 CSRF 攻击？")]),t._v(" "),a("p",[t._v("CSRF , 通常称为"),a("strong",[t._v("跨站请求伪造")])]),t._v(" "),a("p",[a("strong",[t._v("原理:")])]),t._v(" "),a("p",[t._v("原理就是攻击者构造出一个后端请求地址，诱导用户点击或者通过某些途径自动发起请求。如果用户是在登录状态下的话，后端就以为是用户在操作，从而进行相应的逻辑。")]),t._v(" "),a("p",[t._v("举个例子，假设网站中有一个通过 GET 请求提交用户评论的接口，那么攻击者就可以在钓鱼网站中加入一个图片，图片的地址就是评论接口")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.domain.com/xxx?comment="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("attack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("那么你是否会想到使用 POST 方式提交请求是不是就没有这个问题了呢？其实并不是，使用这种方式也不是百分百安全的，攻击者同样可以诱导用户进入某个页面，在页面中通过表单提交 POST 请求。")]),t._v(" "),a("p",[a("strong",[t._v("预防：")])]),t._v(" "),a("ol",[a("li",[t._v("Get 请求不对数据进行修改")]),t._v(" "),a("li",[t._v("不让第三方网站访问到用户 "),a("code",[t._v("Cookie")])]),t._v(" "),a("li",[t._v("阻止第三方网站请求接口")]),t._v(" "),a("li",[t._v("请求时附带验证信息，比如验证码或者 Token\n"),a("ol",[a("li",[t._v("token 验证：登陆成功后服务器下发 token 令牌存到用户本地，再次访问时要"),a("strong",[t._v("主动发送 token")]),t._v("，浏览器只能主动发"),a("code",[t._v("cookie")]),t._v("，做不到主动发"),a("code",[t._v("token")])]),t._v(" "),a("li",[t._v("referer 验证：判断页面来源是否自己站点的页面，不是不执行请求")]),t._v(" "),a("li",[t._v("隐藏令牌： 令牌放在"),a("code",[t._v("http header")]),t._v("头中，而不是链接中 (和"),a("code",[t._v("token")]),t._v("类似)")]),t._v(" "),a("li",[t._v("验证码。")])])])]),t._v(" "),a("p",[a("strong",[t._v("SameSite")])]),t._v(" "),a("p",[t._v("可以对 "),a("code",[t._v("Cookie")]),t._v(" 设置 "),a("code",[t._v("SameSite")]),t._v(" 属性。该属性表示 Cookie 不随着跨域请求发送，可以很大程度减少 CSRF 的攻击，但是该属性目前并不是所有浏览器都兼容。")]),t._v(" "),a("p",[a("strong",[t._v("验证 Referer")])]),t._v(" "),a("p",[t._v("对于需要防范 CSRF 的请求，我们可以通过验证 Referer 来判断该请求是否为第三方网站发起的。")]),t._v(" "),a("p",[a("strong",[t._v("Token")])]),t._v(" "),a("p",[t._v("服务器下发一个随机 Token，每次发起请求时将 Token 携带上，服务器验证 Token 是否有效。")]),t._v(" "),a("h4",{attrs:{id:"csrf-与-xss-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf-与-xss-的区别"}},[t._v("#")]),t._v(" CSRF 与 XSS 的区别：")]),t._v(" "),a("p",[t._v("CSRF 需要用户登陆，利用网站自己的接口漏洞进行攻击")]),t._v(" "),a("p",[t._v("xss 通过注入脚本执行自己的代码")]),t._v(" "),a("h4",{attrs:{id:"什么是点击劫持-如何防范点击劫持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是点击劫持-如何防范点击劫持"}},[t._v("#")]),t._v(" 什么是点击劫持？如何防范点击劫持？")]),t._v(" "),a("p",[t._v("点击劫持是一种视觉欺骗的攻击手段。攻击者将需要攻击的网站通过 "),a("code",[t._v("iframe")]),t._v(" 嵌套的方式嵌入自己的网页中，并将 "),a("code",[t._v("iframe")]),t._v(" 设置为透明，在页面中透出一个按钮诱导用户点击。")]),t._v(" "),a("ul",[a("li",[t._v("X-FRAME-OPTIONS")]),t._v(" "),a("li",[a("code",[t._v("X-FRAME-OPTIONS")]),t._v(" 是一个 HTTP 响应头，在现代浏览器有一个很好的支持。这个 HTTP 响应头 就是为了防御用 "),a("code",[t._v("iframe")]),t._v(" 嵌套的点击劫持攻击。")])]),t._v(" "),a("p",[t._v("该响应头有三个值可选，分别是")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("DENY")]),t._v("，表示页面不允许通过 iframe 的方式展示")]),t._v(" "),a("li",[a("code",[t._v("SAMEORIGIN")]),t._v("，表示页面可以在相同域名下通过 iframe 的方式展示")]),t._v(" "),a("li",[a("code",[t._v("ALLOW-FROM")]),t._v("，表示页面可以在指定来源的 iframe 中展示")])]),t._v(" "),a("p",[t._v("JS 防御")]),t._v(" "),a("p",[t._v("对于某些远古浏览器来说，并不能支持上面的这种方式，那我们只有通过 JS 的方式来防御点击劫持了。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("click-jack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" style "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click-jack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("以上代码的作用就是当通过 iframe 的方式加载页面时，攻击者的网页直接不显示所有内容了。")]),t._v(" "),a("h4",{attrs:{id:"什么是中间人攻击-如何防范中间人攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是中间人攻击-如何防范中间人攻击"}},[t._v("#")]),t._v(" 什么是中间人攻击？如何防范中间人攻击？")]),t._v(" "),a("p",[t._v("中间人攻击是攻击方同时与服务端和客户端建立起了连接，并让对方认为连接是安全的，但是实际上整个通信过程都被攻击者控制了。攻击者不仅能获得双方的通信信息，还能修改通信信息。")]),t._v(" "),a("p",[t._v("通常来说不建议使用公共的 Wi-Fi，因为很可能就会发生中间人攻击的情况。如果你在通信的过程中涉及到了某些敏感信息，就完全暴露给攻击方了。")]),t._v(" "),a("p",[t._v("当然防御中间人攻击其实并不难，只需要增加一个安全通道来传输信息。HTTPS 就可以用来防御中间人攻击，但是并不是说使用了 HTTPS 就可以高枕无忧了，因为如果你没有完全关闭 HTTP 访问的话，攻击方可以通过某些方式将 HTTPS 降级为 HTTP 从而实现中间人攻击。")]),t._v(" "),a("h3",{attrs:{id:"存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储"}},[t._v("#")]),t._v(" 存储")]),t._v(" "),a("h4",{attrs:{id:"有几种方式可以实现存储功能-分别有什么优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有几种方式可以实现存储功能-分别有什么优缺点"}},[t._v("#")]),t._v(" 有几种方式可以实现存储功能，分别有什么优缺点？")]),t._v(" "),a("p",[t._v("cookie，localStorage，sessionStorage，indexDB")]),t._v(" "),a("p",[t._v("我们先来通过表格学习下这几种存储方式的区别:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220809090252494.png",alt:"image-20220809090252494"}})]),t._v(" "),a("p",[t._v("从上表可以看到，"),a("code",[t._v("cookie")]),t._v(" 已经不建议用于存储。如果没有大量数据存储需求的话，可以使用 "),a("code",[t._v("localStorage")]),t._v(" 和 "),a("code",[t._v("sessionStorage")]),t._v(" 。对于不怎么改变的数据尽量使用 "),a("code",[t._v("localStorage")]),t._v(" 存储，否则可以用 "),a("code",[t._v("sessionStorage")]),t._v(" 存储。")]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("cookie")]),t._v(" 来说，我们还需要注意安全性。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220809090303937.png",alt:"image-20220809090303937"}})]),t._v(" "),a("h3",{attrs:{id:"浏览器渲染原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染原理"}},[t._v("#")]),t._v(" 浏览器渲染原理")]),t._v(" "),a("h4",{attrs:{id:"输入-url-到页面渲染的整个流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入-url-到页面渲染的整个流程"}},[t._v("#")]),t._v(" 输入 URL 到页面渲染的整个流程")]),t._v(" "),a("h5",{attrs:{id:"一-首先浏览器根据请求的-url-交给-dns-域名解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-首先浏览器根据请求的-url-交给-dns-域名解析"}},[t._v("#")]),t._v(" 一. 首先浏览器根据请求的 URL 交给 DNS 域名解析")]),t._v(" "),a("p",[t._v("DNS 的作用就是通过域名查询到具体的 IP。")]),t._v(" "),a("p",[t._v("因为 IP 存在数字和英文的组合（IPv6），很不利于人类记忆，所以就出现了域名。可以把域名看成是某个 IP 的别名，DNS 就是去查询这个别名的真正名称是什么。")]),t._v(" "),a("p",[t._v("在 TCP 握手之前就已经进行了 DNS 查询，这个查询是操作系统自己做的。当你在浏览器中想访问 "),a("code",[t._v("www.google.com")]),t._v(" 时，会进行一下操作：")]),t._v(" "),a("ul",[a("li",[t._v("DNS 查询解析的详细过程")])]),t._v(" "),a("p",[t._v("过程："),a("code",[t._v(". -> .com -> google.com. -> www.google.com")])]),t._v(" "),a("ol",[a("li",[t._v("首先在"),a("strong",[t._v("本地域名服务器")]),t._v("中查询 IP 地址")]),t._v(" "),a("li",[t._v("如果没有找到的情况下，本地域名会向"),a("strong",[t._v("根域名服务器")]),t._v("发送请求")]),t._v(" "),a("li",[t._v("如果根域名服务器也不存在该域名时，本地域名会向"),a("strong",[t._v("com 顶级域名服务器")]),t._v("发送请求")]),t._v(" "),a("li",[t._v("依次类推下去。直到最后本地域名服务器得到"),a("code",[t._v("google")]),t._v("的 IP 地址并把它缓存到本地，供下次查询使用。")])]),t._v(" "),a("h5",{attrs:{id:"二-接下来是-tcp-三次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-接下来是-tcp-三次握手"}},[t._v("#")]),t._v(" 二. 接下来是 TCP 三次握手：")]),t._v(" "),a("ol",[a("li",[t._v("得到 ip 地址后向服务器"),a("strong",[t._v("发送请求报文")])]),t._v(" "),a("li",[t._v("服务器收到请求报文后，"),a("strong",[t._v("如同意连接")]),t._v("，则向客户端"),a("strong",[t._v("发送确认报文")])]),t._v(" "),a("li",[t._v("客户端收到服务器的确认后，"),a("strong",[t._v("再次向服务器发出确认报文")]),t._v("，完成连接。")])]),t._v(" "),a("h5",{attrs:{id:"三-浏览器接收相应的数据后开始解析文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-浏览器接收相应的数据后开始解析文件"}},[t._v("#")]),t._v(" 三. 浏览器接收相应的数据后开始解析文件")]),t._v(" "),a("p",[t._v("数据在进入服务端之前，可能还会先经过负责负载均衡的服务器，它的作用就是将请求合理的分发到多台服务器上，这时假设服务端会响应一个 HTML 文件。")]),t._v(" "),a("p",[t._v("首先浏览器会判断状态码是什么，如果是 200 那就继续解析，如果 400 或 500 的话就会报错，如果 300 的话会进行重定向，这里会有个重定向计数器，避免过多次的重定向，超过次数也会报错。")]),t._v(" "),a("p",[t._v("浏览器开始解析文件，如果是 gzip 格式的话会先解压一下，然后通过文件的编码格式知道该如何去解码文件。")]),t._v(" "),a("p",[t._v("文件解码成功后会正式开始渲染流程，先会根据 HTML 构建 DOM 树，有 CSS 的话会去构建 CSSOM 树。如果遇到 script 标签的话，会判断是否存在 async 或者 defer ，前者会并行进行下载并执行 JS，后者会先下载文件，然后等待 HTML 解析完成后顺序执行。")]),t._v(" "),a("p",[t._v("如果以上都没有，就会阻塞住渲染流程直到 JS 执行完毕。遇到文件下载的会去下载文件，这里如果使用 HTTP/2 协议的话会极大的提高多图的下载效率。")]),t._v(" "),a("p",[t._v("CSSOM 树和 DOM 树构建完成后会开始生成 Render 树，这一步就是确定页面元素的布局、样式等等诸多方面的东西")]),t._v(" "),a("p",[t._v("在生成 Render 树的过程中，浏览器就开始调用 GPU 绘制，合成图层，将内容显示在屏幕上了。")]),t._v(" "),a("ul",[a("li",[t._v("根据 HTML 构建 DOM 树。")]),t._v(" "),a("li",[t._v("有 CSS 的话会去构建 CSSOM 树。")]),t._v(" "),a("li",[t._v("如果遇到 script 标签的话，会判断是否存在 "),a("code",[t._v("async")]),t._v(" 或者 "),a("code",[t._v("defer")]),t._v(" ，"),a("code",[t._v("async")]),t._v("的话并行下载并执行 JS，"),a("code",[t._v("defer")]),t._v("的话会先下载文件，然后等待 HTML 解析完成后按顺序执行。")]),t._v(" "),a("li",[t._v("CSSOM 树和 DOM 树构建完成后结合后生成 Render 树，确定页面元素的布局、样式等。在生成 Render 树的过程中，浏览器就开始调用 GPU 绘制，合成图层，将要显示的节点显示在页面。")])]),t._v(" "),a("h4",{attrs:{id:"浏览器渲染过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染过程"}},[t._v("#")]),t._v(" 浏览器渲染过程？")]),t._v(" "),a("blockquote",[a("p",[t._v("我们知道执行 JS 有一个 JS 引擎，那么执行渲染也有一个渲染引擎。同样，渲染引擎在不同的浏览器中也不是都相同的。比如在 Firefox 中叫做 "),a("strong",[t._v("Gecko")]),t._v("，在 Chrome 和 Safari 中都是基于 "),a("strong",[t._v("WebKit")]),t._v(" 开发的。在这一章节中，我们也会主要学习关于 "),a("strong",[t._v("WebKit")]),t._v(" 的这部分渲染引擎内容。")])]),t._v(" "),a("h5",{attrs:{id:"浏览器接收到-html-文件并转换为-dom-树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器接收到-html-文件并转换为-dom-树"}},[t._v("#")]),t._v(" 浏览器接收到 HTML 文件并转换为 DOM 树")]),t._v(" "),a("p",[a("code",[t._v("字节数据 => 字符串 => Token => Node => DOM")])]),t._v(" "),a("ul",[a("li",[t._v("当我们打开网页时，浏览器先去请求对应的 HTML 文件。HTML 只是字符串，计算机不识别，网络传输内容都是"),a("code",[t._v("0")]),t._v("和"),a("code",[t._v("1")]),t._v("这样的"),a("strong",[t._v("字节数据")]),t._v("。浏览器会先把"),a("strong",[t._v("字节数据转换为字符串")]),t._v("，也就是我们写的代码。")]),t._v(" "),a("li",[t._v("然后将字符串"),a("strong",[t._v("语法分析")]),t._v("转换为"),a("strong",[t._v("标记")]),t._v("（token）。这一过程在词法分析中叫做标记化（tokenization）。")]),t._v(" "),a("li",[t._v("标记化后紧接着转换为"),a("strong",[t._v("Node")])]),t._v(" "),a("li",[t._v("然后根据 Node 之间的联系构建成"),a("strong",[t._v("DOM 树")]),t._v("。")]),t._v(" "),a("li",[t._v("在解析 HTML 文件的时候，浏览器还会遇到 CSS 和 JS 文件，这时候浏览器也会去下载并解析这些文件。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/htmltoken.png",alt:"输入图片说明"}})]),t._v(" "),a("p",[t._v("什么是标记呢？？这其实属于编译原理这一块的内容了。简单来说，标记还是字符串，是构成代码的"),a("strong",[t._v("最小单位")]),t._v("。这一过程会将代码分拆成一块块，并给这些内容打上标记，便于理解这些最小单位的代码是什么意思。"),a("br"),a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/imageabaioqian.png",alt:"输入图片说明"}})]),t._v(" "),a("h5",{attrs:{id:"将-css-文件转换为-cssom-树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将-css-文件转换为-cssom-树"}},[t._v("#")]),t._v(" 将 CSS 文件转换为 CSSOM 树")]),t._v(" "),a("ul",[a("li",[t._v("和转化 DOM 树基本相似，浏览器会"),a("strong",[t._v("先确定每个节点的样式")]),t._v("，样式可以自行设置，也是可以继承的。（"),a("strong",[t._v("很消耗资源")]),t._v("）")]),t._v(" "),a("li",[t._v("浏览器需要"),a("strong",[t._v("递归 CSSOM")]),t._v(" 树，确定元素的具体样式。")]),t._v(" "),a("li",[t._v("由于递归过程是很复杂的，我们应该避免写"),a("strong",[t._v("过于具体")]),t._v("的 CSS 选择器，HTML 也不要添加无意义标签，保证"),a("strong",[t._v("层级扁平")]),t._v("。")])]),t._v(" "),a("h5",{attrs:{id:"生成渲染树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成渲染树"}},[t._v("#")]),t._v(" 生成渲染树")]),t._v(" "),a("ul",[a("li",[t._v("当我们生成 DOM 树和 CSSOM 树以后，就需要将这两棵树组合为渲染树。")]),t._v(" "),a("li",[t._v("渲染树只会渲染"),a("strong",[t._v("需要显示的节点")]),t._v("，如果"),a("code",[t._v("display: none")]),t._v("就不会显示。")]),t._v(" "),a("li",[t._v("然后开始进行布局，（也可以叫做回流），调用 GPU 绘制，合成图层，显示在页面。")])]),t._v(" "),a("h4",{attrs:{id:"加载一个资源的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载一个资源的过程"}},[t._v("#")]),t._v(" 加载一个资源的过程")]),t._v(" "),a("ol",[a("li",[t._v("浏览器根据 DNS 服务器获取域名的 IP 地址")]),t._v(" "),a("li",[t._v("向这个 IP 的服务器发送 http 请求")]),t._v(" "),a("li",[t._v("服务器收到,处理,并返回 http 请求")]),t._v(" "),a("li",[t._v("浏览器得到返回内容")])]),t._v(" "),a("h4",{attrs:{id:"为什么操作-dom-慢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么操作-dom-慢"}},[t._v("#")]),t._v(" 为什么操作 DOM 慢？")]),t._v(" "),a("p",[t._v("想必大家都听过操作 DOM 性能很差，但是这其中的原因是什么呢？")]),t._v(" "),a("p",[t._v("因为 DOM 是属于渲染引擎中的东西，而 JS 又是 JS 引擎中的东西。当我们通过 JS 操作 DOM 的时候，其实这个操作涉及到了"),a("strong",[t._v("两个线程之间的通信")]),t._v("，那么势必会带来一些性能上的损耗。操作 DOM 次数一多，也就等同于一直在进行线程之间的通信，并且操作 DOM 可能还会带来"),a("strong",[t._v("重绘回流")]),t._v("的情况，所以也就导致了性能上的问题。")]),t._v(" "),a("h4",{attrs:{id:"插入几万个-dom-如何实现页面不卡顿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入几万个-dom-如何实现页面不卡顿"}},[t._v("#")]),t._v(" 插入几万个 DOM，如何实现页面不卡顿？")]),t._v(" "),a("p",[t._v("使用"),a("a",{attrs:{href:"https://github.com/bvaughn/react-virtualized",target:"_blank",rel:"noopener noreferrer"}},[t._v("虚拟滚动（virtualized scroller）"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("这种技术的原理就是只渲染可视区域内的内容，非可见区域的那就完全不渲染了，当用户在滚动的时候就实时去替换渲染的内容。")]),t._v(" "),a("h4",{attrs:{id:"什么情况阻塞渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么情况阻塞渲染"}},[t._v("#")]),t._v(" 什么情况阻塞渲染?")]),t._v(" "),a("p",[t._v("首先渲染的前提是生成渲染树，所以 "),a("strong",[t._v("HTML")]),t._v(" 和 "),a("strong",[t._v("CSS")]),t._v(" 肯定会阻塞渲染。如果你想渲染的越快，你越应该降低一开始需要渲染的"),a("strong",[t._v("文件大小")]),t._v("，并且"),a("strong",[t._v("扁平层级")]),t._v("，"),a("strong",[t._v("优化选择器")]),t._v("。")]),t._v(" "),a("p",[t._v("然后当浏览器在解析到 "),a("code",[t._v("script")]),t._v("标签时，会暂停构建 DOM，完成后才会从暂停的地方重新开始。也就是说，如果你想首屏渲染的越快，就越不应该在首屏就加载 JS 文件，这也是都建议将 "),a("code",[t._v("script")]),t._v("标签放在 "),a("code",[t._v("body")]),t._v(" 标签底部的原因。")]),t._v(" "),a("p",[t._v("当然在当下，并不是说 "),a("code",[t._v("script")]),t._v("标签必须放在底部，因为你可以给 "),a("code",[t._v("script")]),t._v("标签添加 "),a("code",[t._v("defer")]),t._v("或者 "),a("code",[t._v("async")]),t._v("属性。")]),t._v(" "),a("p",[t._v("当 "),a("code",[t._v("script")]),t._v("标签加上 "),a("code",[t._v("defer")]),t._v(" 属性以后，表示该 JS 文件会并行下载，但是会放到 HTML 解析完成后顺序执行，所以对于这种情况你可以把 "),a("code",[t._v("script")]),t._v("标签放在任意位置。")]),t._v(" "),a("p",[a("code",[t._v("async")]),t._v(" 属性下载完就立即执行，会阻塞 html 解析")]),t._v(" "),a("h3",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),a("h4",{attrs:{id:"如何进行性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何进行性能优化"}},[t._v("#")]),t._v(" 如何进行性能优化?")]),t._v(" "),a("ol",[a("li",[t._v("多使用内存 , 缓存 , 减少 cpu 计算")])]),t._v(" "),a("ul",[a("li",[t._v("强缓存表示在缓存期间，不需要请求，"),a("code",[t._v("State Code")]),t._v("为 200，"),a("code",[t._v("Cache-Control")]),t._v("可以组合使用多个")]),t._v(" "),a("li",[t._v("强缓存可以通过设置"),a("code",[t._v("Expires")]),t._v(" "),a("code",[t._v("Cache-Control")]),t._v("来实现。如果两个都有以后者为准。")]),t._v(" "),a("li",[t._v("协商缓存： 协商缓存表示如果缓存过期了，那么就需要重新发起请求验证资源是否有更新，")]),t._v(" "),a("li",[t._v("可通过设置"),a("code",[t._v("HTTP Header")]),t._v("的"),a("code",[t._v("Last-Modified")]),t._v("和"),a("code",[t._v("ETag")]),t._v("来实现，如果资源没有改变，"),a("code",[t._v("State Code")]),t._v("为"),a("code",[t._v("304")])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("资源压缩 ,合并, 减少 http 请求")]),t._v(" "),a("li",[t._v("非核心代码异步加载")])]),t._v(" "),a("h5",{attrs:{id:"异步加载的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步加载的方式"}},[t._v("#")]),t._v(" 异步加载的方式")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("动态脚本加载：动态创建 script 标签添加到页面")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("defer")]),t._v(": 在 html 解析完成执行 , 如果是多个 , 则按照加载顺序执行")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("async")]),t._v(": 加载完成后立即执行 , 如果是多个 , 执行顺序与加载顺序无关")])]),t._v(" "),a("li",[a("p",[t._v("使用 CDN：")])])]),t._v(" "),a("p",[t._v("CDN 的原理是尽可能的在各个地方分布机房缓存数据，这样即使我们的根服务器远在国外，在国内的用户也可以通过国内的机房迅速加载资源。")]),t._v(" "),a("p",[t._v("因此，我们可以将静态资源尽量使用 CDN 加载，由于浏览器对于单个域名有并发请求上限，可以考虑使用多个 CDN 域名。并且对于 CDN 加载静态资源需要注意 CDN 域名要与主站不同，否则每次请求都会带上主站的 Cookie，平白消耗流量。")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("DNS 预解析")])]),t._v(" "),a("p",[t._v("DNS 解析也是需要时间的，可以通过预解析的方式来预先获得域名所对应的 IP。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x-dns-prefetch-control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n//在https中强制打开a标签预解析\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//baidu.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" //dns预解析\n")])])]),a("h4",{attrs:{id:"图片类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片类"}},[t._v("#")]),t._v(" 图片类:")]),t._v(" "),a("ol",[a("li",[t._v("不用图片。很多时候会使用到很多修饰类图片，其实这类修饰图片完全可以用 CSS 去代替。")]),t._v(" "),a("li",[t._v("对于移动端来说，屏幕宽度就那么点，完全没有必要去加载原图浪费带宽。一般图片都用 CDN 加载，可以计算出适配屏幕的宽度，然后去请求相应裁剪好的图片。")]),t._v(" "),a("li",[t._v("小图使用 base64 格式")]),t._v(" "),a("li",[t._v("将多个图标文件整合到一张图片中（雪碧图）")]),t._v(" "),a("li",[t._v("选择正确的图片格式：\n"),a("ul",[a("li",[t._v("对于能够显示 WebP 格式的浏览器尽量使用 WebP 格式。因为 WebP 格式具有更好的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量，缺点就是兼容性并不好")]),t._v(" "),a("li",[t._v("小图使用 PNG，其实对于大部分图标这类图片，完全可以使用 SVG 代替")]),t._v(" "),a("li",[t._v("照片使用 JPEG")])])])]),t._v(" "),a("h4",{attrs:{id:"css-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-类"}},[t._v("#")]),t._v(" CSS 类:")]),t._v(" "),a("ol",[a("li",[t._v("css 放在 head 里 (先加载 css 然后渲染 否则渲染两次)")]),t._v(" "),a("li",[t._v("不使用 css 表达式")]),t._v(" "),a("li",[t._v("正确使用选择器 (应从右向左匹配 , 避免层级过多 , 扁平化)")])]),t._v(" "),a("h4",{attrs:{id:"js-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-类"}},[t._v("#")]),t._v(" JS 类:")]),t._v(" "),a("ol",[a("li",[t._v("JS 放在 body 最下面 (不会阻塞渲染过程 性能优化问题； 再执行 JS script 能拿到所有标签)")]),t._v(" "),a("li",[t._v("减少 DOM 操作 , 对 DOM 查询进行缓存")]),t._v(" "),a("li",[t._v("频繁 DOM 操作， 合并到一起插入 DOM 结构")]),t._v(" "),a("li",[t._v("尽早在 dom 渲染完就执行，用 DOMContentLoaded 触发")]),t._v(" "),a("li",[t._v("删除不需要的脚本")]),t._v(" "),a("li",[t._v("节流")]),t._v(" "),a("li",[t._v("防抖")]),t._v(" "),a("li",[t._v("预加载:")])]),t._v(" "),a("ul",[a("li",[t._v("优点:降低首屏加载时间")]),t._v(" "),a("li",[t._v("缺点:兼容性不好")])]),t._v(" "),a("p",[t._v("如果有些资源需要马上使用，可以使用如下代码实现，预加载不会阻塞"),a("code",[t._v("onload")]),t._v("事件")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("preload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://example.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("ol",{attrs:{start:"9"}},[a("li",[t._v("预渲染:\n"),a("ul",[a("li",[t._v("要确保用户大概率会打开的资源进行预渲染，可以提升网页的加载速度")])])])]),t._v(" "),a("p",[t._v("可以通过预渲染将下载的文件预先在后台渲染，")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("prerender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://example.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("ol",{attrs:{start:"10"}},[a("li",[t._v("懒加载:")])]),t._v(" "),a("p",[t._v("懒加载就是将不关键的资源延后加载。")]),t._v(" "),a("p",[t._v("对于图片来说，先设置图片标签的 "),a("code",[t._v("src")]),t._v(" 属性为一张占位图，将真实的图片资源放入一个自定义属性中，当进入自定义区域时，就将自定义属性替换为 "),a("code",[t._v("src")]),t._v(" 属性，这样图片就会去下载资源，实现了图片懒加载。")]),t._v(" "),a("p",[t._v("懒加载不仅可以用于图片，也可以使用在别的资源上。比如进入可视区域才开始播放视频等等。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myImage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" imgNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"img"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imgNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    imgNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("setSrc")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      imgNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"loading.gif"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyImage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSrc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://img1.sycdn.imooc.com/5c09123400014ba418720632.jpg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"浏览器缓存机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存机制"}},[t._v("#")]),t._v(" 浏览器缓存机制")]),t._v(" "),a("p",[t._v("缓存可以说是性能优化中"),a("strong",[t._v("简单高效")]),t._v("的一种优化方式了，它可以"),a("strong",[t._v("显著减少网络传输所带来的损耗。")])]),t._v(" "),a("p",[t._v("对于一个数据请求来说，可以分为发起网络请求、后端处理、浏览器响应三个步骤。浏览器缓存可以帮助我们在第一和第三步骤中优化性能。比如说直接使用缓存而不发起请求，或者发起了请求但后端存储的数据和前端一致，那么就没有必要再将数据回传回来，这样就减少了响应数据。")]),t._v(" "),a("h4",{attrs:{id:"缓存位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存位置"}},[t._v("#")]),t._v(" 缓存位置")]),t._v(" "),a("p",[t._v("从缓存位置上来说分为四种，并且各自有"),a("strong",[t._v("优先级")]),t._v("，当依次查找缓存且都没有命中的时候，才会去请求网络")]),t._v(" "),a("ol",[a("li",[t._v("Service Worker")]),t._v(" "),a("li",[t._v("Memory Cache")]),t._v(" "),a("li",[t._v("Disk Cache")]),t._v(" "),a("li",[t._v("Push Cache")]),t._v(" "),a("li",[t._v("网络请求")])]),t._v(" "),a("h5",{attrs:{id:"service-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" Service Worker")]),t._v(" "),a("p",[t._v("Service Worker 的缓存与浏览器其他内建的缓存机制不同，它可以让我们自由控制缓存哪些文件、如何匹配缓存、如何读取缓存，并且缓存是持续性的。"),a("br"),t._v("当 Service Worker 没有命中缓存的时候，我们需要去调用 fetch 函数获取数据。也就是说，如果我们没有在 Service Worker 命中缓存的话，会根据缓存查找优先级去查找数据。但是不管我们是从 Memory Cache 中还是从网络请求中获取的数据，浏览器都会显示我们是从 Service Worker 中获取的内容。")]),t._v(" "),a("h5",{attrs:{id:"memory-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memory-cache"}},[t._v("#")]),t._v(" Memory Cache")]),t._v(" "),a("p",[t._v("Memory Cache 也就是内存中的缓存，读取内存中的数据肯定比磁盘快。但是内存缓存虽然读取高效，可是缓存持续性很短，会随着进程的释放而释放。 一旦我们关闭 Tab 页面，内存中的缓存也就被释放了。"),a("br"),t._v("当我们访问过页面以后，再次刷新页面，可以发现很多数据都来自于内存缓存"),a("br"),t._v("那么既然内存缓存这么高效，我们是不是能让数据都存放在内存中呢？")]),t._v(" "),a("p",[t._v("先说结论，这是不可能的。首先计算机中的内存一定比硬盘容量小得多，操作系统需要精打细算内存的使用，所以能让我们使用的内存必然不多。内存中其实可以存储大部分的文件，比如说 JSS、HTML、CSS、图片等等。但是浏览器会把哪些文件丢进内存这个过程就很玄学了，我查阅了很多资料都没有一个定论。")]),t._v(" "),a("p",[t._v("当然，我通过一些实践和猜测也得出了一些结论：")]),t._v(" "),a("ul",[a("li",[t._v("对于大文件来说，大概率是不存储在内存中的，反之优先")]),t._v(" "),a("li",[t._v("当前系统内存使用率高的话，文件优先存储进硬盘")])]),t._v(" "),a("h5",{attrs:{id:"disk-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#disk-cache"}},[t._v("#")]),t._v(" Disk Cache")]),t._v(" "),a("p",[t._v("Disk Cache 也就是存储在硬盘中的缓存，读取速度慢点，但是什么都能存储到磁盘中，比之 Memory Cache 胜在容量和存储时效性上。")]),t._v(" "),a("p",[t._v("在所有浏览器缓存中，Disk Cache 覆盖面基本是最大的。它会根据 HTTP Herder 中的字段判断哪些资源需要缓存，哪些资源可以不请求直接使用，哪些资源已经过期需要重新请求。并且即使在跨站点的情况下，相同地址的资源一旦被硬盘缓存下来，就不会再次去请求数据。")]),t._v(" "),a("h5",{attrs:{id:"push-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-cache"}},[t._v("#")]),t._v(" Push Cache")]),t._v(" "),a("p",[t._v("Push Cache 是 HTTP/2 中的内容，当以上三种缓存都没有命中时，它才会被使用。并且缓存时间也很短暂，只在会话（Session）中存在，一旦会话结束就被释放。")]),t._v(" "),a("p",[t._v("Push Cache 在国内能够查到的资料很少，也是因为 HTTP/2 在国内不够普及，但是 HTTP/2 将会是日后的一个趋势。这里推荐阅读  "),a("a",{attrs:{href:"https://jakearchibald.com/2017/h2-push-tougher-than-i-thought/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/2 push is tougher than I thought"),a("OutboundLink")],1),t._v(" 这篇文章，但是内容是英文的，我翻译一下文章中的几个结论，有能力的同学还是推荐自己阅读")]),t._v(" "),a("ul",[a("li",[t._v("所有的资源都能被推送，但是 Edge 和 Safari 浏览器兼容性不怎么好")]),t._v(" "),a("li",[t._v("可以推送 no-cache 和 no-store 的资源")]),t._v(" "),a("li",[t._v("一旦连接被关闭，Push Cache 就被释放")]),t._v(" "),a("li",[t._v("多个页面可以使用相同的 HTTP/2 连接，也就是说能使用同样的缓存")]),t._v(" "),a("li",[t._v("Push Cache 中的缓存只能被使用一次")]),t._v(" "),a("li",[t._v("浏览器可以拒绝接受已经存在的资源推送")]),t._v(" "),a("li",[t._v("你可以给其他域名推送资源")])]),t._v(" "),a("h5",{attrs:{id:"网络请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络请求"}},[t._v("#")]),t._v(" 网络请求")]),t._v(" "),a("p",[t._v("如果所有缓存都没有命中的话，那么只能发起请求来获取资源了。")]),t._v(" "),a("p",[t._v("那么为了性能上的考虑，大部分的接口都应该选择好缓存策略，接下来我们就来学习缓存策略这部分的内容。")]),t._v(" "),a("h4",{attrs:{id:"缓存策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存策略"}},[t._v("#")]),t._v(" 缓存策略")]),t._v(" "),a("p",[t._v("通常浏览器缓存策略分为两种：强缓存和协商缓存，并且缓存策略都是通过设置 HTTP Header 来实现的。")]),t._v(" "),a("h5",{attrs:{id:"强缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),a("p",[t._v("强缓存可以通过设置两种 HTTP Header 实现："),a("code",[t._v("Expires")]),t._v(" 和 "),a("code",[t._v("Cache-Control")]),t._v(" 。强缓存表示在缓存期间不需要请求，"),a("code",[t._v("state code")]),t._v(" 为 200。")]),t._v(" "),a("ul",[a("li",[t._v("Expires")])]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Expires")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Wed, 22 Oct 2018 08:41:00 GMT")])]),t._v("\n")])])]),a("p",[a("code",[t._v("Expires")]),t._v(" 是 HTTP/1 的产物，表示资源会在 "),a("code",[t._v("Wed, 22 Oct 2018 08:41:00 GMT")]),t._v(" 后过期，需要再次请求。并且 "),a("code",[t._v("Expires")]),t._v(" "),a("strong",[t._v("受限于本地时间")]),t._v("，如果修改了本地时间，可能会造成缓存失效。")]),t._v(" "),a("ul",[a("li",[t._v("Cache-control")])]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cache-control")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("max-age=30")])]),t._v("\n")])])]),a("p",[a("code",[t._v("Cache-Control")]),t._v(" 出现于 HTTP/1.1，"),a("strong",[t._v("优先级高于")]),t._v(" "),a("code",[t._v("Expires")]),t._v(" 。该属性值表示资源会在 30 秒后过期，需要再次请求。")]),t._v(" "),a("p",[a("code",[t._v("Cache-Control")]),t._v(" "),a("strong",[t._v("可以在请求头或者响应头中设置")]),t._v("，并且可以组合使用多种指令")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/image-20220808170938315.png",alt:"image-20220808170938315"}})]),t._v(" "),a("p",[t._v("从图中我们可以看到，我们可以将"),a("strong",[t._v("多个指令配合起来一起使用")]),t._v("，达到多个目的。比如说我们希望资源能被缓存下来，并且是客户端和代理服务器都能缓存，还能设置缓存失效时间等等。")]),t._v(" "),a("p",[t._v("接下来我们就来学习一些常见指令的作用")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/httpzhiling.png",alt:"输入图片说明"}})]),t._v(" "),a("h5",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),a("p",[t._v("如果缓存过期了，就需要发起请求验证资源是否有更新。协商缓存可以通过设置两种 HTTP Header 实现："),a("code",[t._v("Last-Modified")]),t._v(" 和 "),a("code",[t._v("ETag")]),t._v(" 。")]),t._v(" "),a("p",[t._v("当浏览器发起请求验证资源时，如果资源没有做改变，那么服务端就会返回 304 状态码，并且更新浏览器缓存有效期。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/skdjlkasjdlas.png",alt:"输入图片说明"}})]),t._v(" "),a("ul",[a("li",[t._v("Last-Modified 和 If-Modified-Since")])]),t._v(" "),a("p",[a("code",[t._v("Last-Modified")]),t._v(" 表示本地文件最后修改日期，"),a("code",[t._v("If-Modified-Since")]),t._v(" 会将 "),a("code",[t._v("Last-Modified")]),t._v(" 的值发送给服务器，询问服务器在该日期后资源是否有更新，有更新的话就会将新的资源发送回来，否则返回 304 状态码。")]),t._v(" "),a("p",[t._v("但是 Last-Modified 存在一些弊端：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果本地打开缓存文件，即使没有对文件进行修改，但还是会造成 "),a("code",[t._v("Last-Modified")]),t._v(" 被修改，服务端不能命中缓存导致发送相同的资源")])]),t._v(" "),a("li",[a("p",[t._v("因为 "),a("code",[t._v("Last-Modified")]),t._v(" 只能以秒计时，如果在不可感知的时间内修改完成文件，那么服务端会认为资源还是命中了，不会返回正确的资源"),a("br"),t._v("因为以上这些弊端，所以在 HTTP / 1.1 出现了 "),a("code",[t._v("ETag")]),t._v(" 。")])]),t._v(" "),a("li",[a("p",[t._v("ETag 和 If-None-Match")]),t._v(" "),a("p",[a("code",[t._v("ETag")]),t._v(" 类似于文件指纹，"),a("code",[t._v("If-None-Match")]),t._v(" 会将当前 "),a("code",[t._v("ETag")]),t._v(" 发送给服务器，询问该资源 "),a("code",[t._v("ETag")]),t._v(" 是否变动，有变动的话就将新的资源发送回来。并且 "),a("code",[t._v("ETag")]),t._v(" 优先级比 "),a("code",[t._v("Last-Modified")]),t._v(" 高。")])])]),t._v(" "),a("p",[t._v("以上就是缓存策略的所有内容了，看到这里，不知道你是否存在这样一个疑问。如果什么缓存策略都没设置，那么浏览器会怎么处理？")]),t._v(" "),a("p",[t._v("对于这种情况，浏览器会采用一个启发式的算法，通常会取响应头中的 "),a("code",[t._v("Date")]),t._v(" 减去 "),a("code",[t._v("Last-Modified")]),t._v(" 值的 10% 作为缓存时间。")]),t._v(" "),a("h5",{attrs:{id:"实际场景应用缓存策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实际场景应用缓存策略"}},[t._v("#")]),t._v(" 实际场景应用缓存策略")]),t._v(" "),a("p",[t._v("单纯了解理论而不付诸于实践是没有意义的，接下来我们来通过几个场景学习下如何使用这些理论。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("频繁变动的资源")]),t._v(" "),a("p",[t._v("对于频繁变动的资源，首先需要使用 "),a("code",[t._v("Cache-Control: no-cache")]),t._v(" 使浏览器每次都请求服务器，然后配合 "),a("code",[t._v("ETag")]),t._v(" 或者 "),a("code",[t._v("Last-Modified")]),t._v(" 来验证资源是否有效。这样的做法虽然不能节省请求数量，但是能显著减少响应数据大小。")])]),t._v(" "),a("li",[a("p",[t._v("代码文件")]),t._v(" "),a("p",[t._v("这里特指除了 HTML 外的代码文件，因为 HTML 文件一般不缓存或者缓存时间很短。")]),t._v(" "),a("p",[t._v("一般来说，现在都会使用工具来打包代码，那么我们就可以对文件名进行哈希处理，只有当代码修改后才会生成新的文件名。基于此，我们就可以给代码文件设置缓存有效期一年 "),a("code",[t._v("Cache-Control: max-age=31536000")]),t._v("，这样只有当 HTML 文件中引入的文件名发生了改变才会去下载最新的代码文件，否则就一直使用缓存。")])])]),t._v(" "),a("h3",{attrs:{id:"前端监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端监控"}},[t._v("#")]),t._v(" 前端监控")]),t._v(" "),a("h4",{attrs:{id:"前端监控一般分为哪几种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端监控一般分为哪几种"}},[t._v("#")]),t._v(" 前端监控一般分为哪几种？")]),t._v(" "),a("p",[t._v("前端监控一般分为三种，分别为页面埋点、性能监控以及异常监控。")]),t._v(" "),a("h4",{attrs:{id:"前端错误的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端错误的分类"}},[t._v("#")]),t._v(" 前端错误的分类")]),t._v(" "),a("ul",[a("li",[t._v("即时运行错误：代码错误")]),t._v(" "),a("li",[t._v("资源加载错误")])]),t._v(" "),a("h4",{attrs:{id:"错误的捕获方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误的捕获方式"}},[t._v("#")]),t._v(" 错误的捕获方式")]),t._v(" "),a("ul",[a("li",[t._v("即时运行错误：代码错误\n"),a("ul",[a("li",[t._v("try..catch")]),t._v(" "),a("li",[t._v("window.onerror")])])]),t._v(" "),a("li",[t._v("资源加载错误\n"),a("ul",[a("li",[t._v("object.onerror")]),t._v(" "),a("li",[t._v("performance.getEntries()")]),t._v(" "),a("li",[t._v("Error 事件"),a("strong",[t._v("捕获")])])])])]),t._v(" "),a("h4",{attrs:{id:"跨域的-js-运行错误可以捕获吗-错误提示什么-应该怎么处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域的-js-运行错误可以捕获吗-错误提示什么-应该怎么处理"}},[t._v("#")]),t._v(" 跨域的 js 运行错误可以捕获吗？错误提示什么？应该怎么处理")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/jskuayu.png",alt:"输入图片说明"}})]),t._v(" "),a("ol",[a("li",[t._v("在 script 标签增加"),a("code",[t._v("crossorigin")]),t._v("属性 "),a("code",[t._v('<script src="..." crossorigin ><\/script>')])]),t._v(" "),a("li",[t._v("设置 js 资源响应头 Access-Control-Allow-Origin:*")])]),t._v(" "),a("h4",{attrs:{id:"上报错误的基本原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上报错误的基本原理"}},[t._v("#")]),t._v(" 上报错误的基本原理")]),t._v(" "),a("ol",[a("li",[t._v("采用 Ajax 通信的方式上报")]),t._v(" "),a("li",[t._v("利用 Image 对象上报")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://baidu.com/tesjk?r=tksjk"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"浏览器内核"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[t._v("#")]),t._v(" 浏览器内核")]),t._v(" "),a("h4",{attrs:{id:"能介绍一下你对浏览器内核的理解吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#能介绍一下你对浏览器内核的理解吗"}},[t._v("#")]),t._v(" 能介绍一下你对浏览器内核的理解吗？")]),t._v(" "),a("p",[t._v("主要分成两部分：渲染引擎("),a("code",[t._v("layout engineer或Rendering Engine")]),t._v(")和 JS 引擎")]),t._v(" "),a("ul",[a("li",[t._v("渲染引擎：")])]),t._v(" "),a("p",[t._v("负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。")]),t._v(" "),a("p",[t._v("浏览器的内核的不同对于网页的语法解释会有不同，渲染的效果也会不相同。")]),t._v(" "),a("ul",[a("li",[t._v("JS 引擎：")])]),t._v(" "),a("p",[t._v("解析和执行 javascript 来实现网页的动态效果")]),t._v(" "),a("h3",{attrs:{id:"seo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seo"}},[t._v("#")]),t._v(" SEO")]),t._v(" "),a("h4",{attrs:{id:"前端需要注意哪些-seo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端需要注意哪些-seo"}},[t._v("#")]),t._v(" 前端需要注意哪些 SEO?")]),t._v(" "),a("ul",[a("li",[t._v("合理的"),a("code",[t._v("title")]),t._v("、"),a("code",[t._v("keywords")]),t._v(" 。"),a("code",[t._v("title")]),t._v(" 值强调重点即可，不同页面 title 要有所不同，重要关键词出现不要超过 2 次，而且要靠前")]),t._v(" "),a("li",[a("strong",[t._v("语义化")]),t._v("的 HTML 代码，符合 W3C 规范，让搜索引擎容易理解网页")]),t._v(" "),a("li",[t._v("重要内容 HTML 代码"),a("strong",[t._v("放在最前")]),t._v("：搜索引擎抓取 HTML 顺序是从上到下，有的搜索引擎对抓取长度有限制，保证重要内容一定会被抓取")]),t._v(" "),a("li",[t._v("重要内容"),a("strong",[t._v("不要用 js 输出")]),t._v("， 爬虫不会执行 js 获取内容")]),t._v(" "),a("li",[a("strong",[t._v("少用")]),a("code",[t._v("**iframe**")]),t._v("，搜索引擎不会抓取 "),a("code",[t._v("iframe")]),t._v(" 中的内容")]),t._v(" "),a("li",[a("strong",[t._v("非装饰性图片")]),t._v("必须加"),a("code",[t._v("alt")])]),t._v(" "),a("li",[t._v("提高"),a("strong",[t._v("网站速度")]),t._v("：网站速度是搜索引擎排序的一个重要指标")])])])}),[],!1,null,null,null);s.default=v.exports}}]);