import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,a as t}from"./app.50b6a3c9.js";const p={},o=t(`<h3 id="\u4F60\u80FD\u8BB2\u4E00\u4E0B-diff-\u7B97\u6CD5\u5417" tabindex="-1"><a class="header-anchor" href="#\u4F60\u80FD\u8BB2\u4E00\u4E0B-diff-\u7B97\u6CD5\u5417" aria-hidden="true">#</a> \u4F60\u80FD\u8BB2\u4E00\u4E0B diff \u7B97\u6CD5\u5417\uFF1F</h3><p>diff \u7B97\u6CD5\u662F v-dom \u4E2D\u6700\u6838\u5FC3\uFF0C\u6700\u5173\u952E\u7684\u90E8\u5206\u3002</p><p>diff \u5373\u5BF9\u6BD4\uFF0C \u662F\u4E00\u4E2A\u5E7F\u6CDB\u7684\u6982\u5FF5\uFF0C \u5982 linux diff \u547D\u4EE4\uFF0C git diff \u7B49\u3002</p><p>\u9996\u5148 DOM \u662F\u4E00\u4E2A\u591A\u53C9\u6811\u7684\u7ED3\u6784\uFF0C\u5982\u679C\u9700\u8981\u5B8C\u6574\u7684\u5BF9\u6BD4\u4E24\u9897\u6811\u7684\u5DEE\u5F02\u3002\u90A3\u4E48\u9700\u8981\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4F1A\u662F O(n ^ 3)\uFF0C\u8FD9\u4E2A\u590D\u6742\u5EA6\u80AF\u5B9A\u662F\u4E0D\u80FD\u63A5\u53D7\u7684\u3002</p><ul><li>\u7B2C\u4E00\uFF0C \u904D\u5386 tree1\uFF1B</li><li>\u7B2C\u4E8C\uFF0C \u904D\u5386 tree2</li><li>\u7B2C\u4E09\uFF0C \u6392\u5E8F</li><li>1000 \u4E2A\u8282\u70B9\uFF0C\u8981\u8BA1\u7B97 1 \u4EBF\u6B21\uFF0C \u7B97\u6CD5\u4E0D\u53EF\u7528</li></ul><p>\u4E8E\u662F React \u56E2\u961F\u4F18\u5316\u4E86\u7B97\u6CD5\uFF0C\u5B9E\u73B0\u4E86 O(n) \u7684\u590D\u6742\u5EA6\u6765\u5BF9\u6BD4\u5DEE\u5F02\u3002</p><ul><li>\u53EA\u6BD4\u8F83\u540C\u4E00\u5C42\u7EA7\uFF0C \u4E0D\u8DE8\u7EA7\u5BF9\u6BD4</li><li>\u5728\u5B9E\u9645\u4E1A\u52A1\u4E2D\u5F88\u5C11\u4F1A\u53BB\u8DE8\u5C42\u7684\u79FB\u52A8 DOM \u5143\u7D20\u3002</li></ul><p>\u53EA\u6BD4\u8F83\u540C\u4E00\u5C42\u7EA7\u793A\u610F\u56FE\uFF1A</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648432718451-3a70008e-afd8-4f08-8052-a507bc0141b0.png" alt=""></p><ul><li>\u7B2C\u4E00\u6B65\u5148\u6BD4\u8F83 tag\uFF0Ctag \u4E0D\u76F8\u540C\uFF0C \u5219\u76F4\u63A5\u5220\u6389\u91CD\u5EFA\uFF0C \u4E0D\u518D\u6DF1\u5EA6\u6BD4\u8F83</li></ul><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648432718383-bfda0463-52bb-4410-976d-7d78cc74bdfc.png" alt=""></p><p>\u5982\u56FE\uFF0CD \u548C G \u7684 tag \u4E0D\u76F8\u540C\uFF0C\u76F4\u63A5\u5220\u6389\u91CD\u5EFA\u4E3A G\uFF0C\u5373\u4FBF E \u548C F \u76F8\u540C\uFF0C \u4E5F\u4E0D\u4F1A\u518D\u5411\u4E0B\u8FDB\u884C\u6BD4\u8F83</p><ul><li>tag \u548C key\uFF0C \u4E24\u8005\u90FD\u76F8\u540C\uFF0C \u5219\u8BA4\u4E3A\u662F\u76F8\u540C\u8282\u70B9\uFF0C \u4E0D\u518D\u6DF1\u5EA6\u6BD4\u8F83</li></ul><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648432718335-2cb7306f-6d62-402f-a330-89f7f8217980.png" alt=""></p><p>\u793A\u4F8B\u56FE\uFF1A</p><h4 id="patchvnode" tabindex="-1"><a class="header-anchor" href="#patchvnode" aria-hidden="true">#</a> patchVnode</h4><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1647771883472-df1f0bad-45fb-45cb-968b-505c660e8d9d.png" alt=""></p><p><a name="SVgMt"></a></p><h4 id="updatechildren" tabindex="-1"><a class="header-anchor" href="#updatechildren" aria-hidden="true">#</a> updateChildren</h4><p>\u63A5\u4E0B\u6765\u5C31\u8981\u8BB2\u4E00\u4E0B updateChildren \u51FD\u6570\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span><span class="token parameter">parentElm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> newCh</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> oldStartIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newStartIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldEndIdx <span class="token operator">=</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newEndIdx <span class="token operator">=</span> newCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldKeyToIdx<span class="token punctuation">,</span> idxInOld<span class="token punctuation">,</span> elmToMove<span class="token punctuation">,</span> refElm<span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx <span class="token operator">&amp;&amp;</span> newStartIdx <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldStartVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldEndVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>
        parentElm<span class="token punctuation">,</span>
        oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span>
        nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> elmToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldKeyToIdx<span class="token punctuation">)</span>
        oldKeyToIdx <span class="token operator">=</span> <span class="token function">createKeyToOldIdx</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      idxInOld <span class="token operator">=</span> newStartVnode<span class="token punctuation">.</span>key <span class="token operator">?</span> oldKeyToIdx<span class="token punctuation">[</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>idxInOld<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> parentElm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        elmToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>elmToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">patchVnode</span><span class="token punctuation">(</span>elmToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
          nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
          newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> parentElm<span class="token punctuation">)</span><span class="token punctuation">;</span>
          newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&gt;</span> oldEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    refElm <span class="token operator">=</span> newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elm <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token function">addVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> refElm<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">,</span> newEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newStartIdx <span class="token operator">&gt;</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">removeVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u5230\u4EE3\u7801\u90A3\u4E48\u591A\u5148\u4E0D\u8981\u7740\u6025\uFF0C\u6211\u4EEC\u8FD8\u662F\u4E00\u70B9\u4E00\u70B9\u5730\u8BB2\u89E3\u3002</p><p>\u9996\u5148\u6211\u4EEC\u5B9A\u4E49 oldStartIdx\u3001newStartIdx\u3001oldEndIdx \u4EE5\u53CA newEndIdx \u5206\u522B\u662F\u65B0\u8001\u4E24\u4E2A VNode \u7684\u4E24\u8FB9\u7684\u7D22\u5F15\uFF0C\u540C\u65F6 oldStartVnode\u3001newStartVnode\u3001oldEndVnode \u4EE5\u53CA newEndVnode \u5206\u522B\u6307\u5411\u8FD9\u51E0\u4E2A\u7D22\u5F15\u5BF9\u5E94\u7684 VNode \u8282\u70B9\u3002</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648433115816-e7a906ae-7f7d-44fa-b180-ae5702af45a6.webp" alt=""></p><p>\u63A5\u4E0B\u6765\u662F\u4E00\u4E2A while \u5FAA\u73AF\uFF0C\u5728\u8FD9\u8FC7\u7A0B\u4E2D\uFF0ColdStartIdx\u3001newStartIdx\u3001oldEndIdx \u4EE5\u53CA newEndIdx \u4F1A\u9010\u6E10\u5411\u4E2D\u95F4\u9760\u62E2\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx <span class="token operator">&amp;&amp;</span> newStartIdx <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648433115788-20ed85db-fec8-470d-a659-53e508b39d6b.webp" alt=""></p><p>\u9996\u5148\u5F53 oldStartVnode \u6216\u8005 oldEndVnode \u4E0D\u5B58\u5728\u7684\u65F6\u5019\uFF0ColdStartIdx \u4E0E oldEndIdx \u7EE7\u7EED\u5411\u4E2D\u95F4\u9760\u62E2\uFF0C\u5E76\u66F4\u65B0\u5BF9\u5E94\u7684 oldStartVnode \u4E0E oldEndVnode \u7684\u6307\u5411\uFF08\u6CE8\uFF1A\u4E0B\u9762\u8BB2\u5230\u7684 oldStartIdx\u3001newStartIdx\u3001oldEndIdx \u4EE5\u53CA newEndIdx \u79FB\u52A8\u90FD\u4F1A\u4F34\u968F\u7740 oldStartVnode\u3001newStartVnode\u3001oldEndVnode \u4EE5\u53CA newEndVnode \u7684\u6307\u5411\u7684\u53D8\u5316\uFF0C\u4E4B\u540E\u7684\u90E8\u5206\u53EA\u4F1A\u8BB2 Idx \u7684\u79FB\u52A8)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldStartVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldEndVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u8FD9\u4E00\u5757\uFF0C\u662F\u5C06 oldStartIdx\u3001newStartIdx\u3001oldEndIdx \u4EE5\u53CA newEndIdx \u4E24\u4E24\u6BD4\u5BF9\u7684\u8FC7\u7A0B\uFF0C\u4E00\u5171\u4F1A\u51FA\u73B0 2*2=4 \u79CD\u60C5\u51B5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u662F oldStartVnode \u4E0E newStartVnode \u7B26\u5408 sameVnode \u65F6\uFF0C\u8BF4\u660E\u8001 VNode \u8282\u70B9\u7684\u5934\u90E8\u4E0E\u65B0 VNode \u8282\u70B9\u7684\u5934\u90E8\u662F\u76F8\u540C\u7684 VNode \u8282\u70B9\uFF0C\u76F4\u63A5\u8FDB\u884C patchVnode\uFF0C\u540C\u65F6 oldStartIdx \u4E0E newStartIdx \u5411\u540E\u79FB\u52A8\u4E00\u4F4D\u3002</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648433115821-44a78e25-d47f-4d9d-98a0-7ea4fab5248e.webp" alt=""></p><p>\u5176\u6B21\u662F oldEndVnode \u4E0E newEndVnode \u7B26\u5408 sameVnode\uFF0C\u4E5F\u5C31\u662F\u4E24\u4E2A VNode \u7684\u7ED3\u5C3E\u662F\u76F8\u540C\u7684 VNode\uFF0C\u540C\u6837\u8FDB\u884C patchVnode \u64CD\u4F5C\u5E76\u5C06 oldEndVnode \u4E0E newEndVnode \u5411\u524D\u79FB\u52A8\u4E00\u4F4D\u3002</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648433115823-420fcacf-5baa-4cd8-8d3d-67a041495024.webp" alt=""></p><p>\u63A5\u4E0B\u6765\u662F\u4E24\u79CD\u4EA4\u53C9\u7684\u60C5\u51B5\u3002</p><p>\u5148\u662F oldStartVnode \u4E0E newEndVnode \u7B26\u5408 sameVnode \u7684\u65F6\u5019\uFF0C\u4E5F\u5C31\u662F\u8001 VNode \u8282\u70B9\u7684\u5934\u90E8\u4E0E\u65B0 VNode \u8282\u70B9\u7684\u5C3E\u90E8\u662F\u540C\u4E00\u8282\u70B9\u7684\u65F6\u5019\uFF0C\u5C06 oldStartVnode.elm \u8FD9\u4E2A\u8282\u70B9\u76F4\u63A5\u79FB\u52A8\u5230 oldEndVnode.elm \u8FD9\u4E2A\u8282\u70B9\u7684\u540E\u9762\u5373\u53EF\u3002\u7136\u540E oldStartIdx \u5411\u540E\u79FB\u52A8\u4E00\u4F4D\uFF0CnewEndIdx \u5411\u524D\u79FB\u52A8\u4E00\u4F4D\u3002</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648433115823-1c35cbeb-59a6-422e-8f61-1b33db20c3a4.webp" alt=""></p><p>\u540C\u7406\uFF0ColdEndVnode \u4E0E newStartVnode \u7B26\u5408 sameVnode \u65F6\uFF0C\u4E5F\u5C31\u662F\u8001 VNode \u8282\u70B9\u7684\u5C3E\u90E8\u4E0E\u65B0 VNode \u8282\u70B9\u7684\u5934\u90E8\u662F\u540C\u4E00\u8282\u70B9\u7684\u65F6\u5019\uFF0C\u5C06 oldEndVnode.elm \u63D2\u5165\u5230 oldStartVnode.elm \u524D\u9762\u3002\u540C\u6837\u7684\uFF0ColdEndIdx \u5411\u524D\u79FB\u52A8\u4E00\u4F4D\uFF0CnewStartIdx \u5411\u540E\u79FB\u52A8\u4E00\u4F4D\u3002</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648433116199-ba05c673-ee27-4ebd-9f88-95cb4181499c.webp" alt=""></p><p>\u6700\u540E\u662F\u5F53\u4EE5\u4E0A\u60C5\u51B5\u90FD\u4E0D\u7B26\u5408\u7684\u65F6\u5019\uFF0C\u8FD9\u79CD\u60C5\u51B5\u600E\u4E48\u5904\u7406\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> elmToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldKeyToIdx<span class="token punctuation">)</span> oldKeyToIdx <span class="token operator">=</span> <span class="token function">createKeyToOldIdx</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    idxInOld <span class="token operator">=</span> newStartVnode<span class="token punctuation">.</span>key <span class="token operator">?</span> oldKeyToIdx<span class="token punctuation">[</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>idxInOld<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> parentElm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        elmToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>elmToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">patchVnode</span><span class="token punctuation">(</span>elmToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
            oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
            nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
            newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> parentElm<span class="token punctuation">)</span><span class="token punctuation">;</span>
            newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createKeyToOldIdx</span> <span class="token punctuation">(</span><span class="token parameter">children<span class="token punctuation">,</span> beginIdx<span class="token punctuation">,</span> endIdx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> i<span class="token punctuation">,</span> key
    <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> beginIdx<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> endIdx<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        key <span class="token operator">=</span> children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>key
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> map<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> i
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> map
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>createKeyToOldIdx \u7684\u4F5C\u7528\u662F\u4EA7\u751F key \u4E0E index \u7D22\u5F15\u5BF9\u5E94\u7684\u4E00\u4E2A map \u8868\u3002\u6BD4\u5982\u8BF4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">xx</span><span class="token operator">:</span> xx<span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;key0&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">xx</span><span class="token operator">:</span> xx<span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;key1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">xx</span><span class="token operator">:</span> xx<span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;key2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u7ECF\u8FC7 createKeyToOldIdx \u8F6C\u5316\u4EE5\u540E\u4F1A\u53D8\u6210\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">key0</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key1</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key2</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u6839\u636E\u67D0\u4E00\u4E2A key \u7684\u503C\uFF0C\u5FEB\u901F\u5730\u4ECE oldKeyToIdx\uFF08createKeyToOldIdx \u7684\u8FD4\u56DE\u503C\uFF09\u4E2D\u83B7\u53D6\u76F8\u540C key \u7684\u8282\u70B9\u7684\u7D22\u5F15 idxInOld\uFF0C\u7136\u540E\u627E\u5230\u76F8\u540C\u7684\u8282\u70B9\u3002<br>\u5982\u679C\u6CA1\u6709\u627E\u5230\u76F8\u540C\u7684\u8282\u70B9\uFF0C\u5219\u901A\u8FC7 createElm \u521B\u5EFA\u4E00\u4E2A\u65B0\u8282\u70B9\uFF0C\u5E76\u5C06 newStartIdx \u5411\u540E\u79FB\u52A8\u4E00\u4F4D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>idxInOld<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> parentElm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5426\u5219\u5982\u679C\u627E\u5230\u4E86\u8282\u70B9\uFF0C\u540C\u65F6\u5B83\u7B26\u5408 sameVnode\uFF0C\u5219\u5C06\u8FD9\u4E24\u4E2A\u8282\u70B9\u8FDB\u884C patchVnode\uFF0C\u5C06\u8BE5\u4F4D\u7F6E\u7684\u8001\u8282\u70B9\u8D4B\u503C undefined\uFF08\u4E4B\u540E\u5982\u679C\u8FD8\u6709\u65B0\u8282\u70B9\u4E0E\u8BE5\u8282\u70B9 key \u76F8\u540C\u53EF\u4EE5\u68C0\u6D4B\u51FA\u6765\u63D0\u793A\u5DF2\u6709\u91CD\u590D\u7684 key \uFF09\uFF0C\u540C\u65F6\u5C06 newStartVnode.elm \u63D2\u5165\u5230 oldStartVnode.elm \u7684\u524D\u9762\u3002\u540C\u7406\uFF0CnewStartIdx \u5F80\u540E\u79FB\u52A8\u4E00\u4F4D\u3002<br><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648433116225-39f789ab-1120-4a08-a9c3-81fa60581216.webp" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">else</span> <span class="token punctuation">{</span>
    elmToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>elmToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">patchVnode</span><span class="token punctuation">(</span>elmToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
        nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u7B26\u5408 sameVnode\uFF0C\u53EA\u80FD\u521B\u5EFA\u4E00\u4E2A\u65B0\u8282\u70B9\u63D2\u5165\u5230 parentElm \u7684\u5B50\u8282\u70B9\u4E2D\uFF0CnewStartIdx \u5F80\u540E\u79FB\u52A8\u4E00\u4F4D\u3002<br><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648433116287-37827ccf-2bdd-4b04-8c78-16578e0075e4.webp" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> parentElm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u4E00\u6B65\u5C31\u5F88\u5BB9\u6613\u5566\uFF0C\u5F53 while \u5FAA\u73AF\u7ED3\u675F\u4EE5\u540E\uFF0C\u5982\u679C oldStartIdx &gt; oldEndIdx\uFF0C\u8BF4\u660E\u8001\u8282\u70B9\u6BD4\u5BF9\u5B8C\u4E86\uFF0C\u4F46\u662F\u65B0\u8282\u70B9\u8FD8\u6709\u591A\u7684\uFF0C\u9700\u8981\u5C06\u65B0\u8282\u70B9\u63D2\u5165\u5230\u771F\u5B9E DOM \u4E2D\u53BB\uFF0C\u8C03\u7528 addVnodes \u5C06\u8FD9\u4E9B\u8282\u70B9\u63D2\u5165\u5373\u53EF\u3002</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648433116667-03059827-d1e5-4298-bdf7-cab9271e703d.webp" alt=""></p><p>\u540C\u7406\uFF0C\u5982\u679C\u6EE1\u8DB3 newStartIdx &gt; newEndIdx \u6761\u4EF6\uFF0C\u8BF4\u660E\u65B0\u8282\u70B9\u6BD4\u5BF9\u5B8C\u4E86\uFF0C\u8001\u8282\u70B9\u8FD8\u6709\u591A\uFF0C\u5C06\u8FD9\u4E9B\u65E0\u7528\u7684\u8001\u8282\u70B9\u901A\u8FC7 removeVnodes \u6279\u91CF\u5220\u9664\u5373\u53EF\u3002</p><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1648433116310-efdb88ec-4162-4552-b16b-85d4e151f976.webp" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&gt;</span> oldEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  refElm <span class="token operator">=</span> newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elm <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">addVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> refElm<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">,</span> newEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newStartIdx <span class="token operator">&gt;</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">removeVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/1647772080935-63a9133c-134c-4827-a160-d475608ac95e.png" alt=""></p>`,58),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","vue\u7684diff\u7B97\u6CD5.html.vue"]]);export{r as default};
