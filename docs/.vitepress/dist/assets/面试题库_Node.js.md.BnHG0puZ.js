import{_ as a,c as o,o as e,a3 as s}from"./chunks/framework.47i9LX9H.js";const j=JSON.parse('{"title":"","description":"","frontmatter":{"prev":"Webpack","next":"其它"},"headers":[],"relativePath":"面试题库/Node.js.md","filePath":"面试题库/Node.js.md"}'),i={name:"面试题库/Node.js.md"},l=s('<h2 id="node-js" tabindex="-1">Node.js <a class="header-anchor" href="#node-js" aria-label="Permalink to &quot;Node.js&quot;">​</a></h2><h2 id="node-js-是什么" tabindex="-1">Node.js 是什么？ <a class="header-anchor" href="#node-js-是什么" aria-label="Permalink to &quot;Node.js 是什么？&quot;">​</a></h2><ul><li>nodejs 是基于 Chrome V8 引擎（相当于是一个解释器）的 JavaScript 运行环境。</li><li>nodejs 出现之前， js 只能在浏览器运行。（浏览器也相当于是一个运行环境）</li><li>nodejs 出现之后，js 可以在任何安装 nodejs 的环境运行。</li></ul><h2 id="和前端-js-有何区别" tabindex="-1">和前端 js 有何区别？ <a class="header-anchor" href="#和前端-js-有何区别" aria-label="Permalink to &quot;和前端 js 有何区别？&quot;">​</a></h2><h3 id="语法方面" tabindex="-1">语法方面 <a class="header-anchor" href="#语法方面" aria-label="Permalink to &quot;语法方面&quot;">​</a></h3><ul><li>都使用 ES 语法（变量如何定义，函数如何定义， if/else , for 循环， class 语法层面的东西）</li><li>前端 js 使用 JS WEB API</li><li>nodejs 使用 node API</li></ul><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/jsyufa.png" alt="输入图片说明"></p><h3 id="应用层面" tabindex="-1">应用层面 <a class="header-anchor" href="#应用层面" aria-label="Permalink to &quot;应用层面&quot;">​</a></h3><ul><li>前端 js 用于网页， 在浏览器运行</li><li>nodejs 可用于服务端， 如开发 web server</li><li>nodejs 也可用于本机， 如 webpack 等本机的打包工具</li></ul><h2 id="nodejs-如何调试" tabindex="-1">nodejs 如何调试 <a class="header-anchor" href="#nodejs-如何调试" aria-label="Permalink to &quot;nodejs 如何调试&quot;">​</a></h2><p>可以使用 vscode 的运行调试工具进行打断点以及 debugger</p><h2 id="当前文件和当前目录的路径-如何获取" tabindex="-1">当前文件和当前目录的路径， 如何获取 <a class="header-anchor" href="#当前文件和当前目录的路径-如何获取" aria-label="Permalink to &quot;当前文件和当前目录的路径， 如何获取&quot;">​</a></h2><ul><li>__filename</li><li>__dirname</li><li>两个都是全局变量</li></ul><h2 id="commonjs-和-es6-module-的区别" tabindex="-1">commonjs 和 ES6 Module 的区别 <a class="header-anchor" href="#commonjs-和-es6-module-的区别" aria-label="Permalink to &quot;commonjs 和 ES6 Module 的区别&quot;">​</a></h2><ul><li>语法不同</li><li>commonjs 是动态引入，执行时引入</li><li>ES6 Module 是静态引入，编译时引入</li></ul><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/yufabutonmga.png" alt="输入图片说明"></p><h2 id="path-resolve-和-path-join-的区别" tabindex="-1">path.resolve 和 path.join 的区别 <a class="header-anchor" href="#path-resolve-和-path-join-的区别" aria-label="Permalink to &quot;path.resolve 和 path.join 的区别&quot;">​</a></h2><ul><li>两者都是用于拼接文件路径</li><li>path.resolve 获取绝对路径</li><li>path.join 获取相对路径</li></ul><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/zhiojielaiba.png" alt="输入图片说明"></p><h2 id="事件循环-event-loop-在-nodejs-和浏览器的区别浏览器的区别" tabindex="-1">事件循环 event loop 在 nodejs 和浏览器的区别浏览器的区别 <a class="header-anchor" href="#事件循环-event-loop-在-nodejs-和浏览器的区别浏览器的区别" aria-label="Permalink to &quot;事件循环 event loop 在 nodejs 和浏览器的区别浏览器的区别&quot;">​</a></h2><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/loopsxun.png" alt="输入图片说明"></p><h2 id="cookie-如何实现登录" tabindex="-1">cookie 如何实现登录？ <a class="header-anchor" href="#cookie-如何实现登录" aria-label="Permalink to &quot;cookie 如何实现登录？&quot;">​</a></h2><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/co0okiedn.png" alt="输入图片说明"></p><h2 id="session-和-cookie-的关系" tabindex="-1">session 和 cookie 的关系 <a class="header-anchor" href="#session-和-cookie-的关系" aria-label="Permalink to &quot;session 和 cookie 的关系&quot;">​</a></h2><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/session-cookie.png" alt="输入图片说明"></p><h2 id="session-为何需要存储在-redis-中" tabindex="-1">session 为何需要存储在 redis 中？ <a class="header-anchor" href="#session-为何需要存储在-redis-中" aria-label="Permalink to &quot;session 为何需要存储在 redis 中？&quot;">​</a></h2><ul><li>进程有内存限制</li><li>进程的内存是相互隔离的</li></ul><h2 id="请描述-koa2-和-express-的中间件机制" tabindex="-1">请描述 koa2 和 express 的中间件机制 <a class="header-anchor" href="#请描述-koa2-和-express-的中间件机制" aria-label="Permalink to &quot;请描述 koa2 和 express 的中间件机制&quot;">​</a></h2><ul><li>从代码来看，中间件就是一个函数</li><li>从业务来看，中间件则是一个独立的模块</li><li>模块拆分，模块流传，即可完成复杂的功能</li></ul><h2 id="请描述-koa2-洋葱圈模型" tabindex="-1">请描述 koa2 洋葱圈模型 <a class="header-anchor" href="#请描述-koa2-洋葱圈模型" aria-label="Permalink to &quot;请描述 koa2 洋葱圈模型&quot;">​</a></h2><p><img src="https://blog-picgo-typora.oss-cn-hangzhou.aliyuncs.com/yangcongquan.png" alt="输入图片说明"></p>',31),n=[l];function t(r,h,c,d,p,u){return e(),o("div",null,n)}const b=a(i,[["render",t]]);export{j as __pageData,b as default};
